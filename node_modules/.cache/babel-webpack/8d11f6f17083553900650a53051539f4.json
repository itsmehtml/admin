{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\r\n   * @type {module:echarts/coord/polar/Polar}\r\n   */\n  coordinateSystem: null,\n\n  /**\r\n   * @param {string} axisType\r\n   * @return {module:echarts/coord/polar/AxisModel}\r\n   */\n  findAxisModel: function findAxisModel(axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/polar/PolarModel.js"],"names":["echarts","require","_default","extendComponentModel","type","dependencies","coordinateSystem","findAxisModel","axisType","foundAxisModel","ecModel","eachComponent","axisModel","getCoordSysModel","defaultOption","zlevel","z","center","radius","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEAA,OAAO,CAAC,aAAD,CAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,QAAQ,GAAGF,OAAO,CAACG,oBAAR,CAA6B;AAC1CC,EAAAA,IAAI,EAAE,OADoC;AAE1CC,EAAAA,YAAY,EAAE,CAAC,WAAD,EAAc,WAAd,CAF4B;;AAI1C;AACF;AACA;AACEC,EAAAA,gBAAgB,EAAE,IAPwB;;AAS1C;AACF;AACA;AACA;AACEC,EAAAA,aAAa,EAAE,uBAAUC,QAAV,EAAoB;AACjC,QAAIC,cAAJ;AACA,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACAA,IAAAA,OAAO,CAACC,aAAR,CAAsBH,QAAtB,EAAgC,UAAUI,SAAV,EAAqB;AACnD,UAAIA,SAAS,CAACC,gBAAV,OAAiC,IAArC,EAA2C;AACzCJ,QAAAA,cAAc,GAAGG,SAAjB;AACD;AACF,KAJD,EAIG,IAJH;AAKA,WAAOH,cAAP;AACD,GAtByC;AAuB1CK,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,CAAC,EAAE,CAFU;AAGbC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAHK;AAIbC,IAAAA,MAAM,EAAE;AAJK;AAvB2B,CAA7B,CAAf;;AA+BAC,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nrequire(\"./AxisModel\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendComponentModel({\r\n  type: 'polar',\r\n  dependencies: ['polarAxis', 'angleAxis'],\r\n\r\n  /**\r\n   * @type {module:echarts/coord/polar/Polar}\r\n   */\r\n  coordinateSystem: null,\r\n\r\n  /**\r\n   * @param {string} axisType\r\n   * @return {module:echarts/coord/polar/AxisModel}\r\n   */\r\n  findAxisModel: function (axisType) {\r\n    var foundAxisModel;\r\n    var ecModel = this.ecModel;\r\n    ecModel.eachComponent(axisType, function (axisModel) {\r\n      if (axisModel.getCoordSysModel() === this) {\r\n        foundAxisModel = axisModel;\r\n      }\r\n    }, this);\r\n    return foundAxisModel;\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '80%'\r\n  }\r\n});\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}