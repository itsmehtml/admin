{"ast":null,"code":"module.exports = function (hljs) {\n  var ARDUINO_KW = {\n    keyword: 'boolean byte word String',\n    built_in: 'setup loop' + 'KeyboardController MouseController SoftwareSerial ' + 'EthernetServer EthernetClient LiquidCrystal ' + 'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' + 'HttpClient RobotMotor WiFiClient GSMScanner ' + 'FileSystem Scheduler GSMServer YunClient YunServer ' + 'IPAddress GSMClient GSMModem Keyboard Ethernet ' + 'Console GSMBand Esplora Stepper Process ' + 'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' + 'Client Server GSMPIN FileIO Bridge Serial ' + 'EEPROM Stream Mouse Audio Servo File Task ' + 'GPRS WiFi Wire TFT GSM SPI SD ' + 'runShellCommandAsynchronously analogWriteResolution ' + 'retrieveCallingNumber printFirmwareVersion ' + 'analogReadResolution sendDigitalPortPair ' + 'noListenOnLocalhost readJoystickButton setFirmwareVersion ' + 'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' + 'scrollDisplayLeft writeMicroseconds delayMicroseconds ' + 'beginTransmission getSignalStrength runAsynchronously ' + 'getAsynchronously listenOnLocalhost getCurrentCarrier ' + 'readAccelerometer messageAvailable sendDigitalPorts ' + 'lineFollowConfig countryNameWrite runShellCommand ' + 'readStringUntil rewindDirectory readTemperature ' + 'setClockDivider readLightSensor endTransmission ' + 'analogReference detachInterrupt countryNameRead ' + 'attachInterrupt encryptionType readBytesUntil ' + 'robotNameWrite readMicrophone robotNameRead cityNameWrite ' + 'userNameWrite readJoystickY readJoystickX mouseReleased ' + 'openNextFile scanNetworks noInterrupts digitalWrite ' + 'beginSpeaker mousePressed isActionDone mouseDragged ' + 'displayLogos noAutoscroll addParameter remoteNumber ' + 'getModifiers keyboardRead userNameRead waitContinue ' + 'processInput parseCommand printVersion readNetworks ' + 'writeMessage blinkVersion cityNameRead readMessage ' + 'setDataMode parsePacket isListening setBitOrder ' + 'beginPacket isDirectory motorsWrite drawCompass ' + 'digitalRead clearScreen serialEvent rightToLeft ' + 'setTextSize leftToRight requestFrom keyReleased ' + 'compassRead analogWrite interrupts WiFiServer ' + 'disconnect playMelody parseFloat autoscroll ' + 'getPINUsed setPINUsed setTimeout sendAnalog ' + 'readSlider analogRead beginWrite createChar ' + 'motorsStop keyPressed tempoWrite readButton ' + 'subnetMask debugPrint macAddress writeGreen ' + 'randomSeed attachGPRS readString sendString ' + 'remotePort releaseAll mouseMoved background ' + 'getXChange getYChange answerCall getResult ' + 'voiceCall endPacket constrain getSocket writeJSON ' + 'getButton available connected findUntil readBytes ' + 'exitValue readGreen writeBlue startLoop IPAddress ' + 'isPressed sendSysex pauseMode gatewayIP setCursor ' + 'getOemKey tuneWrite noDisplay loadImage switchPIN ' + 'onRequest onReceive changePIN playFile noBuffer ' + 'parseInt overflow checkPIN knobRead beginTFT ' + 'bitClear updateIR bitWrite position writeRGB ' + 'highByte writeRed setSpeed readBlue noStroke ' + 'remoteIP transfer shutdown hangCall beginSMS ' + 'endWrite attached maintain noCursor checkReg ' + 'checkPUK shiftOut isValid shiftIn pulseIn ' + 'connect println localIP pinMode getIMEI ' + 'display noBlink process getBand running beginSD ' + 'drawBMP lowByte setBand release bitRead prepare ' + 'pointTo readRed setMode noFill remove listen ' + 'stroke detach attach noTone exists buffer ' + 'height bitSet circle config cursor random ' + 'IRread setDNS endSMS getKey micros ' + 'millis begin print write ready flush width ' + 'isPIN blink clear press mkdir rmdir close ' + 'point yield image BSSID click delay ' + 'read text move peek beep rect line open ' + 'seek fill size turn stop home find ' + 'step tone sqrt RSSI SSID ' + 'end bit tan cos sin pow map abs max ' + 'min get run put',\n    literal: 'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' + 'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' + 'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' + 'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' + 'DEFAULT OUTPUT INPUT HIGH LOW'\n  };\n  var ARDUINO = hljs.requireLanguage('cpp').rawDefinition();\n  var kws = ARDUINO.keywords;\n  kws.keyword += ' ' + ARDUINO_KW.keyword;\n  kws.literal += ' ' + ARDUINO_KW.literal;\n  kws.built_in += ' ' + ARDUINO_KW.built_in;\n  return ARDUINO;\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/arduino.js"],"names":["module","exports","hljs","ARDUINO_KW","keyword","built_in","literal","ARDUINO","requireLanguage","rawDefinition","kws","keywords"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAE/B,MAAIC,UAAU,GAAG;AACZC,IAAAA,OAAO,EACL,0BAFU;AAGZC,IAAAA,QAAQ,EACN,eACA,oDADA,GAEA,8CAFA,GAGA,mDAHA,GAIA,8CAJA,GAKA,qDALA,GAMA,iDANA,GAOA,0CAPA,GAQA,iDARA,GASA,4CATA,GAUA,4CAVA,GAWA,gCAXA,GAYA,sDAZA,GAaA,6CAbA,GAcA,2CAdA,GAeA,4DAfA,GAgBA,2DAhBA,GAiBA,wDAjBA,GAkBA,wDAlBA,GAmBA,wDAnBA,GAoBA,sDApBA,GAqBA,oDArBA,GAsBA,kDAtBA,GAuBA,kDAvBA,GAwBA,kDAxBA,GAyBA,gDAzBA,GA0BA,4DA1BA,GA2BA,0DA3BA,GA4BA,sDA5BA,GA6BA,sDA7BA,GA8BA,sDA9BA,GA+BA,sDA/BA,GAgCA,sDAhCA,GAiCA,qDAjCA,GAkCA,kDAlCA,GAmCA,kDAnCA,GAoCA,kDApCA,GAqCA,kDArCA,GAsCA,gDAtCA,GAuCA,8CAvCA,GAwCA,8CAxCA,GAyCA,8CAzCA,GA0CA,8CA1CA,GA2CA,8CA3CA,GA4CA,8CA5CA,GA6CA,8CA7CA,GA8CA,6CA9CA,GA+CA,oDA/CA,GAgDA,oDAhDA,GAiDA,oDAjDA,GAkDA,oDAlDA,GAmDA,oDAnDA,GAoDA,kDApDA,GAqDA,+CArDA,GAsDA,+CAtDA,GAuDA,+CAvDA,GAwDA,+CAxDA,GAyDA,+CAzDA,GA0DA,4CA1DA,GA2DA,0CA3DA,GA4DA,kDA5DA,GA6DA,kDA7DA,GA8DA,+CA9DA,GA+DA,4CA/DA,GAgEA,4CAhEA,GAiEA,qCAjEA,GAkEA,6CAlEA,GAmEA,4CAnEA,GAoEA,sCApEA,GAqEA,0CArEA,GAsEA,qCAtEA,GAuEA,2BAvEA,GAwEA,sCAxEA,GAyEA,iBA7EU;AA8EZC,IAAAA,OAAO,EACL,mDACA,4CADA,GAEA,qDAFA,GAGA,4CAHA,GAIA;AAnFU,GAAjB;AAsFC,MAAIC,OAAO,GAAGL,IAAI,CAACM,eAAL,CAAqB,KAArB,EAA4BC,aAA5B,EAAd;AAEA,MAAIC,GAAG,GAAGH,OAAO,CAACI,QAAlB;AAEAD,EAAAA,GAAG,CAACN,OAAJ,IAAe,MAAMD,UAAU,CAACC,OAAhC;AACAM,EAAAA,GAAG,CAACJ,OAAJ,IAAe,MAAMH,UAAU,CAACG,OAAhC;AACAI,EAAAA,GAAG,CAACL,QAAJ,IAAgB,MAAMF,UAAU,CAACE,QAAjC;AAEA,SAAOE,OAAP;AACD,CAjGD","sourcesContent":["module.exports = function(hljs) {\r\n\r\n\tvar ARDUINO_KW = {\r\n      keyword:\r\n        'boolean byte word String',\r\n      built_in:\r\n        'setup loop' +\r\n        'KeyboardController MouseController SoftwareSerial ' +\r\n        'EthernetServer EthernetClient LiquidCrystal ' +\r\n        'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\r\n        'HttpClient RobotMotor WiFiClient GSMScanner ' +\r\n        'FileSystem Scheduler GSMServer YunClient YunServer ' +\r\n        'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\r\n        'Console GSMBand Esplora Stepper Process ' +\r\n        'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\r\n        'Client Server GSMPIN FileIO Bridge Serial ' +\r\n        'EEPROM Stream Mouse Audio Servo File Task ' +\r\n        'GPRS WiFi Wire TFT GSM SPI SD ' +\r\n        'runShellCommandAsynchronously analogWriteResolution ' +\r\n        'retrieveCallingNumber printFirmwareVersion ' +\r\n        'analogReadResolution sendDigitalPortPair ' +\r\n        'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\r\n        'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\r\n        'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\r\n        'beginTransmission getSignalStrength runAsynchronously ' +\r\n        'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\r\n        'readAccelerometer messageAvailable sendDigitalPorts ' +\r\n        'lineFollowConfig countryNameWrite runShellCommand ' +\r\n        'readStringUntil rewindDirectory readTemperature ' +\r\n        'setClockDivider readLightSensor endTransmission ' +\r\n        'analogReference detachInterrupt countryNameRead ' +\r\n        'attachInterrupt encryptionType readBytesUntil ' +\r\n        'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\r\n        'userNameWrite readJoystickY readJoystickX mouseReleased ' +\r\n        'openNextFile scanNetworks noInterrupts digitalWrite ' +\r\n        'beginSpeaker mousePressed isActionDone mouseDragged ' +\r\n        'displayLogos noAutoscroll addParameter remoteNumber ' +\r\n        'getModifiers keyboardRead userNameRead waitContinue ' +\r\n        'processInput parseCommand printVersion readNetworks ' +\r\n        'writeMessage blinkVersion cityNameRead readMessage ' +\r\n        'setDataMode parsePacket isListening setBitOrder ' +\r\n        'beginPacket isDirectory motorsWrite drawCompass ' +\r\n        'digitalRead clearScreen serialEvent rightToLeft ' +\r\n        'setTextSize leftToRight requestFrom keyReleased ' +\r\n        'compassRead analogWrite interrupts WiFiServer ' +\r\n        'disconnect playMelody parseFloat autoscroll ' +\r\n        'getPINUsed setPINUsed setTimeout sendAnalog ' +\r\n        'readSlider analogRead beginWrite createChar ' +\r\n        'motorsStop keyPressed tempoWrite readButton ' +\r\n        'subnetMask debugPrint macAddress writeGreen ' +\r\n        'randomSeed attachGPRS readString sendString ' +\r\n        'remotePort releaseAll mouseMoved background ' +\r\n        'getXChange getYChange answerCall getResult ' +\r\n        'voiceCall endPacket constrain getSocket writeJSON ' +\r\n        'getButton available connected findUntil readBytes ' +\r\n        'exitValue readGreen writeBlue startLoop IPAddress ' +\r\n        'isPressed sendSysex pauseMode gatewayIP setCursor ' +\r\n        'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\r\n        'onRequest onReceive changePIN playFile noBuffer ' +\r\n        'parseInt overflow checkPIN knobRead beginTFT ' +\r\n        'bitClear updateIR bitWrite position writeRGB ' +\r\n        'highByte writeRed setSpeed readBlue noStroke ' +\r\n        'remoteIP transfer shutdown hangCall beginSMS ' +\r\n        'endWrite attached maintain noCursor checkReg ' +\r\n        'checkPUK shiftOut isValid shiftIn pulseIn ' +\r\n        'connect println localIP pinMode getIMEI ' +\r\n        'display noBlink process getBand running beginSD ' +\r\n        'drawBMP lowByte setBand release bitRead prepare ' +\r\n        'pointTo readRed setMode noFill remove listen ' +\r\n        'stroke detach attach noTone exists buffer ' +\r\n        'height bitSet circle config cursor random ' +\r\n        'IRread setDNS endSMS getKey micros ' +\r\n        'millis begin print write ready flush width ' +\r\n        'isPIN blink clear press mkdir rmdir close ' +\r\n        'point yield image BSSID click delay ' +\r\n        'read text move peek beep rect line open ' +\r\n        'seek fill size turn stop home find ' +\r\n        'step tone sqrt RSSI SSID ' +\r\n        'end bit tan cos sin pow map abs max ' +\r\n        'min get run put',\r\n      literal:\r\n        'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\r\n        'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\r\n        'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\r\n        'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\r\n        'DEFAULT OUTPUT INPUT HIGH LOW'\r\n  };\r\n\r\n  var ARDUINO = hljs.requireLanguage('cpp').rawDefinition();\r\n\r\n  var kws = ARDUINO.keywords;\r\n\r\n  kws.keyword += ' ' + ARDUINO_KW.keyword;\r\n  kws.literal += ' ' + ARDUINO_KW.literal;\r\n  kws.built_in += ' ' + ARDUINO_KW.built_in;\r\n\r\n  return ARDUINO;\r\n};"]},"metadata":{},"sourceType":"script"}