{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\r\n   * @readOnly\r\n   * @type {module:zrender/core/util#HashMap}\r\n   */\n  nameMap: null,\n\n  /**\r\n   * @override\r\n   */\n  init: function init(option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n\n  /**\r\n   * If there is no value of a certain point in the time for some event,set it value to 0.\r\n   *\r\n   * @param {Array} data  initial data in the option\r\n   * @return {Array}\r\n   */\n  fixData: function fixData(data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\r\n   * @override\r\n   * @param  {Object} option  the initial option that user gived\r\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\r\n   * @return {module:echarts/data/List}\r\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\r\n   * The raw data is divided into multiple layers and each layer\r\n   *     has same name.\r\n   *\r\n   * @return {Array.<Array.<number>>}\r\n   */\n  getLayerSeries: function getLayerSeries() {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n\n  /**\r\n   * Get data indices for show tooltip content\r\n    * @param {Array.<string>|string} dim  single coordinate dimension\r\n   * @param {number} value axis value\r\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\r\n   *     the themeRiver.\r\n   * @return {Object} {dataIndices, nestestValue}\r\n   */\n  getAxisTooltipData: function getAxisTooltipData(dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\r\n   * @override\r\n   * @param {number} dataIndex  index of data\r\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js"],"names":["SeriesModel","require","createDimensions","_dimensionHelper","getDimensionTypeByAxis","List","zrUtil","_model","groupData","_format","encodeHTML","LegendVisualProvider","DATA_NAME_INDEX","ThemeRiverSeries","extend","type","dependencies","nameMap","init","option","superApply","arguments","legendVisualProvider","bind","getData","getRawData","fixData","data","rawDataLength","length","groupResult","item","layData","buckets","each","items","key","push","name","dataList","layerNum","largestLayer","index","i","len","k","j","timeValue","keyIndex","l","value","getInitialData","ecModel","singleAxisModel","queryComponents","mainType","get","id","axisType","filterData","filter","dataItem","undefined","nameList","createHashMap","count","set","dimensionsInfo","coordDimensions","dimensionsDefine","encodeDefine","single","itemName","list","initData","getLayerSeries","lenCount","indexArr","timeDim","mapDimension","layerSeries","sort","index1","index2","indices","getAxisTooltipData","dim","baseAxis","isArray","nestestValue","minDist","Number","MAX_VALUE","nearestIdx","pointNum","theValue","dist","Math","abs","dataIndices","formatTooltip","dataIndex","htmlName","getName","htmlValue","isNaN","defaultOption","zlevel","z","coordinateSystem","boundaryGap","singleAxisIndex","animationEasing","label","margin","show","position","color","fontSize","emphasis","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oCAAD,CAA9B;;AAEA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mCAAD,CAA9B;;AAEA,IAAIG,sBAAsB,GAAGD,gBAAgB,CAACC,sBAA9C;;AAEA,IAAIC,IAAI,GAAGJ,OAAO,CAAC,iBAAD,CAAlB;;AAEA,IAAIK,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIM,MAAM,GAAGN,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAIO,SAAS,GAAGD,MAAM,CAACC,SAAvB;;AAEA,IAAIC,OAAO,GAAGR,OAAO,CAAC,mBAAD,CAArB;;AAEA,IAAIS,UAAU,GAAGD,OAAO,CAACC,UAAzB;;AAEA,IAAIC,oBAAoB,GAAGV,OAAO,CAAC,mCAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIW,eAAe,GAAG,CAAtB;AACA,IAAIC,gBAAgB,GAAGb,WAAW,CAACc,MAAZ,CAAmB;AACxCC,EAAAA,IAAI,EAAE,mBADkC;AAExCC,EAAAA,YAAY,EAAE,CAAC,YAAD,CAF0B;;AAIxC;AACF;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,IAR+B;;AAUxC;AACF;AACA;AACEC,EAAAA,IAAI,EAAE,cAAUC,MAAV,EAAkB;AACtB;AACAN,IAAAA,gBAAgB,CAACO,UAAjB,CAA4B,IAA5B,EAAkC,MAAlC,EAA0CC,SAA1C,EAFsB,CAEgC;AACtD;AACA;;AAEA,SAAKC,oBAAL,GAA4B,IAAIX,oBAAJ,CAAyBL,MAAM,CAACiB,IAAP,CAAY,KAAKC,OAAjB,EAA0B,IAA1B,CAAzB,EAA0DlB,MAAM,CAACiB,IAAP,CAAY,KAAKE,UAAjB,EAA6B,IAA7B,CAA1D,CAA5B;AACD,GApBuC;;AAsBxC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,iBAAUC,IAAV,EAAgB;AACvB,QAAIC,aAAa,GAAGD,IAAI,CAACE,MAAzB,CADuB,CACU;;AAEjC,QAAIC,WAAW,GAAGtB,SAAS,CAACmB,IAAD,EAAO,UAAUI,IAAV,EAAgB;AAChD,aAAOA,IAAI,CAAC,CAAD,CAAX;AACD,KAF0B,CAA3B;AAGA,QAAIC,OAAO,GAAG,EAAd;AACAF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,IAApB,CAAyB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC7CJ,MAAAA,OAAO,CAACK,IAAR,CAAa;AACXC,QAAAA,IAAI,EAAEF,GADK;AAEXG,QAAAA,QAAQ,EAAEJ;AAFC,OAAb;AAID,KALD;AAMA,QAAIK,QAAQ,GAAGR,OAAO,CAACH,MAAvB;AACA,QAAIY,YAAY,GAAG,CAAC,CAApB;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8B,EAAEG,CAAhC,EAAmC;AACjC,UAAIC,GAAG,GAAGZ,OAAO,CAACW,CAAD,CAAP,CAAWJ,QAAX,CAAoBV,MAA9B;;AAEA,UAAIe,GAAG,GAAGH,YAAV,EAAwB;AACtBA,QAAAA,YAAY,GAAGG,GAAf;AACAF,QAAAA,KAAK,GAAGC,CAAR;AACD;AACF;;AAED,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8B,EAAEK,CAAhC,EAAmC;AACjC,UAAIA,CAAC,KAAKH,KAAV,EAAiB;AACf;AACD;;AAED,UAAIJ,IAAI,GAAGN,OAAO,CAACa,CAAD,CAAP,CAAWP,IAAtB;;AAEA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAApB,EAAkC,EAAEK,CAApC,EAAuC;AACrC,YAAIC,SAAS,GAAGf,OAAO,CAACU,KAAD,CAAP,CAAeH,QAAf,CAAwBO,CAAxB,EAA2B,CAA3B,CAAhB;AACA,YAAIjB,MAAM,GAAGG,OAAO,CAACa,CAAD,CAAP,CAAWN,QAAX,CAAoBV,MAAjC;AACA,YAAImB,QAAQ,GAAG,CAAC,CAAhB;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,MAApB,EAA4B,EAAEoB,CAA9B,EAAiC;AAC/B,cAAIC,KAAK,GAAGlB,OAAO,CAACa,CAAD,CAAP,CAAWN,QAAX,CAAoBU,CAApB,EAAuB,CAAvB,CAAZ;;AAEA,cAAIC,KAAK,KAAKH,SAAd,EAAyB;AACvBC,YAAAA,QAAQ,GAAGC,CAAX;AACA;AACD;AACF;;AAED,YAAID,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBrB,UAAAA,IAAI,CAACC,aAAD,CAAJ,GAAsB,EAAtB;AACAD,UAAAA,IAAI,CAACC,aAAD,CAAJ,CAAoB,CAApB,IAAyBmB,SAAzB;AACApB,UAAAA,IAAI,CAACC,aAAD,CAAJ,CAAoB,CAApB,IAAyB,CAAzB;AACAD,UAAAA,IAAI,CAACC,aAAD,CAAJ,CAAoB,CAApB,IAAyBU,IAAzB;AACAV,UAAAA,aAAa;AACd;AACF;AACF;;AAED,WAAOD,IAAP;AACD,GAtFuC;;AAwFxC;AACF;AACA;AACA;AACA;AACA;AACEwB,EAAAA,cAAc,EAAE,wBAAUhC,MAAV,EAAkBiC,OAAlB,EAA2B;AACzC,QAAIC,eAAe,GAAGD,OAAO,CAACE,eAAR,CAAwB;AAC5CC,MAAAA,QAAQ,EAAE,YADkC;AAE5Cb,MAAAA,KAAK,EAAE,KAAKc,GAAL,CAAS,iBAAT,CAFqC;AAG5CC,MAAAA,EAAE,EAAE,KAAKD,GAAL,CAAS,cAAT;AAHwC,KAAxB,EAInB,CAJmB,CAAtB;AAKA,QAAIE,QAAQ,GAAGL,eAAe,CAACG,GAAhB,CAAoB,MAApB,CAAf,CANyC,CAMG;;AAE5C,QAAIG,UAAU,GAAGrD,MAAM,CAACsD,MAAP,CAAczC,MAAM,CAACQ,IAArB,EAA2B,UAAUkC,QAAV,EAAoB;AAC9D,aAAOA,QAAQ,CAAC,CAAD,CAAR,KAAgBC,SAAvB;AACD,KAFgB,CAAjB,CARyC,CAUrC;;AAEJ,QAAInC,IAAI,GAAG,KAAKD,OAAL,CAAaiC,UAAU,IAAI,EAA3B,CAAX;AACA,QAAII,QAAQ,GAAG,EAAf;AACA,QAAI9C,OAAO,GAAG,KAAKA,OAAL,GAAeX,MAAM,CAAC0D,aAAP,EAA7B;AACA,QAAIC,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,IAAI,CAACE,MAAzB,EAAiC,EAAEc,CAAnC,EAAsC;AACpCoB,MAAAA,QAAQ,CAAC1B,IAAT,CAAcV,IAAI,CAACgB,CAAD,CAAJ,CAAQ/B,eAAR,CAAd;;AAEA,UAAI,CAACK,OAAO,CAACuC,GAAR,CAAY7B,IAAI,CAACgB,CAAD,CAAJ,CAAQ/B,eAAR,CAAZ,CAAL,EAA4C;AAC1CK,QAAAA,OAAO,CAACiD,GAAR,CAAYvC,IAAI,CAACgB,CAAD,CAAJ,CAAQ/B,eAAR,CAAZ,EAAsCqD,KAAtC;AACAA,QAAAA,KAAK;AACN;AACF;;AAED,QAAIE,cAAc,GAAGjE,gBAAgB,CAACyB,IAAD,EAAO;AAC1CyC,MAAAA,eAAe,EAAE,CAAC,QAAD,CADyB;AAE1CC,MAAAA,gBAAgB,EAAE,CAAC;AACjB/B,QAAAA,IAAI,EAAE,MADW;AAEjBvB,QAAAA,IAAI,EAAEX,sBAAsB,CAACsD,QAAD;AAFX,OAAD,EAGf;AACDpB,QAAAA,IAAI,EAAE,OADL;AAEDvB,QAAAA,IAAI,EAAE;AAFL,OAHe,EAMf;AACDuB,QAAAA,IAAI,EAAE,MADL;AAEDvB,QAAAA,IAAI,EAAE;AAFL,OANe,CAFwB;AAY1CuD,MAAAA,YAAY,EAAE;AACZC,QAAAA,MAAM,EAAE,CADI;AAEZrB,QAAAA,KAAK,EAAE,CAFK;AAGZsB,QAAAA,QAAQ,EAAE;AAHE;AAZ4B,KAAP,CAArC;AAkBA,QAAIC,IAAI,GAAG,IAAIpE,IAAJ,CAAS8D,cAAT,EAAyB,IAAzB,CAAX;AACAM,IAAAA,IAAI,CAACC,QAAL,CAAc/C,IAAd;AACA,WAAO8C,IAAP;AACD,GA7IuC;;AA+IxC;AACF;AACA;AACA;AACA;AACA;AACEE,EAAAA,cAAc,EAAE,0BAAY;AAC1B,QAAIhD,IAAI,GAAG,KAAKH,OAAL,EAAX;AACA,QAAIoD,QAAQ,GAAGjD,IAAI,CAACsC,KAAL,EAAf;AACA,QAAIY,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,QAApB,EAA8B,EAAEjC,CAAhC,EAAmC;AACjCkC,MAAAA,QAAQ,CAAClC,CAAD,CAAR,GAAcA,CAAd;AACD;;AAED,QAAImC,OAAO,GAAGnD,IAAI,CAACoD,YAAL,CAAkB,QAAlB,CAAd,CAT0B,CASiB;;AAE3C,QAAIjD,WAAW,GAAGtB,SAAS,CAACqE,QAAD,EAAW,UAAUnC,KAAV,EAAiB;AACrD,aAAOf,IAAI,CAAC6B,GAAL,CAAS,MAAT,EAAiBd,KAAjB,CAAP;AACD,KAF0B,CAA3B;AAGA,QAAIsC,WAAW,GAAG,EAAlB;AACAlD,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,IAApB,CAAyB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC7CD,MAAAA,KAAK,CAAC8C,IAAN,CAAW,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACnC,eAAOxD,IAAI,CAAC6B,GAAL,CAASsB,OAAT,EAAkBI,MAAlB,IAA4BvD,IAAI,CAAC6B,GAAL,CAASsB,OAAT,EAAkBK,MAAlB,CAAnC;AACD,OAFD;AAGAH,MAAAA,WAAW,CAAC3C,IAAZ,CAAiB;AACfC,QAAAA,IAAI,EAAEF,GADS;AAEfgD,QAAAA,OAAO,EAAEjD;AAFM,OAAjB;AAID,KARD;AASA,WAAO6C,WAAP;AACD,GA9KuC;;AAgLxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEK,EAAAA,kBAAkB,EAAE,4BAAUC,GAAV,EAAepC,KAAf,EAAsBqC,QAAtB,EAAgC;AAClD,QAAI,CAACjF,MAAM,CAACkF,OAAP,CAAeF,GAAf,CAAL,EAA0B;AACxBA,MAAAA,GAAG,GAAGA,GAAG,GAAG,CAACA,GAAD,CAAH,GAAW,EAApB;AACD;;AAED,QAAI3D,IAAI,GAAG,KAAKH,OAAL,EAAX;AACA,QAAIwD,WAAW,GAAG,KAAKL,cAAL,EAAlB;AACA,QAAIS,OAAO,GAAG,EAAd;AACA,QAAI5C,QAAQ,GAAGwC,WAAW,CAACnD,MAA3B;AACA,QAAI4D,YAAJ;;AAEA,SAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8B,EAAEG,CAAhC,EAAmC;AACjC,UAAI+C,OAAO,GAAGC,MAAM,CAACC,SAArB;AACA,UAAIC,UAAU,GAAG,CAAC,CAAlB;AACA,UAAIC,QAAQ,GAAGd,WAAW,CAACrC,CAAD,CAAX,CAAeyC,OAAf,CAAuBvD,MAAtC;;AAEA,WAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgD,QAApB,EAA8B,EAAEhD,CAAhC,EAAmC;AACjC,YAAIiD,QAAQ,GAAGpE,IAAI,CAAC6B,GAAL,CAAS8B,GAAG,CAAC,CAAD,CAAZ,EAAiBN,WAAW,CAACrC,CAAD,CAAX,CAAeyC,OAAf,CAAuBtC,CAAvB,CAAjB,CAAf;AACA,YAAIkD,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAQ,GAAG7C,KAApB,CAAX;;AAEA,YAAI8C,IAAI,IAAIN,OAAZ,EAAqB;AACnBD,UAAAA,YAAY,GAAGM,QAAf;AACAL,UAAAA,OAAO,GAAGM,IAAV;AACAH,UAAAA,UAAU,GAAGb,WAAW,CAACrC,CAAD,CAAX,CAAeyC,OAAf,CAAuBtC,CAAvB,CAAb;AACD;AACF;;AAEDsC,MAAAA,OAAO,CAAC/C,IAAR,CAAawD,UAAb;AACD;;AAED,WAAO;AACLM,MAAAA,WAAW,EAAEf,OADR;AAELK,MAAAA,YAAY,EAAEA;AAFT,KAAP;AAID,GA1NuC;;AA4NxC;AACF;AACA;AACA;AACEW,EAAAA,aAAa,EAAE,uBAAUC,SAAV,EAAqB;AAClC,QAAI1E,IAAI,GAAG,KAAKH,OAAL,EAAX;AACA,QAAI8E,QAAQ,GAAG3E,IAAI,CAAC4E,OAAL,CAAaF,SAAb,CAAf;AACA,QAAIG,SAAS,GAAG7E,IAAI,CAAC6B,GAAL,CAAS7B,IAAI,CAACoD,YAAL,CAAkB,OAAlB,CAAT,EAAqCsB,SAArC,CAAhB;;AAEA,QAAII,KAAK,CAACD,SAAD,CAAL,IAAoBA,SAAS,IAAI,IAArC,EAA2C;AACzCA,MAAAA,SAAS,GAAG,GAAZ;AACD;;AAED,WAAO9F,UAAU,CAAC4F,QAAQ,GAAG,KAAX,GAAmBE,SAApB,CAAjB;AACD,GA1OuC;AA2OxCE,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,CAAC,EAAE,CAFU;AAGbC,IAAAA,gBAAgB,EAAE,YAHL;AAIb;AACAC,IAAAA,WAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,CALA;AAMb;AACAC,IAAAA,eAAe,EAAE,CAPJ;AAQbC,IAAAA,eAAe,EAAE,QARJ;AASbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,CADH;AAELC,MAAAA,IAAI,EAAE,IAFD;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,QAAQ,EAAE;AALL,KATM;AAgBbC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,KAAK,EAAE;AACLE,QAAAA,IAAI,EAAE;AADD;AADC;AAhBG;AA3OyB,CAAnB,CAAvB;AAkQA,IAAIK,QAAQ,GAAG3G,gBAAf;AACA4G,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createDimensions = require(\"../../data/helper/createDimensions\");\r\n\r\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\r\n\r\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\r\n\r\nvar List = require(\"../../data/List\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar groupData = _model.groupData;\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DATA_NAME_INDEX = 2;\r\nvar ThemeRiverSeries = SeriesModel.extend({\r\n  type: 'series.themeRiver',\r\n  dependencies: ['singleAxis'],\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {module:zrender/core/util#HashMap}\r\n   */\r\n  nameMap: null,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  init: function (option) {\r\n    // eslint-disable-next-line\r\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\r\n    // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  },\r\n\r\n  /**\r\n   * If there is no value of a certain point in the time for some event,set it value to 0.\r\n   *\r\n   * @param {Array} data  initial data in the option\r\n   * @return {Array}\r\n   */\r\n  fixData: function (data) {\r\n    var rawDataLength = data.length; // grouped data by name\r\n\r\n    var groupResult = groupData(data, function (item) {\r\n      return item[2];\r\n    });\r\n    var layData = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      layData.push({\r\n        name: key,\r\n        dataList: items\r\n      });\r\n    });\r\n    var layerNum = layData.length;\r\n    var largestLayer = -1;\r\n    var index = -1;\r\n\r\n    for (var i = 0; i < layerNum; ++i) {\r\n      var len = layData[i].dataList.length;\r\n\r\n      if (len > largestLayer) {\r\n        largestLayer = len;\r\n        index = i;\r\n      }\r\n    }\r\n\r\n    for (var k = 0; k < layerNum; ++k) {\r\n      if (k === index) {\r\n        continue;\r\n      }\r\n\r\n      var name = layData[k].name;\r\n\r\n      for (var j = 0; j < largestLayer; ++j) {\r\n        var timeValue = layData[index].dataList[j][0];\r\n        var length = layData[k].dataList.length;\r\n        var keyIndex = -1;\r\n\r\n        for (var l = 0; l < length; ++l) {\r\n          var value = layData[k].dataList[l][0];\r\n\r\n          if (value === timeValue) {\r\n            keyIndex = l;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (keyIndex === -1) {\r\n          data[rawDataLength] = [];\r\n          data[rawDataLength][0] = timeValue;\r\n          data[rawDataLength][1] = 0;\r\n          data[rawDataLength][2] = name;\r\n          rawDataLength++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param  {Object} option  the initial option that user gived\r\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\r\n   * @return {module:echarts/data/List}\r\n   */\r\n  getInitialData: function (option, ecModel) {\r\n    var singleAxisModel = ecModel.queryComponents({\r\n      mainType: 'singleAxis',\r\n      index: this.get('singleAxisIndex'),\r\n      id: this.get('singleAxisId')\r\n    })[0];\r\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\r\n\r\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\r\n      return dataItem[2] !== undefined;\r\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\r\n\r\n    var data = this.fixData(filterData || []);\r\n    var nameList = [];\r\n    var nameMap = this.nameMap = zrUtil.createHashMap();\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < data.length; ++i) {\r\n      nameList.push(data[i][DATA_NAME_INDEX]);\r\n\r\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\r\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    var dimensionsInfo = createDimensions(data, {\r\n      coordDimensions: ['single'],\r\n      dimensionsDefine: [{\r\n        name: 'time',\r\n        type: getDimensionTypeByAxis(axisType)\r\n      }, {\r\n        name: 'value',\r\n        type: 'float'\r\n      }, {\r\n        name: 'name',\r\n        type: 'ordinal'\r\n      }],\r\n      encodeDefine: {\r\n        single: 0,\r\n        value: 1,\r\n        itemName: 2\r\n      }\r\n    });\r\n    var list = new List(dimensionsInfo, this);\r\n    list.initData(data);\r\n    return list;\r\n  },\r\n\r\n  /**\r\n   * The raw data is divided into multiple layers and each layer\r\n   *     has same name.\r\n   *\r\n   * @return {Array.<Array.<number>>}\r\n   */\r\n  getLayerSeries: function () {\r\n    var data = this.getData();\r\n    var lenCount = data.count();\r\n    var indexArr = [];\r\n\r\n    for (var i = 0; i < lenCount; ++i) {\r\n      indexArr[i] = i;\r\n    }\r\n\r\n    var timeDim = data.mapDimension('single'); // data group by name\r\n\r\n    var groupResult = groupData(indexArr, function (index) {\r\n      return data.get('name', index);\r\n    });\r\n    var layerSeries = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      items.sort(function (index1, index2) {\r\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\r\n      });\r\n      layerSeries.push({\r\n        name: key,\r\n        indices: items\r\n      });\r\n    });\r\n    return layerSeries;\r\n  },\r\n\r\n  /**\r\n   * Get data indices for show tooltip content\r\n    * @param {Array.<string>|string} dim  single coordinate dimension\r\n   * @param {number} value axis value\r\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\r\n   *     the themeRiver.\r\n   * @return {Object} {dataIndices, nestestValue}\r\n   */\r\n  getAxisTooltipData: function (dim, value, baseAxis) {\r\n    if (!zrUtil.isArray(dim)) {\r\n      dim = dim ? [dim] : [];\r\n    }\r\n\r\n    var data = this.getData();\r\n    var layerSeries = this.getLayerSeries();\r\n    var indices = [];\r\n    var layerNum = layerSeries.length;\r\n    var nestestValue;\r\n\r\n    for (var i = 0; i < layerNum; ++i) {\r\n      var minDist = Number.MAX_VALUE;\r\n      var nearestIdx = -1;\r\n      var pointNum = layerSeries[i].indices.length;\r\n\r\n      for (var j = 0; j < pointNum; ++j) {\r\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\r\n        var dist = Math.abs(theValue - value);\r\n\r\n        if (dist <= minDist) {\r\n          nestestValue = theValue;\r\n          minDist = dist;\r\n          nearestIdx = layerSeries[i].indices[j];\r\n        }\r\n      }\r\n\r\n      indices.push(nearestIdx);\r\n    }\r\n\r\n    return {\r\n      dataIndices: indices,\r\n      nestestValue: nestestValue\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   * @param {number} dataIndex  index of data\r\n   */\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var htmlName = data.getName(dataIndex);\r\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\r\n\r\n    if (isNaN(htmlValue) || htmlValue == null) {\r\n      htmlValue = '-';\r\n    }\r\n\r\n    return encodeHTML(htmlName + ' : ' + htmlValue);\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'singleAxis',\r\n    // gap in axis's orthogonal orientation\r\n    boundaryGap: ['10%', '10%'],\r\n    // legendHoverLink: true,\r\n    singleAxisIndex: 0,\r\n    animationEasing: 'linear',\r\n    label: {\r\n      margin: 4,\r\n      show: true,\r\n      position: 'left',\r\n      color: '#000',\r\n      fontSize: 11\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  }\r\n});\r\nvar _default = ThemeRiverSeries;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}