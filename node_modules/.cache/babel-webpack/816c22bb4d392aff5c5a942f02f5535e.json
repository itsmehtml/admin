{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar _getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar _default = {\n  getLineStyle: function getLineStyle(excludes) {\n    var style = _getLineStyle(this, excludes); // Always set lineDash whether dashed, otherwise we can not\n    // erase the previous style when assigning to el.style.\n\n\n    style.lineDash = this.getLineDash(style.lineWidth);\n    return style;\n  },\n  getLineDash: function getLineDash(lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? // Use `false` but not `null` for the solid line here, because `null` might be\n    // ignored when assigning to `el.style`. e.g., when setting `lineStyle.type` as\n    // `'dashed'` and `emphasis.lineStyle.type` as `'solid'` in graph series, the\n    // `lineDash` gotten form the latter one is not able to erase that from the former\n    // one if using `null` here according to the emhpsis strategy in `util/graphic.js`.\n    false : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/model/mixin/lineStyle.js"],"names":["makeStyleMapper","require","getLineStyle","_default","excludes","style","lineDash","getLineDash","lineWidth","lineType","get","dotSize","Math","max","dashSize","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,aAAY,GAAGF,eAAe,CAAC,CAAC,CAAC,WAAD,EAAc,OAAd,CAAD,EAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C,CAAC,SAAD,CAA9C,EAA2D,CAAC,YAAD,CAA3D,EAA2E,CAAC,eAAD,CAA3E,EAA8F,CAAC,eAAD,CAA9F,EAAiH,CAAC,aAAD,CAAjH,CAAD,CAAlC;;AACA,IAAIG,QAAQ,GAAG;AACbD,EAAAA,YAAY,EAAE,sBAAUE,QAAV,EAAoB;AAChC,QAAIC,KAAK,GAAGH,aAAY,CAAC,IAAD,EAAOE,QAAP,CAAxB,CADgC,CACU;AAC1C;;;AAEAC,IAAAA,KAAK,CAACC,QAAN,GAAiB,KAAKC,WAAL,CAAiBF,KAAK,CAACG,SAAvB,CAAjB;AACA,WAAOH,KAAP;AACD,GAPY;AAQbE,EAAAA,WAAW,EAAE,qBAAUC,SAAV,EAAqB;AAChC,QAAIA,SAAS,IAAI,IAAjB,EAAuB;AACrBA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAED,QAAIC,QAAQ,GAAG,KAAKC,GAAL,CAAS,MAAT,CAAf;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASL,SAAT,EAAoB,CAApB,CAAd;AACA,QAAIM,QAAQ,GAAGN,SAAS,GAAG,CAA3B;AACA,WAAOC,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,IAAI,IAApC,GAA2C;AAClD;AACA;AACA;AACA;AACA,SALO,GAKCA,QAAQ,KAAK,QAAb,GAAwB,CAACK,QAAD,EAAWA,QAAX,CAAxB,GAA+C,CAACH,OAAD,EAAUA,OAAV,CALvD;AAMD;AAtBY,CAAf;AAwBAI,MAAM,CAACC,OAAP,GAAiBb,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar makeStyleMapper = require(\"./makeStyleMapper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\r\nvar _default = {\r\n  getLineStyle: function (excludes) {\r\n    var style = getLineStyle(this, excludes); // Always set lineDash whether dashed, otherwise we can not\r\n    // erase the previous style when assigning to el.style.\r\n\r\n    style.lineDash = this.getLineDash(style.lineWidth);\r\n    return style;\r\n  },\r\n  getLineDash: function (lineWidth) {\r\n    if (lineWidth == null) {\r\n      lineWidth = 1;\r\n    }\r\n\r\n    var lineType = this.get('type');\r\n    var dotSize = Math.max(lineWidth, 2);\r\n    var dashSize = lineWidth * 4;\r\n    return lineType === 'solid' || lineType == null ? // Use `false` but not `null` for the solid line here, because `null` might be\r\n    // ignored when assigning to `el.style`. e.g., when setting `lineStyle.type` as\r\n    // `'dashed'` and `emphasis.lineStyle.type` as `'solid'` in graph series, the\r\n    // `lineDash` gotten form the latter one is not able to erase that from the former\r\n    // one if using `null` here according to the emhpsis strategy in `util/graphic.js`.\r\n    false : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\r\n  }\r\n};\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}