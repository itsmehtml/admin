{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function init() {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function _updateGroupTransform(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js"],"names":["echarts","require","SymbolDraw","EffectSymbol","matrix","pointsLayout","_default","extendChartView","type","init","_symbolDraw","render","seriesModel","ecModel","api","data","getData","effectSymbolDraw","updateData","group","add","updateTransform","dirty","res","reset","progress","start","end","count","updateLayout","_updateGroupTransform","coordSys","coordinateSystem","getRoamTransform","transform","clone","decomposeTransform","remove","dispose","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AAEA,IAAIE,YAAY,GAAGF,OAAO,CAAC,wBAAD,CAA1B;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,yBAAD,CAApB;;AAEA,IAAII,YAAY,GAAGJ,OAAO,CAAC,qBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,QAAQ,GAAGN,OAAO,CAACO,eAAR,CAAwB;AACrCC,EAAAA,IAAI,EAAE,eAD+B;AAErCC,EAAAA,IAAI,EAAE,gBAAY;AAChB,SAAKC,WAAL,GAAmB,IAAIR,UAAJ,CAAeC,YAAf,CAAnB;AACD,GAJoC;AAKrCQ,EAAAA,MAAM,EAAE,gBAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC3C,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;AACA,QAAIC,gBAAgB,GAAG,KAAKP,WAA5B;AACAO,IAAAA,gBAAgB,CAACC,UAAjB,CAA4BH,IAA5B;AACA,SAAKI,KAAL,CAAWC,GAAX,CAAeH,gBAAgB,CAACE,KAAhC;AACD,GAVoC;AAWrCE,EAAAA,eAAe,EAAE,yBAAUT,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AACpD,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;AACA,SAAKG,KAAL,CAAWG,KAAX;AACA,QAAIC,GAAG,GAAGlB,YAAY,GAAGmB,KAAf,CAAqBZ,WAArB,CAAV;;AAEA,QAAIW,GAAG,CAACE,QAAR,EAAkB;AAChBF,MAAAA,GAAG,CAACE,QAAJ,CAAa;AACXC,QAAAA,KAAK,EAAE,CADI;AAEXC,QAAAA,GAAG,EAAEZ,IAAI,CAACa,KAAL;AAFM,OAAb,EAGGb,IAHH;AAID;;AAED,SAAKL,WAAL,CAAiBmB,YAAjB,CAA8Bd,IAA9B;AACD,GAxBoC;AAyBrCe,EAAAA,qBAAqB,EAAE,+BAAUlB,WAAV,EAAuB;AAC5C,QAAImB,QAAQ,GAAGnB,WAAW,CAACoB,gBAA3B;;AAEA,QAAID,QAAQ,IAAIA,QAAQ,CAACE,gBAAzB,EAA2C;AACzC,WAAKd,KAAL,CAAWe,SAAX,GAAuB9B,MAAM,CAAC+B,KAAP,CAAaJ,QAAQ,CAACE,gBAAT,EAAb,CAAvB;AACA,WAAKd,KAAL,CAAWiB,kBAAX;AACD;AACF,GAhCoC;AAiCrCC,EAAAA,MAAM,EAAE,gBAAUxB,OAAV,EAAmBC,GAAnB,EAAwB;AAC9B,SAAKJ,WAAL,IAAoB,KAAKA,WAAL,CAAiB2B,MAAjB,CAAwBvB,GAAxB,CAApB;AACD,GAnCoC;AAoCrCwB,EAAAA,OAAO,EAAE,mBAAY,CAAE;AApCc,CAAxB,CAAf;;AAuCAC,MAAM,CAACC,OAAP,GAAiBlC,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar pointsLayout = require(\"../../layout/points\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = echarts.extendChartView({\r\n  type: 'effectScatter',\r\n  init: function () {\r\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\r\n  },\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var effectSymbolDraw = this._symbolDraw;\r\n    effectSymbolDraw.updateData(data);\r\n    this.group.add(effectSymbolDraw.group);\r\n  },\r\n  updateTransform: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    this.group.dirty();\r\n    var res = pointsLayout().reset(seriesModel);\r\n\r\n    if (res.progress) {\r\n      res.progress({\r\n        start: 0,\r\n        end: data.count()\r\n      }, data);\r\n    }\r\n\r\n    this._symbolDraw.updateLayout(data);\r\n  },\r\n  _updateGroupTransform: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.getRoamTransform) {\r\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\r\n      this.group.decomposeTransform();\r\n    }\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(api);\r\n  },\r\n  dispose: function () {}\r\n});\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}