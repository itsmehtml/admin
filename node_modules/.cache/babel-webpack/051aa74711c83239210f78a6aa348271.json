{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// import * as axisHelper from './axisHelper';\n\n\nvar _default = {\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\r\n   */\n  getMin: function getMin(origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\r\n   */\n  getMax: function getMax(origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\r\n   * @return {boolean}\r\n   */\n  getNeedCrossZero: function getNeedCrossZero() {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\r\n   * Should be implemented by each axis model if necessary.\r\n   * @return {module:echarts/model/Component} coordinate system model\r\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\r\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\r\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\r\n   */\n  setRange: function setRange(rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\r\n   * Reset range\r\n   */\n  resetRange: function resetRange() {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/axisModelCommonMixin.js"],"names":["zrUtil","require","_default","getMin","origin","option","min","rangeStart","axis","eqNaN","scale","parse","getMax","max","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,QAAQ,GAAG;AACb;AACF;AACA;AACA;AACEC,EAAAA,MAAM,EAAE,gBAAUC,MAAV,EAAkB;AACxB,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIC,GAAG,GAAG,CAACF,MAAD,IAAWC,MAAM,CAACE,UAAP,IAAqB,IAAhC,GAAuCF,MAAM,CAACE,UAA9C,GAA2DF,MAAM,CAACC,GAA5E;;AAEA,QAAI,KAAKE,IAAL,IAAaF,GAAG,IAAI,IAApB,IAA4BA,GAAG,KAAK,SAApC,IAAiD,OAAOA,GAAP,KAAe,UAAhE,IAA8E,CAACN,MAAM,CAACS,KAAP,CAAaH,GAAb,CAAnF,EAAsG;AACpGA,MAAAA,GAAG,GAAG,KAAKE,IAAL,CAAUE,KAAV,CAAgBC,KAAhB,CAAsBL,GAAtB,CAAN;AACD;;AAED,WAAOA,GAAP;AACD,GAdY;;AAgBb;AACF;AACA;AACA;AACEM,EAAAA,MAAM,EAAE,gBAAUR,MAAV,EAAkB;AACxB,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIQ,GAAG,GAAG,CAACT,MAAD,IAAWC,MAAM,CAACS,QAAP,IAAmB,IAA9B,GAAqCT,MAAM,CAACS,QAA5C,GAAuDT,MAAM,CAACQ,GAAxE;;AAEA,QAAI,KAAKL,IAAL,IAAaK,GAAG,IAAI,IAApB,IAA4BA,GAAG,KAAK,SAApC,IAAiD,OAAOA,GAAP,KAAe,UAAhE,IAA8E,CAACb,MAAM,CAACS,KAAP,CAAaI,GAAb,CAAnF,EAAsG;AACpGA,MAAAA,GAAG,GAAG,KAAKL,IAAL,CAAUE,KAAV,CAAgBC,KAAhB,CAAsBE,GAAtB,CAAN;AACD;;AAED,WAAOA,GAAP;AACD,GA7BY;;AA+Bb;AACF;AACA;AACEE,EAAAA,gBAAgB,EAAE,4BAAY;AAC5B,QAAIV,MAAM,GAAG,KAAKA,MAAlB;AACA,WAAOA,MAAM,CAACE,UAAP,IAAqB,IAArB,IAA6BF,MAAM,CAACS,QAAP,IAAmB,IAAhD,GAAuD,KAAvD,GAA+D,CAACT,MAAM,CAACK,KAA9E;AACD,GArCY;;AAuCb;AACF;AACA;AACA;AACEM,EAAAA,gBAAgB,EAAEhB,MAAM,CAACiB,IA3CZ;;AA6Cb;AACF;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,kBAAUX,UAAV,EAAsBO,QAAtB,EAAgC;AACxC,SAAKT,MAAL,CAAYE,UAAZ,GAAyBA,UAAzB;AACA,SAAKF,MAAL,CAAYS,QAAZ,GAAuBA,QAAvB;AACD,GApDY;;AAsDb;AACF;AACA;AACEK,EAAAA,UAAU,EAAE,sBAAY;AACtB;AACA,SAAKd,MAAL,CAAYE,UAAZ,GAAyB,KAAKF,MAAL,CAAYS,QAAZ,GAAuB,IAAhD;AACD;AA5DY,CAAf;AA8DAM,MAAM,CAACC,OAAP,GAAiBnB,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import * as axisHelper from './axisHelper';\r\nvar _default = {\r\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\r\n   */\r\n  getMin: function (origin) {\r\n    var option = this.option;\r\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\r\n\r\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\r\n      min = this.axis.scale.parse(min);\r\n    }\r\n\r\n    return min;\r\n  },\r\n\r\n  /**\r\n   * @param {boolean} origin\r\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\r\n   */\r\n  getMax: function (origin) {\r\n    var option = this.option;\r\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\r\n\r\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\r\n      max = this.axis.scale.parse(max);\r\n    }\r\n\r\n    return max;\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  getNeedCrossZero: function () {\r\n    var option = this.option;\r\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\r\n  },\r\n\r\n  /**\r\n   * Should be implemented by each axis model if necessary.\r\n   * @return {module:echarts/model/Component} coordinate system model\r\n   */\r\n  getCoordSysModel: zrUtil.noop,\r\n\r\n  /**\r\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\r\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\r\n   */\r\n  setRange: function (rangeStart, rangeEnd) {\r\n    this.option.rangeStart = rangeStart;\r\n    this.option.rangeEnd = rangeEnd;\r\n  },\r\n\r\n  /**\r\n   * Reset range\r\n   */\r\n  resetRange: function () {\r\n    // rangeStart and rangeEnd is readonly.\r\n    this.option.rangeStart = this.option.rangeEnd = null;\r\n  }\r\n};\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}