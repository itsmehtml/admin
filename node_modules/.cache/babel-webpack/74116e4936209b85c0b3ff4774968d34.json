{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\r\n   * @type {module:echarts/coord/parallel/Axis}\r\n   */\n  axis: null,\n\n  /**\r\n   * @type {Array.<Array.<number>}\r\n   * @readOnly\r\n   */\n  activeIntervals: [],\n\n  /**\r\n   * @return {Object}\r\n   */\n  getAreaSelectStyle: function getAreaSelectStyle() {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\r\n   * The code of this feature is put on AxisModel but not ParallelAxis,\r\n   * because axisModel can be alive after echarts updating but instance of\r\n   * ParallelAxis having been disposed. this._activeInterval should be kept\r\n   * when action dispatched (i.e. legend click).\r\n   *\r\n   * @param {Array.<Array<number>>} intervals interval.length === 0\r\n   *                                          means set all active.\r\n   * @public\r\n   */\n  setActiveIntervals: function setActiveIntervals(intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\r\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\r\n   *                         value can not be input.\r\n   * @return {string} 'normal': no activeIntervals set,\r\n   *                  'active',\r\n   *                  'inactive'.\r\n   * @public\r\n   */\n  getActiveState: function getActiveState(value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\r\n   * @type {Array.<number>}\r\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/parallel/AxisModel.js"],"names":["zrUtil","require","ComponentModel","makeStyleMapper","axisModelCreator","numberUtil","axisModelCommonMixin","AxisModel","extend","type","axis","activeIntervals","getAreaSelectStyle","getModel","setActiveIntervals","intervals","clone","i","length","asc","getActiveState","value","isNaN","interval","len","defaultOption","dim","areaSelectStyle","width","borderWidth","borderColor","color","opacity","realtime","z","merge","prototype","getAxisType","axisName","option","data","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\r\n\r\nvar axisModelCreator = require(\"../axisModelCreator\");\r\n\r\nvar numberUtil = require(\"../../util/number\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar AxisModel = ComponentModel.extend({\r\n  type: 'baseParallelAxis',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/parallel/Axis}\r\n   */\r\n  axis: null,\r\n\r\n  /**\r\n   * @type {Array.<Array.<number>}\r\n   * @readOnly\r\n   */\r\n  activeIntervals: [],\r\n\r\n  /**\r\n   * @return {Object}\r\n   */\r\n  getAreaSelectStyle: function () {\r\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\r\n  },\r\n\r\n  /**\r\n   * The code of this feature is put on AxisModel but not ParallelAxis,\r\n   * because axisModel can be alive after echarts updating but instance of\r\n   * ParallelAxis having been disposed. this._activeInterval should be kept\r\n   * when action dispatched (i.e. legend click).\r\n   *\r\n   * @param {Array.<Array<number>>} intervals interval.length === 0\r\n   *                                          means set all active.\r\n   * @public\r\n   */\r\n  setActiveIntervals: function (intervals) {\r\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\r\n\r\n    if (activeIntervals) {\r\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\r\n        numberUtil.asc(activeIntervals[i]);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\r\n   *                         value can not be input.\r\n   * @return {string} 'normal': no activeIntervals set,\r\n   *                  'active',\r\n   *                  'inactive'.\r\n   * @public\r\n   */\r\n  getActiveState: function (value) {\r\n    var activeIntervals = this.activeIntervals;\r\n\r\n    if (!activeIntervals.length) {\r\n      return 'normal';\r\n    }\r\n\r\n    if (value == null || isNaN(value)) {\r\n      return 'inactive';\r\n    } // Simple optimization\r\n\r\n\r\n    if (activeIntervals.length === 1) {\r\n      var interval = activeIntervals[0];\r\n\r\n      if (interval[0] <= value && value <= interval[1]) {\r\n        return 'active';\r\n      }\r\n    } else {\r\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\r\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\r\n          return 'active';\r\n        }\r\n      }\r\n    }\r\n\r\n    return 'inactive';\r\n  }\r\n});\r\nvar defaultOption = {\r\n  type: 'value',\r\n\r\n  /**\r\n   * @type {Array.<number>}\r\n   */\r\n  dim: null,\r\n  // 0, 1, 2, ...\r\n  // parallelIndex: null,\r\n  areaSelectStyle: {\r\n    width: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(160,197,232)',\r\n    color: 'rgba(160,197,232)',\r\n    opacity: 0.3\r\n  },\r\n  realtime: true,\r\n  // Whether realtime update view when select.\r\n  z: 10\r\n};\r\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\r\n\r\nfunction getAxisType(axisName, option) {\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}\r\n\r\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\r\nvar _default = AxisModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}