{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function _getClipShape(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function _updateSymbolDraw(data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function dispose() {}\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/scatter/ScatterView.js"],"names":["echarts","require","SymbolDraw","LargeSymbolDraw","pointsLayout","extendChartView","type","render","seriesModel","ecModel","api","data","getData","symbolDraw","_updateSymbolDraw","updateData","clipShape","_getClipShape","_finished","incrementalPrepareRender","incrementalPrepareUpdate","incrementalRender","taskParams","_symbolDraw","incrementalUpdate","end","count","updateTransform","group","dirty","isPersistent","update","res","reset","progress","start","updateLayout","coordSys","coordinateSystem","clipArea","getArea","get","pipelineContext","isLargeDraw","large","_isLargeDraw","remove","removeAll","add","dispose"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\r\n\r\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\r\n\r\nvar pointsLayout = require(\"../../layout/points\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\necharts.extendChartView({\r\n  type: 'scatter',\r\n  render: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.updateData(data, {\r\n      // TODO\r\n      // If this parameter should be a shape or a bounding volume\r\n      // shape will be more general.\r\n      // But bounding volume like bounding rect will be much faster in the contain calculation\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n    this._finished = true;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.incrementalPrepareUpdate(data);\r\n    this._finished = false;\r\n  },\r\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\r\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n\r\n    this._finished = taskParams.end === seriesModel.getData().count();\r\n  },\r\n  updateTransform: function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\r\n    // PENDING\r\n\r\n    this.group.dirty();\r\n\r\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\r\n      return {\r\n        update: true\r\n      };\r\n    } else {\r\n      var res = pointsLayout().reset(seriesModel);\r\n\r\n      if (res.progress) {\r\n        res.progress({\r\n          start: 0,\r\n          end: data.count()\r\n        }, data);\r\n      }\r\n\r\n      this._symbolDraw.updateLayout(data);\r\n    }\r\n  },\r\n  _getClipShape: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\r\n    return seriesModel.get('clip', true) ? clipArea : null;\r\n  },\r\n  _updateSymbolDraw: function (data, seriesModel) {\r\n    var symbolDraw = this._symbolDraw;\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var isLargeDraw = pipelineContext.large;\r\n\r\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\r\n      symbolDraw && symbolDraw.remove();\r\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\r\n      this._isLargeDraw = isLargeDraw;\r\n      this.group.removeAll();\r\n    }\r\n\r\n    this.group.add(symbolDraw.group);\r\n    return symbolDraw;\r\n  },\r\n  remove: function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(true);\r\n    this._symbolDraw = null;\r\n  },\r\n  dispose: function () {}\r\n});"]},"metadata":{},"sourceType":"script"}