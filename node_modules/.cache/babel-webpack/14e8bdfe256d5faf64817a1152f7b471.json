{"ast":null,"code":"var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/graphic/Group\r\n * @example\r\n *     var Group = require('zrender/container/Group');\r\n *     var Circle = require('zrender/graphic/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.add(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *         }\r\n *     }));\r\n *     zr.add(g);\r\n */\n\n/**\r\n * @alias module:zrender/graphic/Group\r\n * @constructor\r\n * @extends module:zrender/mixin/Transformable\r\n * @extends module:zrender/mixin/Eventful\r\n */\n\n\nvar Group = function Group(opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\r\n   * @type {string}\r\n   */\n  type: 'group',\n\n  /**\r\n   * 所有子孙元素是否响应鼠标事件\r\n   * @name module:/zrender/container/Group#silent\r\n   * @type {boolean}\r\n   * @default false\r\n   */\n  silent: false,\n\n  /**\r\n   * @return {Array.<module:zrender/Element>}\r\n   */\n  children: function children() {\n    return this._children.slice();\n  },\n\n  /**\r\n   * 获取指定 index 的儿子节点\r\n   * @param  {number} idx\r\n   * @return {module:zrender/Element}\r\n   */\n  childAt: function childAt(idx) {\n    return this._children[idx];\n  },\n\n  /**\r\n   * 获取指定名字的儿子节点\r\n   * @param  {string} name\r\n   * @return {module:zrender/Element}\r\n   */\n  childOfName: function childOfName(name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\r\n   * @return {number}\r\n   */\n  childCount: function childCount() {\n    return this._children.length;\n  },\n\n  /**\r\n   * 添加子节点到最后\r\n   * @param {module:zrender/Element} child\r\n   */\n  add: function add(child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * 添加子节点在 nextSibling 之前\r\n   * @param {module:zrender/Element} child\r\n   * @param {module:zrender/Element} nextSibling\r\n   */\n  addBefore: function addBefore(child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function _doAdd(child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\r\n   * 移除子节点\r\n   * @param {module:zrender/Element} child\r\n   */\n  remove: function remove(child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\r\n   * 移除所有子节点\r\n   */\n  removeAll: function removeAll() {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\r\n   * 遍历所有子节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\n  eachChild: function eachChild(cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * 深度优先遍历所有子孙节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\n  traverse: function traverse(cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function addChildrenToStorage(storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function delChildrenFromStorage(storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function dirty() {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\n  getBoundingRect: function getBoundingRect(includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/zrender/lib/container/Group.js"],"names":["zrUtil","require","Element","BoundingRect","Group","opts","call","key","hasOwnProperty","_children","__storage","__dirty","prototype","constructor","isGroup","type","silent","children","slice","childAt","idx","childOfName","name","i","length","childCount","add","child","parent","push","_doAdd","addBefore","nextSibling","indexOf","splice","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","cb","context","traverse","dirty","getBoundingRect","includeChildren","rect","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","clone","union","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"../core/util\");\r\n\r\nvar Element = require(\"../Element\");\r\n\r\nvar BoundingRect = require(\"../core/BoundingRect\");\r\n\r\n/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/graphic/Group\r\n * @example\r\n *     var Group = require('zrender/container/Group');\r\n *     var Circle = require('zrender/graphic/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.add(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *         }\r\n *     }));\r\n *     zr.add(g);\r\n */\r\n\r\n/**\r\n * @alias module:zrender/graphic/Group\r\n * @constructor\r\n * @extends module:zrender/mixin/Transformable\r\n * @extends module:zrender/mixin/Eventful\r\n */\r\nvar Group = function (opts) {\r\n  opts = opts || {};\r\n  Element.call(this, opts);\r\n\r\n  for (var key in opts) {\r\n    if (opts.hasOwnProperty(key)) {\r\n      this[key] = opts[key];\r\n    }\r\n  }\r\n\r\n  this._children = [];\r\n  this.__storage = null;\r\n  this.__dirty = true;\r\n};\r\n\r\nGroup.prototype = {\r\n  constructor: Group,\r\n  isGroup: true,\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  type: 'group',\r\n\r\n  /**\r\n   * 所有子孙元素是否响应鼠标事件\r\n   * @name module:/zrender/container/Group#silent\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  silent: false,\r\n\r\n  /**\r\n   * @return {Array.<module:zrender/Element>}\r\n   */\r\n  children: function () {\r\n    return this._children.slice();\r\n  },\r\n\r\n  /**\r\n   * 获取指定 index 的儿子节点\r\n   * @param  {number} idx\r\n   * @return {module:zrender/Element}\r\n   */\r\n  childAt: function (idx) {\r\n    return this._children[idx];\r\n  },\r\n\r\n  /**\r\n   * 获取指定名字的儿子节点\r\n   * @param  {string} name\r\n   * @return {module:zrender/Element}\r\n   */\r\n  childOfName: function (name) {\r\n    var children = this._children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      if (children[i].name === name) {\r\n        return children[i];\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  childCount: function () {\r\n    return this._children.length;\r\n  },\r\n\r\n  /**\r\n   * 添加子节点到最后\r\n   * @param {module:zrender/Element} child\r\n   */\r\n  add: function (child) {\r\n    if (child && child !== this && child.parent !== this) {\r\n      this._children.push(child);\r\n\r\n      this._doAdd(child);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 添加子节点在 nextSibling 之前\r\n   * @param {module:zrender/Element} child\r\n   * @param {module:zrender/Element} nextSibling\r\n   */\r\n  addBefore: function (child, nextSibling) {\r\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\r\n      var children = this._children;\r\n      var idx = children.indexOf(nextSibling);\r\n\r\n      if (idx >= 0) {\r\n        children.splice(idx, 0, child);\r\n\r\n        this._doAdd(child);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  _doAdd: function (child) {\r\n    if (child.parent) {\r\n      child.parent.remove(child);\r\n    }\r\n\r\n    child.parent = this;\r\n    var storage = this.__storage;\r\n    var zr = this.__zr;\r\n\r\n    if (storage && storage !== child.__storage) {\r\n      storage.addToStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.addChildrenToStorage(storage);\r\n      }\r\n    }\r\n\r\n    zr && zr.refresh();\r\n  },\r\n\r\n  /**\r\n   * 移除子节点\r\n   * @param {module:zrender/Element} child\r\n   */\r\n  remove: function (child) {\r\n    var zr = this.__zr;\r\n    var storage = this.__storage;\r\n    var children = this._children;\r\n    var idx = zrUtil.indexOf(children, child);\r\n\r\n    if (idx < 0) {\r\n      return this;\r\n    }\r\n\r\n    children.splice(idx, 1);\r\n    child.parent = null;\r\n\r\n    if (storage) {\r\n      storage.delFromStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.delChildrenFromStorage(storage);\r\n      }\r\n    }\r\n\r\n    zr && zr.refresh();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 移除所有子节点\r\n   */\r\n  removeAll: function () {\r\n    var children = this._children;\r\n    var storage = this.__storage;\r\n    var child;\r\n    var i;\r\n\r\n    for (i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n\r\n      if (storage) {\r\n        storage.delFromStorage(child);\r\n\r\n        if (child instanceof Group) {\r\n          child.delChildrenFromStorage(storage);\r\n        }\r\n      }\r\n\r\n      child.parent = null;\r\n    }\r\n\r\n    children.length = 0;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 遍历所有子节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  eachChild: function (cb, context) {\r\n    var children = this._children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i];\r\n      cb.call(context, child, i);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * 深度优先遍历所有子孙节点\r\n   * @param  {Function} cb\r\n   * @param  {}   context\r\n   */\r\n  traverse: function (cb, context) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      cb.call(context, child);\r\n\r\n      if (child.type === 'group') {\r\n        child.traverse(cb, context);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n  addChildrenToStorage: function (storage) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      storage.addToStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.addChildrenToStorage(storage);\r\n      }\r\n    }\r\n  },\r\n  delChildrenFromStorage: function (storage) {\r\n    for (var i = 0; i < this._children.length; i++) {\r\n      var child = this._children[i];\r\n      storage.delFromStorage(child);\r\n\r\n      if (child instanceof Group) {\r\n        child.delChildrenFromStorage(storage);\r\n      }\r\n    }\r\n  },\r\n  dirty: function () {\r\n    this.__dirty = true;\r\n    this.__zr && this.__zr.refresh();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n  getBoundingRect: function (includeChildren) {\r\n    // TODO Caching\r\n    var rect = null;\r\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n    var children = includeChildren || this._children;\r\n    var tmpMat = [];\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i];\r\n\r\n      if (child.ignore || child.invisible) {\r\n        continue;\r\n      }\r\n\r\n      var childRect = child.getBoundingRect();\r\n      var transform = child.getLocalTransform(tmpMat); // TODO\r\n      // The boundingRect cacluated by transforming original\r\n      // rect may be bigger than the actual bundingRect when rotation\r\n      // is used. (Consider a circle rotated aginst its center, where\r\n      // the actual boundingRect should be the same as that not be\r\n      // rotated.) But we can not find better approach to calculate\r\n      // actual boundingRect yet, considering performance.\r\n\r\n      if (transform) {\r\n        tmpRect.copy(childRect);\r\n        tmpRect.applyTransform(transform);\r\n        rect = rect || tmpRect.clone();\r\n        rect.union(tmpRect);\r\n      } else {\r\n        rect = rect || childRect.clone();\r\n        rect.union(childRect);\r\n      }\r\n    }\r\n\r\n    return rect || tmpRect;\r\n  }\r\n};\r\nzrUtil.inherits(Group, Element);\r\nvar _default = Group;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}