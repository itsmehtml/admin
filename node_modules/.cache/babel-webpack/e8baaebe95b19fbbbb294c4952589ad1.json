{"ast":null,"code":"module.exports = function (hljs) {\n  var COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n      contains: ['self']\n    })]\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [{\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, COMMENT]\n  };\n  var RECORD = {\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  var CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n  return {\n    keywords: 'let in if then else case of where module import exposing ' + 'type alias as infix infixl infixr port effect command subscription',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'port effect module',\n      end: 'exposing',\n      keywords: 'port effect module where command subscription exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'import',\n      end: '$',\n      keywords: 'import as exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'type',\n      end: '$',\n      keywords: 'type alias',\n      contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: 'port',\n      end: '$',\n      keywords: 'port',\n      contains: [COMMENT]\n    }, // Literals and names.\n    CHARACTER, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/elm.js"],"names":["module","exports","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","CHARACTER","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAE,CACRF,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,GAAnB,CADQ,EAERD,IAAI,CAACC,OAAL,CACE,IADF,EAEE,IAFF,EAGE;AACEE,MAAAA,QAAQ,EAAE,CAAC,MAAD;AADZ,KAHF,CAFQ;AADE,GAAd;AAaA,MAAIC,WAAW,GAAG;AAChBC,IAAAA,SAAS,EAAE,MADK;AAEhBC,IAAAA,KAAK,EAAE,kBAFS;AAEW;AAC3BC,IAAAA,SAAS,EAAE;AAHK,GAAlB;AAMA,MAAIC,IAAI,GAAG;AACTF,IAAAA,KAAK,EAAE,KADE;AACKG,IAAAA,GAAG,EAAE,KADV;AAETC,IAAAA,OAAO,EAAE,GAFA;AAGTP,IAAAA,QAAQ,EAAE,CACR;AAACE,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KADQ,EAERL,OAFQ;AAHD,GAAX;AASA,MAAIU,MAAM,GAAG;AACXL,IAAAA,KAAK,EAAE,GADI;AACCG,IAAAA,GAAG,EAAE,GADN;AAEXN,IAAAA,QAAQ,EAAEK,IAAI,CAACL;AAFJ,GAAb;AAKA,MAAIS,SAAS,GAAG;AACdP,IAAAA,SAAS,EAAE,QADG;AAEdC,IAAAA,KAAK,EAAE,UAFO;AAEKG,IAAAA,GAAG,EAAE,IAFV;AAGdC,IAAAA,OAAO,EAAE;AAHK,GAAhB;AAMA,SAAO;AACLG,IAAAA,QAAQ,EACN,8DACA,oEAHG;AAILV,IAAAA,QAAQ,EAAE,CAER;AAEA;AACEW,MAAAA,aAAa,EAAE,oBADjB;AACuCL,MAAAA,GAAG,EAAE,UAD5C;AAEEI,MAAAA,QAAQ,EAAE,wDAFZ;AAGEV,MAAAA,QAAQ,EAAE,CAACK,IAAD,EAAOP,OAAP,CAHZ;AAIES,MAAAA,OAAO,EAAE;AAJX,KAJQ,EAUR;AACEJ,MAAAA,KAAK,EAAE,QADT;AACmBG,MAAAA,GAAG,EAAE,GADxB;AAEEI,MAAAA,QAAQ,EAAE,oBAFZ;AAGEV,MAAAA,QAAQ,EAAE,CAACK,IAAD,EAAOP,OAAP,CAHZ;AAIES,MAAAA,OAAO,EAAE;AAJX,KAVQ,EAgBR;AACEJ,MAAAA,KAAK,EAAE,MADT;AACiBG,MAAAA,GAAG,EAAE,GADtB;AAEEI,MAAAA,QAAQ,EAAE,YAFZ;AAGEV,MAAAA,QAAQ,EAAE,CAACC,WAAD,EAAcI,IAAd,EAAoBG,MAApB,EAA4BV,OAA5B;AAHZ,KAhBQ,EAqBR;AACEa,MAAAA,aAAa,EAAE,qBADjB;AACwCL,MAAAA,GAAG,EAAE,GAD7C;AAEEN,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACe,aAAN,EAAqBd,OAArB;AAFZ,KArBQ,EAyBR;AACEK,MAAAA,KAAK,EAAE,MADT;AACiBG,MAAAA,GAAG,EAAE,GADtB;AAEEI,MAAAA,QAAQ,EAAE,MAFZ;AAGEV,MAAAA,QAAQ,EAAE,CAACF,OAAD;AAHZ,KAzBQ,EA+BR;AAEAW,IAAAA,SAjCQ,EAkCRZ,IAAI,CAACgB,iBAlCG,EAmCRhB,IAAI,CAACe,aAnCG,EAoCRX,WApCQ,EAqCRJ,IAAI,CAACiB,OAAL,CAAajB,IAAI,CAACkB,UAAlB,EAA8B;AAACZ,MAAAA,KAAK,EAAE;AAAR,KAA9B,CArCQ,EAsCRL,OAtCQ,EAwCR;AAACK,MAAAA,KAAK,EAAE;AAAR,KAxCQ,CAwCS;AAxCT,KAJL;AA8CLI,IAAAA,OAAO,EAAE;AA9CJ,GAAP;AAgDD,CAxFD","sourcesContent":["module.exports = function(hljs) {\r\n  var COMMENT = {\r\n    variants: [\r\n      hljs.COMMENT('--', '$'),\r\n      hljs.COMMENT(\r\n        '{-',\r\n        '-}',\r\n        {\r\n          contains: ['self']\r\n        }\r\n      )\r\n    ]\r\n  };\r\n\r\n  var CONSTRUCTOR = {\r\n    className: 'type',\r\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\r\n    relevance: 0\r\n  };\r\n\r\n  var LIST = {\r\n    begin: '\\\\(', end: '\\\\)',\r\n    illegal: '\"',\r\n    contains: [\r\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\r\n      COMMENT\r\n    ]\r\n  };\r\n\r\n  var RECORD = {\r\n    begin: '{', end: '}',\r\n    contains: LIST.contains\r\n  };\r\n\r\n  var CHARACTER = {\r\n    className: 'string',\r\n    begin: '\\'\\\\\\\\?.', end: '\\'',\r\n    illegal: '.'\r\n  };\r\n\r\n  return {\r\n    keywords:\r\n      'let in if then else case of where module import exposing ' +\r\n      'type alias as infix infixl infixr port effect command subscription',\r\n    contains: [\r\n\r\n      // Top-level constructions.\r\n\r\n      {\r\n        beginKeywords: 'port effect module', end: 'exposing',\r\n        keywords: 'port effect module where command subscription exposing',\r\n        contains: [LIST, COMMENT],\r\n        illegal: '\\\\W\\\\.|;'\r\n      },\r\n      {\r\n        begin: 'import', end: '$',\r\n        keywords: 'import as exposing',\r\n        contains: [LIST, COMMENT],\r\n        illegal: '\\\\W\\\\.|;'\r\n      },\r\n      {\r\n        begin: 'type', end: '$',\r\n        keywords: 'type alias',\r\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\r\n      },\r\n      {\r\n        beginKeywords: 'infix infixl infixr', end: '$',\r\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\r\n      },\r\n      {\r\n        begin: 'port', end: '$',\r\n        keywords: 'port',\r\n        contains: [COMMENT]\r\n      },\r\n\r\n      // Literals and names.\r\n\r\n      CHARACTER,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n      CONSTRUCTOR,\r\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\r\n      COMMENT,\r\n\r\n      {begin: '->|<-'} // No markup, relevance booster\r\n    ],\r\n    illegal: /;/\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}