{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\nvar subPixelOptimizeUtil = require(\"zrender/lib/graphic/helper/subPixelOptimize\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1; // key: label model property nane, value: style property name.\n\nvar CACHED_LABEL_STYLE_PROPERTIES = {\n  color: 'textFill',\n  textBorderColor: 'textStroke',\n  textBorderWidth: 'textStrokeWidth'\n};\nvar EMPHASIS = 'emphasis';\nvar NORMAL = 'normal'; // Reserve 0 as default.\n\nvar _highlightNextDigit = 1;\nvar _highlightKeyMap = {};\nvar _customShapeMap = {};\n/**\r\n * Extend shape with parameters\r\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\r\n * Extend path\r\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\r\n * Register a user defined shape.\r\n * The shape class can be fetched by `getShapeClass`\r\n * This method will overwrite the registered shapes, including\r\n * the registered built-in shapes, if using the same `name`.\r\n * The shape can be used in `custom series` and\r\n * `graphic component` by declaring `{type: name}`.\r\n *\r\n * @param {string} name\r\n * @param {Object} ShapeClass Can be generated by `extendShape`.\r\n */\n\n\nfunction registerShape(name, ShapeClass) {\n  _customShapeMap[name] = ShapeClass;\n}\n/**\r\n * Find shape class registered by `registerShape`. Usually used in\r\n * fetching user defined shape.\r\n *\r\n * [Caution]:\r\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\r\n * to use user registered shapes.\r\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\r\n * `registerShape` by default. That enables users to get both built-in\r\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\r\n * the built-in shapes by using names like 'circle', 'rect' via calling\r\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\r\n * in case that it is overwritten by users, except that some features, like\r\n * `custom series`, `graphic component`, do it deliberately.\r\n *\r\n * (2) In the features like `custom series`, `graphic component`, the user input\r\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\r\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\r\n * are reserved names, that is, if some user register a shape named `'image'`,\r\n * the shape will not be used. If we intending to add some more reserved names\r\n * in feature, that might bring break changes (disable some existing user shape\r\n * names). But that case probably rearly happen. So we dont make more mechanism\r\n * to resolve this issue here.\r\n *\r\n * @param {string} name\r\n * @return {Object} The shape class. If not found, return nothing.\r\n */\n\n\nfunction getShapeClass(name) {\n  if (_customShapeMap.hasOwnProperty(name)) {\n    return _customShapeMap[name];\n  }\n}\n/**\r\n * Create a path element from path data string\r\n * @param {string} pathData\r\n * @param {Object} opts\r\n * @param {module:zrender/core/BoundingRect} rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\r\n * Create a image element from image url\r\n * @param {string} imageUrl image url\r\n * @param {Object} opts options\r\n * @param {module:zrender/core/BoundingRect} rect constrain rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function onload(img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\r\n * Get position of centered element in bounding box.\r\n *\r\n * @param  {Object} rect         element local bounding box\r\n * @param  {Object} boundingRect constraint bounding box\r\n * @return {Object} element position containing x, y, width, and height\r\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\r\n * Resize a path to fit the rect\r\n * @param {module:zrender/graphic/Path} path\r\n * @param {Object} rect\r\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\r\n * Sub pixel optimize line for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x1]\r\n * @param {number} [param.shape.y1]\r\n * @param {number} [param.shape.x2]\r\n * @param {number} [param.shape.y2]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\n  return param;\n}\n/**\r\n * Sub pixel optimize rect for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x]\r\n * @param {number} [param.shape.y]\r\n * @param {number} [param.shape.width]\r\n * @param {number} [param.shape.height]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\r\n * Sub pixel optimize for canvas\r\n *\r\n * @param {number} position Coordinate, such as x, y\r\n * @param {number} lineWidth Should be nonnegative integer.\r\n * @param {boolean=} positiveOrNegative Default false (negative).\r\n * @return {number} Optimized position.\r\n */\n\n\nvar subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `singleEnterEmphasis`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction singleEnterEmphasis(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var zr = el.__zr;\n  var useHoverLayer = el.useHoverLayer && zr && zr.painter.type === 'canvas';\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n\n  if (el.isGroup || !zr && el.useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here.\n  // But we choose the merge strategy that only properties that is not `null/undefined`.\n  // Because when making a textStyle (espacially rich text), it is not easy to distinguish\n  // `hasOwnProperty` and `null/undefined` in code, so we trade them as the same for simplicity.\n  // But this strategy brings a trouble that `null/undefined` can not be used to remove\n  // style any more in `emphasis`. Users can both set properties directly on normal and\n  // emphasis to avoid this issue, or we might support `'none'` for this case if required.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction singleEnterNormal(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (el.isGroup) {\n    return;\n  }\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style);\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseUpdate(el, updater, commonParam) {\n  // If root is group, also enter updater for `highDownOnUpdate`.\n  var fromState = NORMAL;\n  var toState = NORMAL;\n  var trigger; // See the rule of `highDownOnUpdate` on `graphic.setAsHighDownDispatcher`.\n\n  el.__highlighted && (fromState = EMPHASIS, trigger = true);\n  updater(el, commonParam);\n  el.__highlighted && (toState = EMPHASIS, trigger = true);\n  el.isGroup && el.traverse(function (child) {\n    !child.isGroup && updater(child, commonParam);\n  });\n  trigger && el.__highDownOnUpdate && el.__highDownOnUpdate(fromState, toState);\n}\n/**\r\n * Set hover style (namely \"emphasis style\") of element, based on the current\r\n * style of the given `el`.\r\n * This method should be called after all of the normal styles have been adopted\r\n * to the `el`. See the reason on `setHoverStyle`.\r\n *\r\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\r\n * @param {Object} [el.hoverStyle] Can be set on el or its descendants,\r\n *        e.g., `el.hoverStyle = ...; graphic.setHoverStyle(el); `.\r\n *        Often used when item group has a label element and it's hoverStyle is different.\r\n * @param {Object|boolean} [hoverStl] The specified hover style.\r\n *        If set as `false`, disable the hover style.\r\n *        Similarly, The `el.hoverStyle` can alse be set\r\n *        as `false` to disable the hover style.\r\n *        Otherwise, use the default hover style if not provided.\r\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (el.hoverStyle || hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    singleEnterNormal(el);\n    singleEnterEmphasis(el);\n  }\n}\n\nfunction onElementMouseOver(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementMouseOut(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction onElementEmphasisEvent(highlightDigit) {\n  this.__highByOuter |= 1 << (highlightDigit || 0);\n  traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementNormalEvent(highlightDigit) {\n  !(this.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction shouldSilent(el, e) {\n  return el.__highDownSilentOnTouch && e.zrByTouch;\n}\n/**\r\n * Set hover style (namely \"emphasis style\") of element,\r\n * based on the current style of the given `el`.\r\n *\r\n * (1)\r\n * **CONSTRAINTS** for this method:\r\n * <A> This method MUST be called after all of the normal styles having been adopted\r\n * to the `el`.\r\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\r\n * \"normal style\" having been set to the el.\r\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\r\n * a default hover style).\r\n *\r\n * The reason: this method treat the current style of the `el` as the \"normal style\"\r\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\r\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\r\n * logic, where the el should shift from the original emphasis style to the new\r\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\r\n *\r\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\r\n * not found a better solution yet to fit the backward compatibility, performance and\r\n * the current programming style.\r\n *\r\n * (2)\r\n * Call the method for a \"root\" element once. Do not call it for each descendants.\r\n * If the descendants elemenets of a group has itself hover style different from the\r\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\r\n * not call this method for them.\r\n *\r\n * (3) These input parameters can be set directly on `el`:\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} [el.hoverStyle] See `graphic.setElementHoverStyle`.\r\n * @param {boolean} [el.highDownSilentOnTouch=false] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Function} [el.highDownOnUpdate] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\r\n */\n\n\nfunction setHoverStyle(el, hoverStyle) {\n  setAsHighDownDispatcher(el, true);\n  traverseUpdate(el, setElementHoverStyle, hoverStyle);\n}\n/**\r\n * @param {module:zrender/Element} el\r\n * @param {Function} [el.highDownOnUpdate] Called when state updated.\r\n *        Since `setHoverStyle` has the constraint that it must be called after\r\n *        all of the normal style updated, `highDownOnUpdate` is not needed to\r\n *        trigger if both `fromState` and `toState` is 'normal', and needed to\r\n *        trigger if both `fromState` and `toState` is 'emphasis', which enables\r\n *        to sync outside style settings to \"emphasis\" state.\r\n *        @this {string} This dispatcher `el`.\r\n *        @param {string} fromState Can be \"normal\" or \"emphasis\".\r\n *               `fromState` might equal to `toState`,\r\n *               for example, when this method is called when `el` is\r\n *               on \"emphasis\" state.\r\n *        @param {string} toState Can be \"normal\" or \"emphasis\".\r\n *\r\n *        FIXME\r\n *        CAUTION: Do not expose `highDownOnUpdate` outside echarts.\r\n *        Because it is not a complete solution. The update\r\n *        listener should not have been mount in element,\r\n *        and the normal/emphasis state should not have\r\n *        mantained on elements.\r\n *\r\n * @param {boolean} [el.highDownSilentOnTouch=false]\r\n *        In touch device, mouseover event will be trigger on touchstart event\r\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\r\n *        conveniently use hoverStyle when tap on touch screen without additional\r\n *        code for compatibility.\r\n *        But if the chart/component has select feature, which usually also use\r\n *        hoverStyle, there might be conflict between 'select-highlight' and\r\n *        'hover-highlight' especially when roam is enabled (see geo for example).\r\n *        In this case, `highDownSilentOnTouch` should be used to disable\r\n *        hover-highlight on touch device.\r\n * @param {boolean} [asDispatcher=true] If `false`, do not set as \"highDownDispatcher\".\r\n */\n\n\nfunction setAsHighDownDispatcher(el, asDispatcher) {\n  var disable = asDispatcher === false; // Make `highDownSilentOnTouch` and `highDownOnUpdate` only work after\n  // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\n\n  el.__highDownSilentOnTouch = el.highDownSilentOnTouch;\n  el.__highDownOnUpdate = el.highDownOnUpdate; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__highDownDispatcher) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually by API or other components like hover link.\n\n    el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent); // Also keep previous record.\n\n    el.__highByOuter = el.__highByOuter || 0;\n    el.__highDownDispatcher = !disable;\n  }\n}\n/**\r\n * @param {module:zrender/src/Element} el\r\n * @return {boolean}\r\n */\n\n\nfunction isHighDownDispatcher(el) {\n  return !!(el && el.__highDownDispatcher);\n}\n/**\r\n * Support hightlight/downplay record on each elements.\r\n * For the case: hover highlight/downplay (legend, visualMap, ...) and\r\n * user triggerred hightlight/downplay should not conflict.\r\n * Only all of the highlightDigit cleared, return to normal.\r\n * @param {string} highlightKey\r\n * @return {number} highlightDigit\r\n */\n\n\nfunction getHighlightDigit(highlightKey) {\n  var highlightDigit = _highlightKeyMap[highlightKey];\n\n  if (highlightDigit == null && _highlightNextDigit <= 32) {\n    highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\n  }\n\n  return highlightDigit;\n}\n/**\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} normalStyle\r\n * @param {Object} emphasisStyle\r\n * @param {module:echarts/model/Model} normalModel\r\n * @param {module:echarts/model/Model} emphasisModel\r\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\r\n * @param {string|Function} [opt.defaultText]\r\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\r\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {Object} [normalSpecified]\r\n * @param {Object} [emphasisSpecified]\r\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\r\n * Modify label style manually.\r\n * Only works after `setLabelStyle` and `setElementHoverStyle` called.\r\n *\r\n * @param {module:zrender/src/Element} el\r\n * @param {Object} [normalStyleProps] optional\r\n * @param {Object} [emphasisStyleProps] optional\r\n */\n\n\nfunction modifyLabelStyle(el, normalStyleProps, emphasisStyleProps) {\n  var elStyle = el.style;\n\n  if (normalStyleProps) {\n    rollbackDefaultTextStyle(elStyle);\n    el.setStyle(normalStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n\n  elStyle = el.__hoverStl;\n\n  if (emphasisStyleProps && elStyle) {\n    rollbackDefaultTextStyle(elStyle);\n    zrUtil.extend(elStyle, emphasisStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n}\n/**\r\n * Set basic textStyle properties.\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} textStyle\r\n * @param {module:echarts/model/Model} model\r\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\r\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\r\n * @param {boolean} [isEmphasis]\r\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\r\n * Set text option in the style.\r\n * See more info in `setTextStyleCommon`.\r\n * @deprecated\r\n * @param {Object} textStyle\r\n * @param {module:echarts/model/Model} labelModel\r\n * @param {string|boolean} defaultColor Default text color.\r\n *        If set as false, it will be processed as a emphasis style.\r\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\r\n * The uniform entry of set text style, that is, retrieve style definitions\r\n * from `model` and set to `textStyle` object.\r\n *\r\n * Never in merge mode, but in overwrite mode, that is, all of the text style\r\n * properties will be set. (Consider the states of normal and emphasis and\r\n * default value can be adopted, merge would make the logic too complicated\r\n * to manage.)\r\n *\r\n * The `textStyle` object can either be a plain object or an instance of\r\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\r\n * After this mothod called, the `textStyle` object can then be used in\r\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\r\n *\r\n * Default value will be adopted and `insideRollbackOpt` will be created.\r\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\r\n *\r\n * opt: {\r\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\r\n *      isRectText: boolean,\r\n *      autoColor: string, specify a color when color is 'auto',\r\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\r\n *              If autoColor specified, it is used as default textFill.\r\n *      useInsideStyle:\r\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\r\n *                  if `textFill` is not specified.\r\n *              `false`: Do not use inside style.\r\n *              `null/undefined`: use inside style if `isRectText` is true and\r\n *                  `textFill` is not specified and textPosition contains `'inside'`.\r\n *      forceRich: boolean\r\n * }\r\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition;\n\n    if (opt.getTextPosition) {\n      textPosition = opt.getTextPosition(textStyleModel, isEmphasis);\n    } else {\n      textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n      // in bar series, and magric type should be considered.\n\n      textPosition === 'outside' && (textPosition = 'top');\n    }\n\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n        // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\n        // the default color `'blue'` will not be adopted if no color declared in `rich`.\n        // That might confuses users. So probably we should put `textStyleModel` as the\n        // root ancestor of the `richTextStyle`. But that would be a break change.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\r\n * Give some default value to the input `textStyle` object, based on the current settings\r\n * in this `textStyle` object.\r\n *\r\n * The Scenario:\r\n * when text position is `inside` and `textFill` is not specified, we show\r\n * text border by default for better view. But it should be considered that text position\r\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\r\n * restore the style.\r\n *\r\n * Usage (& NOTICE):\r\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\r\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\r\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\r\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\r\n * does, `rollbackDefaultTextStyle` is not needed to be called).\r\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var textPosition = textStyle.textPosition;\n  var opt = textStyle.insideRollbackOpt;\n  var insideRollback;\n\n  if (opt && textStyle.textFill == null) {\n    var autoColor = opt.autoColor;\n    var isRectText = opt.isRectText;\n    var useInsideStyle = opt.useInsideStyle;\n    var useInsideStyleCache = useInsideStyle !== false && (useInsideStyle === true || isRectText && textPosition // textPosition can be [10, 30]\n    && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0);\n    var useAutoColorCache = !useInsideStyleCache && autoColor != null; // All of the props declared in `CACHED_LABEL_STYLE_PROPERTIES` are to be cached.\n\n    if (useInsideStyleCache || useAutoColorCache) {\n      insideRollback = {\n        textFill: textStyle.textFill,\n        textStroke: textStyle.textStroke,\n        textStrokeWidth: textStyle.textStrokeWidth\n      };\n    }\n\n    if (useInsideStyleCache) {\n      textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n      if (textStyle.textStroke == null) {\n        textStyle.textStroke = autoColor;\n        textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n      }\n    }\n\n    if (useAutoColorCache) {\n      textStyle.textFill = autoColor;\n    }\n  } // Always set `insideRollback`, so that the previous one can be cleared.\n\n\n  textStyle.insideRollback = insideRollback;\n}\n/**\r\n * Consider the case: in a scatter,\r\n * label: {\r\n *     normal: {position: 'inside'},\r\n *     emphasis: {position: 'top'}\r\n * }\r\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\r\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\r\n * should be retured to 'autoColor', but not keep '#fff'.\r\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    // Reset all of the props in `CACHED_LABEL_STYLE_PROPERTIES`.\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\r\n * Update graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So if do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} [cb]\r\n * @example\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n *     // Or\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, function () { console.log('Animation done!'); });\r\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\r\n * Init graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So if do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} cb\r\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\r\n * Get transform matrix of target (param target),\r\n * in coordinate of its ancestor (param ancestor)\r\n *\r\n * @param {module:zrender/mixin/Transformable} target\r\n * @param {module:zrender/mixin/Transformable} [ancestor]\r\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\r\n * Apply transform to an vertex.\r\n * @param {Array.<number>} target [x, y]\r\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\r\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {Array.<number>} [x, y]\r\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\r\n * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\r\n * Apply group transition animation from g1 to g2.\r\n * If no animatableModel, no animation.\r\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\r\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Array.<Array.<number>>} A new clipped points.\r\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\r\n * @param {Object} targetRect {x, y, width, height}\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\r\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\r\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\r\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\r\n * @param {Object} [rect] {x, y, width, height}\r\n * @return {module:zrender/Element} Icon path or image element.\r\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n/**\r\n * Return `true` if the given line (line `a`) and the given polygon\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {Array.<Array.<number>>} points Points of the polygon.\r\n * @return {boolean}\r\n */\n\n\nfunction linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\r\n * Return `true` if the given two lines (line `a` and line `b`)\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {number} b1x\r\n * @param {number} b1y\r\n * @param {number} b2x\r\n * @param {number} b2y\r\n * @return {boolean}\r\n */\n\n\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * Cross product of 2-dimension vector.\r\n */\n\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n} // Register built-in shapes. These shapes might be overwirtten\n// by users, although we do not recommend that.\n\n\nregisterShape('circle', Circle);\nregisterShape('sector', Sector);\nregisterShape('ring', Ring);\nregisterShape('polygon', Polygon);\nregisterShape('polyline', Polyline);\nregisterShape('rect', Rect);\nregisterShape('line', Line);\nregisterShape('bezierCurve', BezierCurve);\nregisterShape('arc', Arc);\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.CACHED_LABEL_STYLE_PROPERTIES = CACHED_LABEL_STYLE_PROPERTIES;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.registerShape = registerShape;\nexports.getShapeClass = getShapeClass;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHighDownDispatcher = setAsHighDownDispatcher;\nexports.isHighDownDispatcher = isHighDownDispatcher;\nexports.getHighlightDigit = getHighlightDigit;\nexports.setLabelStyle = setLabelStyle;\nexports.modifyLabelStyle = modifyLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\nexports.linePolygonIntersect = linePolygonIntersect;\nexports.lineLineIntersect = lineLineIntersect;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/util/graphic.js"],"names":["zrUtil","require","pathTool","colorTool","matrix","vector","Path","Transformable","ZImage","exports","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","subPixelOptimizeUtil","mathMax","Math","max","mathMin","min","EMPTY_OBJ","Z2_EMPHASIS_LIFT","CACHED_LABEL_STYLE_PROPERTIES","color","textBorderColor","textBorderWidth","EMPHASIS","NORMAL","_highlightNextDigit","_highlightKeyMap","_customShapeMap","extendShape","opts","extend","extendPath","pathData","extendFromString","registerShape","name","ShapeClass","getShapeClass","hasOwnProperty","makePath","rect","layout","path","createFromString","centerGraphic","getBoundingRect","resizePath","makeImage","imageUrl","style","image","x","y","width","height","onload","img","boundingRect","setStyle","aspect","cx","cy","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","subPixelOptimizeRect","subPixelOptimize","hasFillOrStroke","fillOrStroke","liftedColorMap","createHashMap","liftedColorCount","liftColor","liftedColor","get","lift","set","cacheElementStl","el","__hoverStlDirty","hoverStyle","__hoverStl","__cachedNormalStl","__cachedNormalZ2","normalStyle","z2","elStyle","fill","stroke","singleEnterEmphasis","hoverStl","__highlighted","zr","__zr","useHoverLayer","painter","type","isGroup","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","dirty","prop","singleEnterNormal","highlighted","removeHover","normalStl","normalZ2","traverseUpdate","updater","commonParam","fromState","toState","trigger","traverse","child","__highDownOnUpdate","setElementHoverStyle","onElementMouseOver","e","shouldSilent","__highByOuter","onElementMouseOut","onElementEmphasisEvent","highlightDigit","onElementNormalEvent","__highDownSilentOnTouch","zrByTouch","setHoverStyle","setAsHighDownDispatcher","asDispatcher","disable","highDownSilentOnTouch","highDownOnUpdate","__highDownDispatcher","method","isHighDownDispatcher","getHighlightDigit","highlightKey","setLabelStyle","emphasisStyle","normalModel","emphasisModel","opt","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","getFormattedLabel","isFunction","defaultText","normalStyleText","emphasisStyleText","retrieve2","setTextStyle","text","modifyLabelStyle","normalStyleProps","emphasisStyleProps","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","setText","labelModel","defaultColor","isRectText","autoColor","textPosition","getTextPosition","textOffset","labelRotate","PI","textRotation","textDistance","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richResult","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","textFill","getAutoColor","textStroke","textStrokeWidth","insideRollbackOpt","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","insideRollback","useInsideStyle","useInsideStyleCache","indexOf","useAutoColorCache","getFont","gTextStyleModel","trim","join","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","cb","animationEnabled","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","target","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","isArrayLike","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","obj","position","clone","rotation","elMap1","oldEl","newProp","clipPointsByRect","points","map","point","clipRectByRect","targetRect","x2","y2","createIcon","iconStr","rectHover","strokeNoScale","slice","defaults","replace","linePolygonIntersect","a1x","a1y","a2x","a2y","i","p2","length","p","lineLineIntersect","b1x","b1y","b2x","b2y","mx","my","nx","ny","nmCrossProduct","crossProduct2d","nearZero","b1a1x","b1a1y","q","x1","y1","val"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar pathTool = require(\"zrender/lib/tool/path\");\r\n\r\nvar colorTool = require(\"zrender/lib/tool/color\");\r\n\r\nvar matrix = require(\"zrender/lib/core/matrix\");\r\n\r\nvar vector = require(\"zrender/lib/core/vector\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\r\n\r\nvar ZImage = require(\"zrender/lib/graphic/Image\");\r\n\r\nexports.Image = ZImage;\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nexports.Group = Group;\r\n\r\nvar Text = require(\"zrender/lib/graphic/Text\");\r\n\r\nexports.Text = Text;\r\n\r\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\r\n\r\nexports.Circle = Circle;\r\n\r\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\r\n\r\nexports.Sector = Sector;\r\n\r\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\r\n\r\nexports.Ring = Ring;\r\n\r\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\r\n\r\nexports.Polygon = Polygon;\r\n\r\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\r\n\r\nexports.Polyline = Polyline;\r\n\r\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\r\n\r\nexports.Rect = Rect;\r\n\r\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\r\n\r\nexports.Line = Line;\r\n\r\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\r\n\r\nexports.BezierCurve = BezierCurve;\r\n\r\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\r\n\r\nexports.Arc = Arc;\r\n\r\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\r\n\r\nexports.CompoundPath = CompoundPath;\r\n\r\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\r\n\r\nexports.LinearGradient = LinearGradient;\r\n\r\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\r\n\r\nexports.RadialGradient = RadialGradient;\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nexports.BoundingRect = BoundingRect;\r\n\r\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\r\n\r\nexports.IncrementalDisplayable = IncrementalDisplayable;\r\n\r\nvar subPixelOptimizeUtil = require(\"zrender/lib/graphic/helper/subPixelOptimize\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar EMPTY_OBJ = {};\r\nvar Z2_EMPHASIS_LIFT = 1; // key: label model property nane, value: style property name.\r\n\r\nvar CACHED_LABEL_STYLE_PROPERTIES = {\r\n  color: 'textFill',\r\n  textBorderColor: 'textStroke',\r\n  textBorderWidth: 'textStrokeWidth'\r\n};\r\nvar EMPHASIS = 'emphasis';\r\nvar NORMAL = 'normal'; // Reserve 0 as default.\r\n\r\nvar _highlightNextDigit = 1;\r\nvar _highlightKeyMap = {};\r\nvar _customShapeMap = {};\r\n/**\r\n * Extend shape with parameters\r\n */\r\n\r\nfunction extendShape(opts) {\r\n  return Path.extend(opts);\r\n}\r\n/**\r\n * Extend path\r\n */\r\n\r\n\r\nfunction extendPath(pathData, opts) {\r\n  return pathTool.extendFromString(pathData, opts);\r\n}\r\n/**\r\n * Register a user defined shape.\r\n * The shape class can be fetched by `getShapeClass`\r\n * This method will overwrite the registered shapes, including\r\n * the registered built-in shapes, if using the same `name`.\r\n * The shape can be used in `custom series` and\r\n * `graphic component` by declaring `{type: name}`.\r\n *\r\n * @param {string} name\r\n * @param {Object} ShapeClass Can be generated by `extendShape`.\r\n */\r\n\r\n\r\nfunction registerShape(name, ShapeClass) {\r\n  _customShapeMap[name] = ShapeClass;\r\n}\r\n/**\r\n * Find shape class registered by `registerShape`. Usually used in\r\n * fetching user defined shape.\r\n *\r\n * [Caution]:\r\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\r\n * to use user registered shapes.\r\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\r\n * `registerShape` by default. That enables users to get both built-in\r\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\r\n * the built-in shapes by using names like 'circle', 'rect' via calling\r\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\r\n * in case that it is overwritten by users, except that some features, like\r\n * `custom series`, `graphic component`, do it deliberately.\r\n *\r\n * (2) In the features like `custom series`, `graphic component`, the user input\r\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\r\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\r\n * are reserved names, that is, if some user register a shape named `'image'`,\r\n * the shape will not be used. If we intending to add some more reserved names\r\n * in feature, that might bring break changes (disable some existing user shape\r\n * names). But that case probably rearly happen. So we dont make more mechanism\r\n * to resolve this issue here.\r\n *\r\n * @param {string} name\r\n * @return {Object} The shape class. If not found, return nothing.\r\n */\r\n\r\n\r\nfunction getShapeClass(name) {\r\n  if (_customShapeMap.hasOwnProperty(name)) {\r\n    return _customShapeMap[name];\r\n  }\r\n}\r\n/**\r\n * Create a path element from path data string\r\n * @param {string} pathData\r\n * @param {Object} opts\r\n * @param {module:zrender/core/BoundingRect} rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\r\n\r\n\r\nfunction makePath(pathData, opts, rect, layout) {\r\n  var path = pathTool.createFromString(pathData, opts);\r\n\r\n  if (rect) {\r\n    if (layout === 'center') {\r\n      rect = centerGraphic(rect, path.getBoundingRect());\r\n    }\r\n\r\n    resizePath(path, rect);\r\n  }\r\n\r\n  return path;\r\n}\r\n/**\r\n * Create a image element from image url\r\n * @param {string} imageUrl image url\r\n * @param {Object} opts options\r\n * @param {module:zrender/core/BoundingRect} rect constrain rect\r\n * @param {string} [layout=cover] 'center' or 'cover'\r\n */\r\n\r\n\r\nfunction makeImage(imageUrl, rect, layout) {\r\n  var path = new ZImage({\r\n    style: {\r\n      image: imageUrl,\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    onload: function (img) {\r\n      if (layout === 'center') {\r\n        var boundingRect = {\r\n          width: img.width,\r\n          height: img.height\r\n        };\r\n        path.setStyle(centerGraphic(rect, boundingRect));\r\n      }\r\n    }\r\n  });\r\n  return path;\r\n}\r\n/**\r\n * Get position of centered element in bounding box.\r\n *\r\n * @param  {Object} rect         element local bounding box\r\n * @param  {Object} boundingRect constraint bounding box\r\n * @return {Object} element position containing x, y, width, and height\r\n */\r\n\r\n\r\nfunction centerGraphic(rect, boundingRect) {\r\n  // Set rect to center, keep width / height ratio.\r\n  var aspect = boundingRect.width / boundingRect.height;\r\n  var width = rect.height * aspect;\r\n  var height;\r\n\r\n  if (width <= rect.width) {\r\n    height = rect.height;\r\n  } else {\r\n    width = rect.width;\r\n    height = width / aspect;\r\n  }\r\n\r\n  var cx = rect.x + rect.width / 2;\r\n  var cy = rect.y + rect.height / 2;\r\n  return {\r\n    x: cx - width / 2,\r\n    y: cy - height / 2,\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n\r\nvar mergePath = pathTool.mergePath;\r\n/**\r\n * Resize a path to fit the rect\r\n * @param {module:zrender/graphic/Path} path\r\n * @param {Object} rect\r\n */\r\n\r\nfunction resizePath(path, rect) {\r\n  if (!path.applyTransform) {\r\n    return;\r\n  }\r\n\r\n  var pathRect = path.getBoundingRect();\r\n  var m = pathRect.calculateTransform(rect);\r\n  path.applyTransform(m);\r\n}\r\n/**\r\n * Sub pixel optimize line for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x1]\r\n * @param {number} [param.shape.y1]\r\n * @param {number} [param.shape.x2]\r\n * @param {number} [param.shape.y2]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\r\n\r\n\r\nfunction subPixelOptimizeLine(param) {\r\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\r\n  return param;\r\n}\r\n/**\r\n * Sub pixel optimize rect for canvas\r\n *\r\n * @param {Object} param\r\n * @param {Object} [param.shape]\r\n * @param {number} [param.shape.x]\r\n * @param {number} [param.shape.y]\r\n * @param {number} [param.shape.width]\r\n * @param {number} [param.shape.height]\r\n * @param {Object} [param.style]\r\n * @param {number} [param.style.lineWidth]\r\n * @return {Object} Modified param\r\n */\r\n\r\n\r\nfunction subPixelOptimizeRect(param) {\r\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\r\n  return param;\r\n}\r\n/**\r\n * Sub pixel optimize for canvas\r\n *\r\n * @param {number} position Coordinate, such as x, y\r\n * @param {number} lineWidth Should be nonnegative integer.\r\n * @param {boolean=} positiveOrNegative Default false (negative).\r\n * @return {number} Optimized position.\r\n */\r\n\r\n\r\nvar subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\r\n\r\nfunction hasFillOrStroke(fillOrStroke) {\r\n  return fillOrStroke != null && fillOrStroke !== 'none';\r\n} // Most lifted color are duplicated.\r\n\r\n\r\nvar liftedColorMap = zrUtil.createHashMap();\r\nvar liftedColorCount = 0;\r\n\r\nfunction liftColor(color) {\r\n  if (typeof color !== 'string') {\r\n    return color;\r\n  }\r\n\r\n  var liftedColor = liftedColorMap.get(color);\r\n\r\n  if (!liftedColor) {\r\n    liftedColor = colorTool.lift(color, -0.1);\r\n\r\n    if (liftedColorCount < 10000) {\r\n      liftedColorMap.set(color, liftedColor);\r\n      liftedColorCount++;\r\n    }\r\n  }\r\n\r\n  return liftedColor;\r\n}\r\n\r\nfunction cacheElementStl(el) {\r\n  if (!el.__hoverStlDirty) {\r\n    return;\r\n  }\r\n\r\n  el.__hoverStlDirty = false;\r\n  var hoverStyle = el.__hoverStl;\r\n\r\n  if (!hoverStyle) {\r\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\r\n    return;\r\n  }\r\n\r\n  var normalStyle = el.__cachedNormalStl = {};\r\n  el.__cachedNormalZ2 = el.z2;\r\n  var elStyle = el.style;\r\n\r\n  for (var name in hoverStyle) {\r\n    // See comment in `singleEnterEmphasis`.\r\n    if (hoverStyle[name] != null) {\r\n      normalStyle[name] = elStyle[name];\r\n    }\r\n  } // Always cache fill and stroke to normalStyle for lifting color.\r\n\r\n\r\n  normalStyle.fill = elStyle.fill;\r\n  normalStyle.stroke = elStyle.stroke;\r\n}\r\n\r\nfunction singleEnterEmphasis(el) {\r\n  var hoverStl = el.__hoverStl;\r\n\r\n  if (!hoverStl || el.__highlighted) {\r\n    return;\r\n  }\r\n\r\n  var zr = el.__zr;\r\n  var useHoverLayer = el.useHoverLayer && zr && zr.painter.type === 'canvas';\r\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\r\n\r\n  if (el.isGroup || !zr && el.useHoverLayer) {\r\n    return;\r\n  }\r\n\r\n  var elTarget = el;\r\n  var targetStyle = el.style;\r\n\r\n  if (useHoverLayer) {\r\n    elTarget = zr.addHover(el);\r\n    targetStyle = elTarget.style;\r\n  }\r\n\r\n  rollbackDefaultTextStyle(targetStyle);\r\n\r\n  if (!useHoverLayer) {\r\n    cacheElementStl(elTarget);\r\n  } // styles can be:\r\n  // {\r\n  //    label: {\r\n  //        show: false,\r\n  //        position: 'outside',\r\n  //        fontSize: 18\r\n  //    },\r\n  //    emphasis: {\r\n  //        label: {\r\n  //            show: true\r\n  //        }\r\n  //    }\r\n  // },\r\n  // where properties of `emphasis` may not appear in `normal`. We previously use\r\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\r\n  // But consider rich text and setOption in merge mode, it is impossible to cover\r\n  // all properties in merge. So we use merge mode when setting style here.\r\n  // But we choose the merge strategy that only properties that is not `null/undefined`.\r\n  // Because when making a textStyle (espacially rich text), it is not easy to distinguish\r\n  // `hasOwnProperty` and `null/undefined` in code, so we trade them as the same for simplicity.\r\n  // But this strategy brings a trouble that `null/undefined` can not be used to remove\r\n  // style any more in `emphasis`. Users can both set properties directly on normal and\r\n  // emphasis to avoid this issue, or we might support `'none'` for this case if required.\r\n\r\n\r\n  targetStyle.extendFrom(hoverStl);\r\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\r\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\r\n  applyDefaultTextStyle(targetStyle);\r\n\r\n  if (!useHoverLayer) {\r\n    el.dirty(false);\r\n    el.z2 += Z2_EMPHASIS_LIFT;\r\n  }\r\n}\r\n\r\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\r\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\r\n    targetStyle[prop] = liftColor(targetStyle[prop]);\r\n  }\r\n}\r\n\r\nfunction singleEnterNormal(el) {\r\n  var highlighted = el.__highlighted;\r\n\r\n  if (!highlighted) {\r\n    return;\r\n  }\r\n\r\n  el.__highlighted = false;\r\n\r\n  if (el.isGroup) {\r\n    return;\r\n  }\r\n\r\n  if (highlighted === 'layer') {\r\n    el.__zr && el.__zr.removeHover(el);\r\n  } else {\r\n    var style = el.style;\r\n    var normalStl = el.__cachedNormalStl;\r\n\r\n    if (normalStl) {\r\n      rollbackDefaultTextStyle(style);\r\n      el.setStyle(normalStl);\r\n      applyDefaultTextStyle(style);\r\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\r\n    // when `el` is on emphasis state. So here by comparing with 1, we try\r\n    // hard to make the bug case rare.\r\n\r\n\r\n    var normalZ2 = el.__cachedNormalZ2;\r\n\r\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\r\n      el.z2 = normalZ2;\r\n    }\r\n  }\r\n}\r\n\r\nfunction traverseUpdate(el, updater, commonParam) {\r\n  // If root is group, also enter updater for `highDownOnUpdate`.\r\n  var fromState = NORMAL;\r\n  var toState = NORMAL;\r\n  var trigger; // See the rule of `highDownOnUpdate` on `graphic.setAsHighDownDispatcher`.\r\n\r\n  el.__highlighted && (fromState = EMPHASIS, trigger = true);\r\n  updater(el, commonParam);\r\n  el.__highlighted && (toState = EMPHASIS, trigger = true);\r\n  el.isGroup && el.traverse(function (child) {\r\n    !child.isGroup && updater(child, commonParam);\r\n  });\r\n  trigger && el.__highDownOnUpdate && el.__highDownOnUpdate(fromState, toState);\r\n}\r\n/**\r\n * Set hover style (namely \"emphasis style\") of element, based on the current\r\n * style of the given `el`.\r\n * This method should be called after all of the normal styles have been adopted\r\n * to the `el`. See the reason on `setHoverStyle`.\r\n *\r\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\r\n * @param {Object} [el.hoverStyle] Can be set on el or its descendants,\r\n *        e.g., `el.hoverStyle = ...; graphic.setHoverStyle(el); `.\r\n *        Often used when item group has a label element and it's hoverStyle is different.\r\n * @param {Object|boolean} [hoverStl] The specified hover style.\r\n *        If set as `false`, disable the hover style.\r\n *        Similarly, The `el.hoverStyle` can alse be set\r\n *        as `false` to disable the hover style.\r\n *        Otherwise, use the default hover style if not provided.\r\n */\r\n\r\n\r\nfunction setElementHoverStyle(el, hoverStl) {\r\n  // For performance consideration, it might be better to make the \"hover style\" only the\r\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\r\n  hoverStl = el.__hoverStl = hoverStl !== false && (el.hoverStyle || hoverStl || {});\r\n  el.__hoverStlDirty = true; // FIXME\r\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\r\n  // It probably should be saved on `data` of series. Consider the cases:\r\n  // (1) A highlighted elements are moved out of the view port and re-enter\r\n  // again by dataZoom.\r\n  // (2) call `setOption` and replace elements totally when they are highlighted.\r\n\r\n  if (el.__highlighted) {\r\n    // Consider the case:\r\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\r\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\r\n    // been set outside and the cached \"normal style\" is out of date.\r\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\r\n    // of this method. In most cases, `z2` is not set and hover style should be able\r\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\r\n    // `doSingleLeaveHover` for details.\r\n\r\n    singleEnterNormal(el);\r\n    singleEnterEmphasis(el);\r\n  }\r\n}\r\n\r\nfunction onElementMouseOver(e) {\r\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n  && !this.__highByOuter && traverseUpdate(this, singleEnterEmphasis);\r\n}\r\n\r\nfunction onElementMouseOut(e) {\r\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n  && !this.__highByOuter && traverseUpdate(this, singleEnterNormal);\r\n}\r\n\r\nfunction onElementEmphasisEvent(highlightDigit) {\r\n  this.__highByOuter |= 1 << (highlightDigit || 0);\r\n  traverseUpdate(this, singleEnterEmphasis);\r\n}\r\n\r\nfunction onElementNormalEvent(highlightDigit) {\r\n  !(this.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdate(this, singleEnterNormal);\r\n}\r\n\r\nfunction shouldSilent(el, e) {\r\n  return el.__highDownSilentOnTouch && e.zrByTouch;\r\n}\r\n/**\r\n * Set hover style (namely \"emphasis style\") of element,\r\n * based on the current style of the given `el`.\r\n *\r\n * (1)\r\n * **CONSTRAINTS** for this method:\r\n * <A> This method MUST be called after all of the normal styles having been adopted\r\n * to the `el`.\r\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\r\n * \"normal style\" having been set to the el.\r\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\r\n * a default hover style).\r\n *\r\n * The reason: this method treat the current style of the `el` as the \"normal style\"\r\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\r\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\r\n * logic, where the el should shift from the original emphasis style to the new\r\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\r\n *\r\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\r\n * not found a better solution yet to fit the backward compatibility, performance and\r\n * the current programming style.\r\n *\r\n * (2)\r\n * Call the method for a \"root\" element once. Do not call it for each descendants.\r\n * If the descendants elemenets of a group has itself hover style different from the\r\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\r\n * not call this method for them.\r\n *\r\n * (3) These input parameters can be set directly on `el`:\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} [el.hoverStyle] See `graphic.setElementHoverStyle`.\r\n * @param {boolean} [el.highDownSilentOnTouch=false] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Function} [el.highDownOnUpdate] See `graphic.setAsHighDownDispatcher`.\r\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\r\n */\r\n\r\n\r\nfunction setHoverStyle(el, hoverStyle) {\r\n  setAsHighDownDispatcher(el, true);\r\n  traverseUpdate(el, setElementHoverStyle, hoverStyle);\r\n}\r\n/**\r\n * @param {module:zrender/Element} el\r\n * @param {Function} [el.highDownOnUpdate] Called when state updated.\r\n *        Since `setHoverStyle` has the constraint that it must be called after\r\n *        all of the normal style updated, `highDownOnUpdate` is not needed to\r\n *        trigger if both `fromState` and `toState` is 'normal', and needed to\r\n *        trigger if both `fromState` and `toState` is 'emphasis', which enables\r\n *        to sync outside style settings to \"emphasis\" state.\r\n *        @this {string} This dispatcher `el`.\r\n *        @param {string} fromState Can be \"normal\" or \"emphasis\".\r\n *               `fromState` might equal to `toState`,\r\n *               for example, when this method is called when `el` is\r\n *               on \"emphasis\" state.\r\n *        @param {string} toState Can be \"normal\" or \"emphasis\".\r\n *\r\n *        FIXME\r\n *        CAUTION: Do not expose `highDownOnUpdate` outside echarts.\r\n *        Because it is not a complete solution. The update\r\n *        listener should not have been mount in element,\r\n *        and the normal/emphasis state should not have\r\n *        mantained on elements.\r\n *\r\n * @param {boolean} [el.highDownSilentOnTouch=false]\r\n *        In touch device, mouseover event will be trigger on touchstart event\r\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\r\n *        conveniently use hoverStyle when tap on touch screen without additional\r\n *        code for compatibility.\r\n *        But if the chart/component has select feature, which usually also use\r\n *        hoverStyle, there might be conflict between 'select-highlight' and\r\n *        'hover-highlight' especially when roam is enabled (see geo for example).\r\n *        In this case, `highDownSilentOnTouch` should be used to disable\r\n *        hover-highlight on touch device.\r\n * @param {boolean} [asDispatcher=true] If `false`, do not set as \"highDownDispatcher\".\r\n */\r\n\r\n\r\nfunction setAsHighDownDispatcher(el, asDispatcher) {\r\n  var disable = asDispatcher === false; // Make `highDownSilentOnTouch` and `highDownOnUpdate` only work after\r\n  // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\r\n\r\n  el.__highDownSilentOnTouch = el.highDownSilentOnTouch;\r\n  el.__highDownOnUpdate = el.highDownOnUpdate; // Simple optimize, since this method might be\r\n  // called for each elements of a group in some cases.\r\n\r\n  if (!disable || el.__highDownDispatcher) {\r\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\r\n\r\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually by API or other components like hover link.\r\n\r\n    el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent); // Also keep previous record.\r\n\r\n    el.__highByOuter = el.__highByOuter || 0;\r\n    el.__highDownDispatcher = !disable;\r\n  }\r\n}\r\n/**\r\n * @param {module:zrender/src/Element} el\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction isHighDownDispatcher(el) {\r\n  return !!(el && el.__highDownDispatcher);\r\n}\r\n/**\r\n * Support hightlight/downplay record on each elements.\r\n * For the case: hover highlight/downplay (legend, visualMap, ...) and\r\n * user triggerred hightlight/downplay should not conflict.\r\n * Only all of the highlightDigit cleared, return to normal.\r\n * @param {string} highlightKey\r\n * @return {number} highlightDigit\r\n */\r\n\r\n\r\nfunction getHighlightDigit(highlightKey) {\r\n  var highlightDigit = _highlightKeyMap[highlightKey];\r\n\r\n  if (highlightDigit == null && _highlightNextDigit <= 32) {\r\n    highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\r\n  }\r\n\r\n  return highlightDigit;\r\n}\r\n/**\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} normalStyle\r\n * @param {Object} emphasisStyle\r\n * @param {module:echarts/model/Model} normalModel\r\n * @param {module:echarts/model/Model} emphasisModel\r\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\r\n * @param {string|Function} [opt.defaultText]\r\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\r\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\r\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\r\n * @param {Object} [normalSpecified]\r\n * @param {Object} [emphasisSpecified]\r\n */\r\n\r\n\r\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\r\n  opt = opt || EMPTY_OBJ;\r\n  var labelFetcher = opt.labelFetcher;\r\n  var labelDataIndex = opt.labelDataIndex;\r\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\r\n  // is not supported util someone requests.\r\n\r\n  var showNormal = normalModel.getShallow('show');\r\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\r\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\r\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\r\n\r\n  var baseText;\r\n\r\n  if (showNormal || showEmphasis) {\r\n    if (labelFetcher) {\r\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\r\n    }\r\n\r\n    if (baseText == null) {\r\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\r\n    }\r\n  }\r\n\r\n  var normalStyleText = showNormal ? baseText : null;\r\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\r\n\r\n  if (normalStyleText != null || emphasisStyleText != null) {\r\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\r\n    // values have to be set on `normalStyle`.\r\n    // If we set default values on `emphasisStyle`, consider case:\r\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\r\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\r\n    // Then the 'red' will not work on emphasis.\r\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\r\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\r\n  }\r\n\r\n  normalStyle.text = normalStyleText;\r\n  emphasisStyle.text = emphasisStyleText;\r\n}\r\n/**\r\n * Modify label style manually.\r\n * Only works after `setLabelStyle` and `setElementHoverStyle` called.\r\n *\r\n * @param {module:zrender/src/Element} el\r\n * @param {Object} [normalStyleProps] optional\r\n * @param {Object} [emphasisStyleProps] optional\r\n */\r\n\r\n\r\nfunction modifyLabelStyle(el, normalStyleProps, emphasisStyleProps) {\r\n  var elStyle = el.style;\r\n\r\n  if (normalStyleProps) {\r\n    rollbackDefaultTextStyle(elStyle);\r\n    el.setStyle(normalStyleProps);\r\n    applyDefaultTextStyle(elStyle);\r\n  }\r\n\r\n  elStyle = el.__hoverStl;\r\n\r\n  if (emphasisStyleProps && elStyle) {\r\n    rollbackDefaultTextStyle(elStyle);\r\n    zrUtil.extend(elStyle, emphasisStyleProps);\r\n    applyDefaultTextStyle(elStyle);\r\n  }\r\n}\r\n/**\r\n * Set basic textStyle properties.\r\n * See more info in `setTextStyleCommon`.\r\n * @param {Object|module:zrender/graphic/Style} textStyle\r\n * @param {module:echarts/model/Model} model\r\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\r\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\r\n * @param {boolean} [isEmphasis]\r\n */\r\n\r\n\r\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\r\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\r\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\r\n\r\n  return textStyle;\r\n}\r\n/**\r\n * Set text option in the style.\r\n * See more info in `setTextStyleCommon`.\r\n * @deprecated\r\n * @param {Object} textStyle\r\n * @param {module:echarts/model/Model} labelModel\r\n * @param {string|boolean} defaultColor Default text color.\r\n *        If set as false, it will be processed as a emphasis style.\r\n */\r\n\r\n\r\nfunction setText(textStyle, labelModel, defaultColor) {\r\n  var opt = {\r\n    isRectText: true\r\n  };\r\n  var isEmphasis;\r\n\r\n  if (defaultColor === false) {\r\n    isEmphasis = true;\r\n  } else {\r\n    // Support setting color as 'auto' to get visual color.\r\n    opt.autoColor = defaultColor;\r\n  }\r\n\r\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\r\n}\r\n/**\r\n * The uniform entry of set text style, that is, retrieve style definitions\r\n * from `model` and set to `textStyle` object.\r\n *\r\n * Never in merge mode, but in overwrite mode, that is, all of the text style\r\n * properties will be set. (Consider the states of normal and emphasis and\r\n * default value can be adopted, merge would make the logic too complicated\r\n * to manage.)\r\n *\r\n * The `textStyle` object can either be a plain object or an instance of\r\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\r\n * After this mothod called, the `textStyle` object can then be used in\r\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\r\n *\r\n * Default value will be adopted and `insideRollbackOpt` will be created.\r\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\r\n *\r\n * opt: {\r\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\r\n *      isRectText: boolean,\r\n *      autoColor: string, specify a color when color is 'auto',\r\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\r\n *              If autoColor specified, it is used as default textFill.\r\n *      useInsideStyle:\r\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\r\n *                  if `textFill` is not specified.\r\n *              `false`: Do not use inside style.\r\n *              `null/undefined`: use inside style if `isRectText` is true and\r\n *                  `textFill` is not specified and textPosition contains `'inside'`.\r\n *      forceRich: boolean\r\n * }\r\n */\r\n\r\n\r\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\r\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\r\n  opt = opt || EMPTY_OBJ;\r\n\r\n  if (opt.isRectText) {\r\n    var textPosition;\r\n\r\n    if (opt.getTextPosition) {\r\n      textPosition = opt.getTextPosition(textStyleModel, isEmphasis);\r\n    } else {\r\n      textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\r\n      // in bar series, and magric type should be considered.\r\n\r\n      textPosition === 'outside' && (textPosition = 'top');\r\n    }\r\n\r\n    textStyle.textPosition = textPosition;\r\n    textStyle.textOffset = textStyleModel.getShallow('offset');\r\n    var labelRotate = textStyleModel.getShallow('rotate');\r\n    labelRotate != null && (labelRotate *= Math.PI / 180);\r\n    textStyle.textRotation = labelRotate;\r\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\r\n  }\r\n\r\n  var ecModel = textStyleModel.ecModel;\r\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\r\n  // {\r\n  //     data: [{\r\n  //         value: 12,\r\n  //         label: {\r\n  //             rich: {\r\n  //                 // no 'a' here but using parent 'a'.\r\n  //             }\r\n  //         }\r\n  //     }],\r\n  //     rich: {\r\n  //         a: { ... }\r\n  //     }\r\n  // }\r\n\r\n  var richItemNames = getRichItemNames(textStyleModel);\r\n  var richResult;\r\n\r\n  if (richItemNames) {\r\n    richResult = {};\r\n\r\n    for (var name in richItemNames) {\r\n      if (richItemNames.hasOwnProperty(name)) {\r\n        // Cascade is supported in rich.\r\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\r\n        // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\r\n        // the default color `'blue'` will not be adopted if no color declared in `rich`.\r\n        // That might confuses users. So probably we should put `textStyleModel` as the\r\n        // root ancestor of the `richTextStyle`. But that would be a break change.\r\n\r\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\r\n      }\r\n    }\r\n  }\r\n\r\n  textStyle.rich = richResult;\r\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\r\n\r\n  if (opt.forceRich && !opt.textStyle) {\r\n    opt.textStyle = {};\r\n  }\r\n\r\n  return textStyle;\r\n} // Consider case:\r\n// {\r\n//     data: [{\r\n//         value: 12,\r\n//         label: {\r\n//             rich: {\r\n//                 // no 'a' here but using parent 'a'.\r\n//             }\r\n//         }\r\n//     }],\r\n//     rich: {\r\n//         a: { ... }\r\n//     }\r\n// }\r\n\r\n\r\nfunction getRichItemNames(textStyleModel) {\r\n  // Use object to remove duplicated names.\r\n  var richItemNameMap;\r\n\r\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\r\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\r\n\r\n    if (rich) {\r\n      richItemNameMap = richItemNameMap || {};\r\n\r\n      for (var name in rich) {\r\n        if (rich.hasOwnProperty(name)) {\r\n          richItemNameMap[name] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    textStyleModel = textStyleModel.parentModel;\r\n  }\r\n\r\n  return richItemNameMap;\r\n}\r\n\r\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\r\n  // In merge mode, default value should not be given.\r\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\r\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\r\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\r\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\r\n\r\n  if (!isEmphasis) {\r\n    if (isBlock) {\r\n      textStyle.insideRollbackOpt = opt;\r\n      applyDefaultTextStyle(textStyle);\r\n    } // Set default finally.\r\n\r\n\r\n    if (textStyle.textFill == null) {\r\n      textStyle.textFill = opt.autoColor;\r\n    }\r\n  } // Do not use `getFont` here, because merge should be supported, where\r\n  // part of these properties may be changed in emphasis style, and the\r\n  // others should remain their original value got from normal style.\r\n\r\n\r\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\r\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\r\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\r\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\r\n  textStyle.textAlign = textStyleModel.getShallow('align');\r\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\r\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\r\n  textStyle.textWidth = textStyleModel.getShallow('width');\r\n  textStyle.textHeight = textStyleModel.getShallow('height');\r\n  textStyle.textTag = textStyleModel.getShallow('tag');\r\n\r\n  if (!isBlock || !opt.disableBox) {\r\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\r\n    textStyle.textPadding = textStyleModel.getShallow('padding');\r\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\r\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\r\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\r\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\r\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\r\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\r\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\r\n  }\r\n\r\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\r\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\r\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\r\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\r\n}\r\n\r\nfunction getAutoColor(color, opt) {\r\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\r\n}\r\n/**\r\n * Give some default value to the input `textStyle` object, based on the current settings\r\n * in this `textStyle` object.\r\n *\r\n * The Scenario:\r\n * when text position is `inside` and `textFill` is not specified, we show\r\n * text border by default for better view. But it should be considered that text position\r\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\r\n * restore the style.\r\n *\r\n * Usage (& NOTICE):\r\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\r\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\r\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\r\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\r\n * does, `rollbackDefaultTextStyle` is not needed to be called).\r\n */\r\n\r\n\r\nfunction applyDefaultTextStyle(textStyle) {\r\n  var textPosition = textStyle.textPosition;\r\n  var opt = textStyle.insideRollbackOpt;\r\n  var insideRollback;\r\n\r\n  if (opt && textStyle.textFill == null) {\r\n    var autoColor = opt.autoColor;\r\n    var isRectText = opt.isRectText;\r\n    var useInsideStyle = opt.useInsideStyle;\r\n    var useInsideStyleCache = useInsideStyle !== false && (useInsideStyle === true || isRectText && textPosition // textPosition can be [10, 30]\r\n    && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0);\r\n    var useAutoColorCache = !useInsideStyleCache && autoColor != null; // All of the props declared in `CACHED_LABEL_STYLE_PROPERTIES` are to be cached.\r\n\r\n    if (useInsideStyleCache || useAutoColorCache) {\r\n      insideRollback = {\r\n        textFill: textStyle.textFill,\r\n        textStroke: textStyle.textStroke,\r\n        textStrokeWidth: textStyle.textStrokeWidth\r\n      };\r\n    }\r\n\r\n    if (useInsideStyleCache) {\r\n      textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\r\n\r\n      if (textStyle.textStroke == null) {\r\n        textStyle.textStroke = autoColor;\r\n        textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\r\n      }\r\n    }\r\n\r\n    if (useAutoColorCache) {\r\n      textStyle.textFill = autoColor;\r\n    }\r\n  } // Always set `insideRollback`, so that the previous one can be cleared.\r\n\r\n\r\n  textStyle.insideRollback = insideRollback;\r\n}\r\n/**\r\n * Consider the case: in a scatter,\r\n * label: {\r\n *     normal: {position: 'inside'},\r\n *     emphasis: {position: 'top'}\r\n * }\r\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\r\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\r\n * should be retured to 'autoColor', but not keep '#fff'.\r\n */\r\n\r\n\r\nfunction rollbackDefaultTextStyle(style) {\r\n  var insideRollback = style.insideRollback;\r\n\r\n  if (insideRollback) {\r\n    // Reset all of the props in `CACHED_LABEL_STYLE_PROPERTIES`.\r\n    style.textFill = insideRollback.textFill;\r\n    style.textStroke = insideRollback.textStroke;\r\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\r\n    style.insideRollback = null;\r\n  }\r\n}\r\n\r\nfunction getFont(opt, ecModel) {\r\n  var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\r\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\r\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\r\n}\r\n\r\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\r\n  if (typeof dataIndex === 'function') {\r\n    cb = dataIndex;\r\n    dataIndex = null;\r\n  } // Do not check 'animation' property directly here. Consider this case:\r\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\r\n  // but its parent model (`seriesModel`) does.\r\n\r\n\r\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\r\n\r\n  if (animationEnabled) {\r\n    var postfix = isUpdate ? 'Update' : '';\r\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\r\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\r\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\r\n\r\n    if (typeof animationDelay === 'function') {\r\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\r\n    }\r\n\r\n    if (typeof duration === 'function') {\r\n      duration = duration(dataIndex);\r\n    }\r\n\r\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\r\n  } else {\r\n    el.stopAnimation();\r\n    el.attr(props);\r\n    cb && cb();\r\n  }\r\n}\r\n/**\r\n * Update graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So if do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} [cb]\r\n * @example\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n *     // Or\r\n *     graphic.updateProps(el, {\r\n *         position: [100, 100]\r\n *     }, seriesModel, function () { console.log('Animation done!'); });\r\n */\r\n\r\n\r\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\r\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\r\n}\r\n/**\r\n * Init graphic element properties with or without animation according to the\r\n * configuration in series.\r\n *\r\n * Caution: this method will stop previous animation.\r\n * So if do not use this method to one element twice before\r\n * animation starts, unless you know what you are doing.\r\n *\r\n * @param {module:zrender/Element} el\r\n * @param {Object} props\r\n * @param {module:echarts/model/Model} [animatableModel]\r\n * @param {number} [dataIndex]\r\n * @param {Function} cb\r\n */\r\n\r\n\r\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\r\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\r\n}\r\n/**\r\n * Get transform matrix of target (param target),\r\n * in coordinate of its ancestor (param ancestor)\r\n *\r\n * @param {module:zrender/mixin/Transformable} target\r\n * @param {module:zrender/mixin/Transformable} [ancestor]\r\n */\r\n\r\n\r\nfunction getTransform(target, ancestor) {\r\n  var mat = matrix.identity([]);\r\n\r\n  while (target && target !== ancestor) {\r\n    matrix.mul(mat, target.getLocalTransform(), mat);\r\n    target = target.parent;\r\n  }\r\n\r\n  return mat;\r\n}\r\n/**\r\n * Apply transform to an vertex.\r\n * @param {Array.<number>} target [x, y]\r\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\r\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {Array.<number>} [x, y]\r\n */\r\n\r\n\r\nfunction applyTransform(target, transform, invert) {\r\n  if (transform && !zrUtil.isArrayLike(transform)) {\r\n    transform = Transformable.getLocalTransform(transform);\r\n  }\r\n\r\n  if (invert) {\r\n    transform = matrix.invert([], transform);\r\n  }\r\n\r\n  return vector.applyTransform([], target, transform);\r\n}\r\n/**\r\n * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n * @param {boolean=} invert Whether use invert matrix.\r\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n */\r\n\r\n\r\nfunction transformDirection(direction, transform, invert) {\r\n  // Pick a base, ensure that transform result will not be (0, 0).\r\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\r\n  vertex = applyTransform(vertex, transform, invert);\r\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\r\n}\r\n/**\r\n * Apply group transition animation from g1 to g2.\r\n * If no animatableModel, no animation.\r\n */\r\n\r\n\r\nfunction groupTransition(g1, g2, animatableModel, cb) {\r\n  if (!g1 || !g2) {\r\n    return;\r\n  }\r\n\r\n  function getElMap(g) {\r\n    var elMap = {};\r\n    g.traverse(function (el) {\r\n      if (!el.isGroup && el.anid) {\r\n        elMap[el.anid] = el;\r\n      }\r\n    });\r\n    return elMap;\r\n  }\r\n\r\n  function getAnimatableProps(el) {\r\n    var obj = {\r\n      position: vector.clone(el.position),\r\n      rotation: el.rotation\r\n    };\r\n\r\n    if (el.shape) {\r\n      obj.shape = zrUtil.extend({}, el.shape);\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  var elMap1 = getElMap(g1);\r\n  g2.traverse(function (el) {\r\n    if (!el.isGroup && el.anid) {\r\n      var oldEl = elMap1[el.anid];\r\n\r\n      if (oldEl) {\r\n        var newProp = getAnimatableProps(el);\r\n        el.attr(getAnimatableProps(oldEl));\r\n        updateProps(el, newProp, animatableModel, el.dataIndex);\r\n      } // else {\r\n      //     if (el.previousProps) {\r\n      //         graphic.updateProps\r\n      //     }\r\n      // }\r\n\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Array.<Array.<number>>} A new clipped points.\r\n */\r\n\r\n\r\nfunction clipPointsByRect(points, rect) {\r\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\r\n  // and when element have border.\r\n  return zrUtil.map(points, function (point) {\r\n    var x = point[0];\r\n    x = mathMax(x, rect.x);\r\n    x = mathMin(x, rect.x + rect.width);\r\n    var y = point[1];\r\n    y = mathMax(y, rect.y);\r\n    y = mathMin(y, rect.y + rect.height);\r\n    return [x, y];\r\n  });\r\n}\r\n/**\r\n * @param {Object} targetRect {x, y, width, height}\r\n * @param {Object} rect {x, y, width, height}\r\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\r\n */\r\n\r\n\r\nfunction clipRectByRect(targetRect, rect) {\r\n  var x = mathMax(targetRect.x, rect.x);\r\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\r\n  var y = mathMax(targetRect.y, rect.y);\r\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\r\n  // should be painted. So return undefined.\r\n\r\n  if (x2 >= x && y2 >= y) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      width: x2 - x,\r\n      height: y2 - y\r\n    };\r\n  }\r\n}\r\n/**\r\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\r\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\r\n * @param {Object} [rect] {x, y, width, height}\r\n * @return {module:zrender/Element} Icon path or image element.\r\n */\r\n\r\n\r\nfunction createIcon(iconStr, opt, rect) {\r\n  opt = zrUtil.extend({\r\n    rectHover: true\r\n  }, opt);\r\n  var style = opt.style = {\r\n    strokeNoScale: true\r\n  };\r\n  rect = rect || {\r\n    x: -1,\r\n    y: -1,\r\n    width: 2,\r\n    height: 2\r\n  };\r\n\r\n  if (iconStr) {\r\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\r\n  }\r\n}\r\n/**\r\n * Return `true` if the given line (line `a`) and the given polygon\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {Array.<Array.<number>>} points Points of the polygon.\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\r\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\r\n    var p = points[i];\r\n\r\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\r\n      return true;\r\n    }\r\n\r\n    p2 = p;\r\n  }\r\n}\r\n/**\r\n * Return `true` if the given two lines (line `a` and line `b`)\r\n * are intersect.\r\n * Note that we do not count colinear as intersect here because no\r\n * requirement for that. We could do that if required in future.\r\n *\r\n * @param {number} a1x\r\n * @param {number} a1y\r\n * @param {number} a2x\r\n * @param {number} a2y\r\n * @param {number} b1x\r\n * @param {number} b1y\r\n * @param {number} b2x\r\n * @param {number} b2y\r\n * @return {boolean}\r\n */\r\n\r\n\r\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\r\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\r\n  var mx = a2x - a1x;\r\n  var my = a2y - a1y;\r\n  var nx = b2x - b1x;\r\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\r\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\r\n\r\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\r\n\r\n  if (nearZero(nmCrossProduct)) {\r\n    return false;\r\n  } // `vec_m` and `vec_n` are intersect iff\r\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\r\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\r\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\r\n\r\n\r\n  var b1a1x = a1x - b1x;\r\n  var b1a1y = a1y - b1y;\r\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\r\n\r\n  if (q < 0 || q > 1) {\r\n    return false;\r\n  }\r\n\r\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\r\n\r\n  if (p < 0 || p > 1) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * Cross product of 2-dimension vector.\r\n */\r\n\r\n\r\nfunction crossProduct2d(x1, y1, x2, y2) {\r\n  return x1 * y2 - x2 * y1;\r\n}\r\n\r\nfunction nearZero(val) {\r\n  return val <= 1e-6 && val >= -1e-6;\r\n} // Register built-in shapes. These shapes might be overwirtten\r\n// by users, although we do not recommend that.\r\n\r\n\r\nregisterShape('circle', Circle);\r\nregisterShape('sector', Sector);\r\nregisterShape('ring', Ring);\r\nregisterShape('polygon', Polygon);\r\nregisterShape('polyline', Polyline);\r\nregisterShape('rect', Rect);\r\nregisterShape('line', Line);\r\nregisterShape('bezierCurve', BezierCurve);\r\nregisterShape('arc', Arc);\r\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\r\nexports.CACHED_LABEL_STYLE_PROPERTIES = CACHED_LABEL_STYLE_PROPERTIES;\r\nexports.extendShape = extendShape;\r\nexports.extendPath = extendPath;\r\nexports.registerShape = registerShape;\r\nexports.getShapeClass = getShapeClass;\r\nexports.makePath = makePath;\r\nexports.makeImage = makeImage;\r\nexports.mergePath = mergePath;\r\nexports.resizePath = resizePath;\r\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\r\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\r\nexports.subPixelOptimize = subPixelOptimize;\r\nexports.setElementHoverStyle = setElementHoverStyle;\r\nexports.setHoverStyle = setHoverStyle;\r\nexports.setAsHighDownDispatcher = setAsHighDownDispatcher;\r\nexports.isHighDownDispatcher = isHighDownDispatcher;\r\nexports.getHighlightDigit = getHighlightDigit;\r\nexports.setLabelStyle = setLabelStyle;\r\nexports.modifyLabelStyle = modifyLabelStyle;\r\nexports.setTextStyle = setTextStyle;\r\nexports.setText = setText;\r\nexports.getFont = getFont;\r\nexports.updateProps = updateProps;\r\nexports.initProps = initProps;\r\nexports.getTransform = getTransform;\r\nexports.applyTransform = applyTransform;\r\nexports.transformDirection = transformDirection;\r\nexports.groupTransition = groupTransition;\r\nexports.clipPointsByRect = clipPointsByRect;\r\nexports.clipRectByRect = clipRectByRect;\r\nexports.createIcon = createIcon;\r\nexports.linePolygonIntersect = linePolygonIntersect;\r\nexports.lineLineIntersect = lineLineIntersect;"]},"metadata":{},"sourceType":"script"}