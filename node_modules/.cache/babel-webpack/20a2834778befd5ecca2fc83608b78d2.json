{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createForOfIteratorHelper from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _createClass from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { EventEmitter, Renderer2, Inject, ViewChild, ElementRef, Input, Output, Component, NgModule, ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"cropcanvas\"];\nvar _c1 = [\"fileInput\"];\n\nfunction ImageCropperComponent_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"change\", function ImageCropperComponent_input_1_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.fileChangeListener($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar CropperDrawSettings = function CropperDrawSettings(settings) {\n  _classCallCheck(this, CropperDrawSettings);\n\n  this.lineDash = false;\n  this.strokeWidth = 1;\n  this.strokeColor = 'rgba(255,255,255,1)';\n  this.fillColor = 'rgba(255,255,255,1)';\n  this.dragIconStrokeWidth = 1;\n  this.dragIconStrokeColor = 'rgba(0,0,0,1)';\n  this.dragIconFillColor = 'rgba(255,255,255,1)';\n  this.backgroundFillColor = 'rgba(0,0,0,0.6)';\n\n  if (typeof settings === 'object') {\n    this.lineDash = settings.lineDash || this.lineDash;\n    this.strokeWidth = settings.strokeWidth || this.strokeWidth;\n    this.fillColor = settings.fillColor || this.fillColor;\n    this.strokeColor = settings.strokeColor || this.strokeColor;\n    this.dragIconStrokeWidth = settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\n    this.dragIconStrokeColor = settings.dragIconStrokeColor || this.dragIconStrokeColor;\n    this.dragIconFillColor = settings.dragIconFillColor || this.dragIconFillColor;\n    this.backgroundFillColor = settings.backgroundFillColor || this.backgroundFillColor;\n  }\n};\n\nvar CropperSettings = /*#__PURE__*/function () {\n  function CropperSettings(settings) {\n    _classCallCheck(this, CropperSettings);\n\n    this.canvasWidth = 300;\n    this.canvasHeight = 300;\n    this.dynamicSizing = false;\n    this.width = 200;\n    this.height = 200;\n    this.minWidth = 50;\n    this.minHeight = 50;\n    this.minWithRelativeToResolution = true;\n    this.croppedWidth = 100;\n    this.croppedHeight = 100;\n    this.cropperDrawSettings = new CropperDrawSettings();\n    this.touchRadius = 20;\n    this.noFileInput = false;\n    this.markerSizeMultiplier = 1;\n    this.centerTouchRadius = 20;\n    this.showCenterMarker = true;\n    this.allowedFilesRegex = /\\.(jpe?g|png|gif|bmp)$/i;\n    this.cropOnResize = true;\n    this.preserveSize = false;\n    this.compressRatio = 1.0; // tslint:disable-next-line:variable-name\n\n    this._rounded = false; // tslint:disable-next-line:variable-name\n\n    this._keepAspect = true;\n\n    if (typeof settings === 'object') {\n      Object.assign(this, settings);\n    }\n  }\n\n  _createClass(CropperSettings, [{\n    key: \"rounded\",\n    get: function get() {\n      return this._rounded;\n    },\n    set: function set(val) {\n      this._rounded = val;\n\n      if (val) {\n        this._keepAspect = true;\n      }\n    }\n  }, {\n    key: \"keepAspect\",\n    get: function get() {\n      return this._keepAspect;\n    },\n    set: function set(val) {\n      this._keepAspect = val;\n\n      if (this._rounded === true && this._keepAspect === false) {\n        console.error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');\n        this._keepAspect = true;\n      }\n    }\n  }]);\n\n  return CropperSettings;\n}();\n\nvar Fraction = /*#__PURE__*/function (_Number) {\n  _inherits(Fraction, _Number);\n\n  var _super = _createSuper(Fraction);\n\n  function Fraction() {\n    _classCallCheck(this, Fraction);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Fraction;\n}( /*#__PURE__*/_wrapNativeSuper(Number));\n\nvar Exif = /*#__PURE__*/function () {\n  function Exif() {\n    _classCallCheck(this, Exif);\n\n    this.debug = false;\n    this.IptcFieldMap = {\n      0x78: 'caption',\n      0x6e: 'credit',\n      0x19: 'keywords',\n      0x37: 'dateCreated',\n      0x50: 'byline',\n      0x55: 'bylineTitle',\n      0x7a: 'captionWriter',\n      0x69: 'headline',\n      0x74: 'copyright',\n      0x0f: 'category'\n    };\n    this.Tags = {\n      // version tags\n      0x9000: 'ExifVersion',\n      0xa000: 'FlashpixVersion',\n      // colorspace tags\n      0xa001: 'ColorSpace',\n      // image configuration\n      0xa002: 'PixelXDimension',\n      0xa003: 'PixelYDimension',\n      0x9101: 'ComponentsConfiguration',\n      0x9102: 'CompressedBitsPerPixel',\n      // user information\n      0x927c: 'MakerNote',\n      0x9286: 'UserComment',\n      // related file\n      0xa004: 'RelatedSoundFile',\n      // date and time\n      0x9003: 'DateTimeOriginal',\n      0x9004: 'DateTimeDigitized',\n      0x9290: 'SubsecTime',\n      0x9291: 'SubsecTimeOriginal',\n      0x9292: 'SubsecTimeDigitized',\n      // picture-taking conditions\n      0x829a: 'ExposureTime',\n      0x829d: 'FNumber',\n      0x8822: 'ExposureProgram',\n      0x8824: 'SpectralSensitivity',\n      0x8827: 'ISOSpeedRatings',\n      0x8828: 'OECF',\n      0x9201: 'ShutterSpeedValue',\n      0x9202: 'ApertureValue',\n      0x9203: 'BrightnessValue',\n      0x9204: 'ExposureBias',\n      0x9205: 'MaxApertureValue',\n      0x9206: 'SubjectDistance',\n      0x9207: 'MeteringMode',\n      0x9208: 'LightSource',\n      0x9209: 'Flash',\n      0x9214: 'SubjectArea',\n      0x920a: 'FocalLength',\n      0xa20b: 'FlashEnergy',\n      0xa20c: 'SpatialFrequencyResponse',\n      0xa20e: 'FocalPlaneXResolution',\n      0xa20f: 'FocalPlaneYResolution',\n      0xa210: 'FocalPlaneResolutionUnit',\n      0xa214: 'SubjectLocation',\n      0xa215: 'ExposureIndex',\n      0xa217: 'SensingMethod',\n      0xa300: 'FileSource',\n      0xa301: 'SceneType',\n      0xa302: 'CFAPattern',\n      0xa401: 'CustomRendered',\n      0xa402: 'ExposureMode',\n      0xa403: 'WhiteBalance',\n      0xa404: 'DigitalZoomRation',\n      0xa405: 'FocalLengthIn35mmFilm',\n      0xa406: 'SceneCaptureType',\n      0xa407: 'GainControl',\n      0xa408: 'Contrast',\n      0xa409: 'Saturation',\n      0xa40a: 'Sharpness',\n      0xa40b: 'DeviceSettingDescription',\n      0xa40c: 'SubjectDistanceRange',\n      // other tags\n      0xa005: 'InteroperabilityIFDPointer',\n      0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\n\n    };\n    this.TiffTags = {\n      0x0100: 'ImageWidth',\n      0x0101: 'ImageHeight',\n      0x8769: 'ExifIFDPointer',\n      0x8825: 'GPSInfoIFDPointer',\n      0xa005: 'InteroperabilityIFDPointer',\n      0x0102: 'BitsPerSample',\n      0x0103: 'Compression',\n      0x0106: 'PhotometricInterpretation',\n      0x0112: 'Orientation',\n      0x0115: 'SamplesPerPixel',\n      0x011c: 'PlanarConfiguration',\n      0x0212: 'YCbCrSubSampling',\n      0x0213: 'YCbCrPositioning',\n      0x011a: 'XResolution',\n      0x011b: 'YResolution',\n      0x0128: 'ResolutionUnit',\n      0x0111: 'StripOffsets',\n      0x0116: 'RowsPerStrip',\n      0x0117: 'StripByteCounts',\n      0x0201: 'JPEGInterchangeFormat',\n      0x0202: 'JPEGInterchangeFormatLength',\n      0x012d: 'TransferFunction',\n      0x013e: 'WhitePoint',\n      0x013f: 'PrimaryChromaticities',\n      0x0211: 'YCbCrCoefficients',\n      0x0214: 'ReferenceBlackWhite',\n      0x0132: 'DateTime',\n      0x010e: 'ImageDescription',\n      0x010f: 'Make',\n      0x0110: 'Model',\n      0x0131: 'Software',\n      0x013b: 'Artist',\n      0x8298: 'Copyright'\n    };\n    this.GPSTags = {\n      0x0000: 'GPSVersionID',\n      0x0001: 'GPSLatitudeRef',\n      0x0002: 'GPSLatitude',\n      0x0003: 'GPSLongitudeRef',\n      0x0004: 'GPSLongitude',\n      0x0005: 'GPSAltitudeRef',\n      0x0006: 'GPSAltitude',\n      0x0007: 'GPSTimeStamp',\n      0x0008: 'GPSSatellites',\n      0x0009: 'GPSStatus',\n      0x000a: 'GPSMeasureMode',\n      0x000b: 'GPSDOP',\n      0x000c: 'GPSSpeedRef',\n      0x000d: 'GPSSpeed',\n      0x000e: 'GPSTrackRef',\n      0x000f: 'GPSTrack',\n      0x0010: 'GPSImgDirectionRef',\n      0x0011: 'GPSImgDirection',\n      0x0012: 'GPSMapDatum',\n      0x0013: 'GPSDestLatitudeRef',\n      0x0014: 'GPSDestLatitude',\n      0x0015: 'GPSDestLongitudeRef',\n      0x0016: 'GPSDestLongitude',\n      0x0017: 'GPSDestBearingRef',\n      0x0018: 'GPSDestBearing',\n      0x0019: 'GPSDestDistanceRef',\n      0x001a: 'GPSDestDistance',\n      0x001b: 'GPSProcessingMethod',\n      0x001c: 'GPSAreaInformation',\n      0x001d: 'GPSDateStamp',\n      0x001e: 'GPSDifferential'\n    };\n    this.StringValues = {\n      ExposureProgram: {\n        0: 'Not defined',\n        1: 'Manual',\n        2: 'Normal program',\n        3: 'Aperture priority',\n        4: 'Shutter priority',\n        5: 'Creative program',\n        6: 'Action program',\n        7: 'Portrait mode',\n        8: 'Landscape mode'\n      },\n      MeteringMode: {\n        0: 'Unknown',\n        1: 'Average',\n        2: 'CenterWeightedAverage',\n        3: 'Spot',\n        4: 'MultiSpot',\n        5: 'Pattern',\n        6: 'Partial',\n        255: 'Other'\n      },\n      LightSource: {\n        0: 'Unknown',\n        1: 'Daylight',\n        2: 'Fluorescent',\n        3: 'Tungsten (incandescent light)',\n        4: 'Flash',\n        9: 'Fine weather',\n        10: 'Cloudy weather',\n        11: 'Shade',\n        12: 'Daylight fluorescent (D 5700 - 7100K)',\n        13: 'Day white fluorescent (N 4600 - 5400K)',\n        14: 'Cool white fluorescent (W 3900 - 4500K)',\n        15: 'White fluorescent (WW 3200 - 3700K)',\n        17: 'Standard light A',\n        18: 'Standard light B',\n        19: 'Standard light C',\n        20: 'D55',\n        21: 'D65',\n        22: 'D75',\n        23: 'D50',\n        24: 'ISO studio tungsten',\n        255: 'Other'\n      },\n      Flash: {\n        0x0000: 'Flash did not fire',\n        0x0001: 'Flash fired',\n        0x0005: 'Strobe return light not detected',\n        0x0007: 'Strobe return light detected',\n        0x0009: 'Flash fired, compulsory flash mode',\n        0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n        0x000f: 'Flash fired, compulsory flash mode, return light detected',\n        0x0010: 'Flash did not fire, compulsory flash mode',\n        0x0018: 'Flash did not fire, auto mode',\n        0x0019: 'Flash fired, auto mode',\n        0x001d: 'Flash fired, auto mode, return light not detected',\n        0x001f: 'Flash fired, auto mode, return light detected',\n        0x0020: 'No flash function',\n        0x0041: 'Flash fired, red-eye reduction mode',\n        0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n        0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n        0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n        0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n        0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n        0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n        0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n        0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n      },\n      SensingMethod: {\n        1: 'Not defined',\n        2: 'One-chip color area sensor',\n        3: 'Two-chip color area sensor',\n        4: 'Three-chip color area sensor',\n        5: 'Color sequential area sensor',\n        7: 'Trilinear sensor',\n        8: 'Color sequential linear sensor'\n      },\n      SceneCaptureType: {\n        0: 'Standard',\n        1: 'Landscape',\n        2: 'Portrait',\n        3: 'Night scene'\n      },\n      SceneType: {\n        1: 'Directly photographed'\n      },\n      CustomRendered: {\n        0: 'Normal process',\n        1: 'Custom process'\n      },\n      WhiteBalance: {\n        0: 'Auto white balance',\n        1: 'Manual white balance'\n      },\n      GainControl: {\n        0: 'None',\n        1: 'Low gain up',\n        2: 'High gain up',\n        3: 'Low gain down',\n        4: 'High gain down'\n      },\n      Contrast: {\n        0: 'Normal',\n        1: 'Soft',\n        2: 'Hard'\n      },\n      Saturation: {\n        0: 'Normal',\n        1: 'Low saturation',\n        2: 'High saturation'\n      },\n      Sharpness: {\n        0: 'Normal',\n        1: 'Soft',\n        2: 'Hard'\n      },\n      SubjectDistanceRange: {\n        0: 'Unknown',\n        1: 'Macro',\n        2: 'Close view',\n        3: 'Distant view'\n      },\n      FileSource: {\n        3: 'DSC'\n      },\n      Components: {\n        0: '',\n        1: 'Y',\n        2: 'Cb',\n        3: 'Cr',\n        4: 'R',\n        5: 'G',\n        6: 'B'\n      }\n    };\n  }\n\n  _createClass(Exif, [{\n    key: \"addEvent\",\n    value: function addEvent(element, event, handler) {\n      if (element.addEventListener) {\n        element.addEventListener(event, handler, false);\n      } else {\n        // Hello, IE!\n        if (element.attachEvent) {\n          element.attachEvent('on' + event, handler);\n        }\n      }\n    }\n  }, {\n    key: \"imageHasData\",\n    value: function imageHasData(img) {\n      return !!img.exifdata;\n    }\n  }, {\n    key: \"base64ToArrayBuffer\",\n    value: function base64ToArrayBuffer(base64) {\n      base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\n      var binary = atob(base64);\n      var len = binary.length;\n      var buffer = new ArrayBuffer(len);\n      var view = new Uint8Array(buffer);\n\n      for (var i = 0; i < len; i++) {\n        view[i] = binary.charCodeAt(i);\n      }\n\n      return buffer;\n    }\n  }, {\n    key: \"objectURLToBlob\",\n    value: function objectURLToBlob(url, callback) {\n      var http = new XMLHttpRequest();\n      http.open('GET', url, true);\n      http.responseType = 'blob';\n\n      http.onload = function () {\n        if (http.status === 200 || http.status === 0) {\n          callback(http.response);\n        }\n      };\n\n      http.send();\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(img, callback) {\n      var _this = this;\n\n      var handleBinaryFile = function handleBinaryFile(binFile) {\n        var data = _this.findEXIFinJPEG(binFile);\n\n        var iptcdata = _this.findIPTCinJPEG(binFile);\n\n        img.exifdata = data || {};\n        img.iptcdata = iptcdata || {};\n\n        if (callback) {\n          callback.call(img);\n        }\n      };\n\n      if ('src' in img && img.src) {\n        if (/^data:/i.test(img.src)) {\n          // Data URI\n          var arrayBuffer = this.base64ToArrayBuffer(img.src);\n          handleBinaryFile(arrayBuffer);\n        } else {\n          if (/^blob:/i.test(img.src)) {\n            // Object URL\n            var fileReader = new FileReader();\n\n            fileReader.onload = function (e) {\n              handleBinaryFile(e.target.result);\n            };\n\n            this.objectURLToBlob(img.src, function (blob) {\n              fileReader.readAsArrayBuffer(blob);\n            });\n          } else {\n            var http = new XMLHttpRequest();\n\n            http.onload = function () {\n              if (http.status === 200 || http.status === 0) {\n                handleBinaryFile(http.response);\n              } else {\n                throw new Error('Could not load image');\n              }\n            };\n\n            http.open('GET', img.src, true);\n            http.responseType = 'arraybuffer';\n            http.send(null);\n          }\n        }\n      } else {\n        if (FileReader && (img instanceof Blob || img instanceof File)) {\n          var _fileReader = new FileReader();\n\n          _fileReader.onload = function (e) {\n            _this.log('Got file of length ' + e.target.result.byteLength);\n\n            handleBinaryFile(e.target.result);\n          };\n\n          _fileReader.readAsArrayBuffer(img);\n        }\n      }\n    }\n  }, {\n    key: \"findEXIFinJPEG\",\n    value: function findEXIFinJPEG(file) {\n      var dataView = new DataView(file);\n      this.log('Got file of length ' + file.byteLength);\n\n      if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n        this.log('Not a valid JPEG');\n        return false; // not a valid jpeg\n      }\n\n      var offset = 2;\n      var length = file.byteLength;\n      var marker;\n\n      while (offset < length) {\n        if (dataView.getUint8(offset) !== 0xff) {\n          this.log('Not a valid marker at offset ' + offset + ', found: ' + dataView.getUint8(offset));\n          return false; // not a valid marker, something is wrong\n        }\n\n        marker = dataView.getUint8(offset + 1);\n        this.log(marker); // we could implement handling for other markers here,\n        // but we're only looking for 0xFFE1 for EXIF data\n\n        if (marker === 225) {\n          this.log('Found 0xFFE1 marker');\n          return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\n          // offset += 2 + file.getShortAt(offset+2, true);\n        } else {\n          offset += 2 + dataView.getUint16(offset + 2);\n        }\n      }\n    }\n  }, {\n    key: \"findIPTCinJPEG\",\n    value: function findIPTCinJPEG(file) {\n      var dataView = new DataView(file);\n      this.log('Got file of length ' + file.byteLength);\n\n      if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n        this.log('Not a valid JPEG');\n        return false; // not a valid jpeg\n      }\n\n      var offset = 2;\n      var length = file.byteLength; // tslint:disable-next-line:variable-name\n\n      var isFieldSegmentStart = function isFieldSegmentStart(_dataView, _offset) {\n        return _dataView.getUint8(_offset) === 0x38 && _dataView.getUint8(_offset + 1) === 0x42 && _dataView.getUint8(_offset + 2) === 0x49 && _dataView.getUint8(_offset + 3) === 0x4d && _dataView.getUint8(_offset + 4) === 0x04 && _dataView.getUint8(_offset + 5) === 0x04;\n      };\n\n      while (offset < length) {\n        if (isFieldSegmentStart(dataView, offset)) {\n          // Get the length of the name header (which is padded to an even number of bytes)\n          var nameHeaderLength = dataView.getUint8(offset + 7);\n\n          if (nameHeaderLength % 2 !== 0) {\n            nameHeaderLength += 1;\n          } // Check for pre photoshop 6 format\n\n\n          if (nameHeaderLength === 0) {\n            // Always 4\n            nameHeaderLength = 4;\n          }\n\n          var startOffset = offset + 8 + nameHeaderLength;\n          var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n          return this.readIPTCData(file, startOffset, sectionLength);\n        } // Not the marker, continue searching\n\n\n        offset++;\n      }\n    }\n  }, {\n    key: \"readIPTCData\",\n    value: function readIPTCData(file, startOffset, sectionLength) {\n      var dataView = new DataView(file);\n      var data = {};\n      var fieldValue;\n      var fieldName;\n      var dataSize;\n      var segmentType;\n      var segmentSize;\n      var segmentStartPos = startOffset;\n\n      while (segmentStartPos < startOffset + sectionLength) {\n        if (dataView.getUint8(segmentStartPos) === 0x1c && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n          segmentType = dataView.getUint8(segmentStartPos + 2);\n\n          if (segmentType in this.IptcFieldMap) {\n            dataSize = dataView.getInt16(segmentStartPos + 3);\n            segmentSize = dataSize + 5;\n            fieldName = this.IptcFieldMap[segmentType];\n            fieldValue = this.getStringFromDB(dataView, segmentStartPos + 5, dataSize); // Check if we already stored a value with this name\n\n            if (data.hasOwnProperty(fieldName)) {\n              // Value already stored with this name, create multivalue field\n              if (data[fieldName] instanceof Array) {\n                data[fieldName].push(fieldValue);\n              } else {\n                data[fieldName] = [data[fieldName], fieldValue];\n              }\n            } else {\n              data[fieldName] = fieldValue;\n            }\n          }\n        }\n\n        segmentStartPos++;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"readTags\",\n    value: function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n      var entries = file.getUint16(dirStart, !bigEnd);\n      var tags = {};\n      var entryOffset;\n      var tag;\n\n      for (var i = 0; i < entries; i++) {\n        entryOffset = dirStart + i * 12 + 2;\n        tag = strings[file.getUint16(entryOffset, !bigEnd)];\n\n        if (!tag) {\n          this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\n        }\n\n        tags[tag] = this.readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n      }\n\n      return tags;\n    }\n  }, {\n    key: \"readTagValue\",\n    value: function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n      var type = file.getUint16(entryOffset + 2, !bigEnd);\n      var numValues = file.getUint32(entryOffset + 4, !bigEnd);\n      var valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\n      var offset;\n      var vals;\n      var val;\n      var n;\n      var numerator;\n      var denominator;\n\n      switch (type) {\n        case 1: // byte, 8-bit unsigned int\n\n        case 7:\n          // undefined, 8-bit byte, value depending on field\n          if (numValues === 1) {\n            return file.getUint8(entryOffset + 8, !bigEnd);\n          } else {\n            offset = numValues > 4 ? valueOffset : entryOffset + 8;\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint8(offset + n);\n            }\n\n            return vals;\n          }\n\n        case 2:\n          // ascii, 8-bit byte\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\n          return this.getStringFromDB(file, offset, numValues - 1);\n\n        case 3:\n          // short, 16 bit int\n          if (numValues === 1) {\n            return file.getUint16(entryOffset + 8, !bigEnd);\n          } else {\n            offset = numValues > 2 ? valueOffset : entryOffset + 8;\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 4:\n          // long, 32 bit int\n          if (numValues === 1) {\n            return file.getUint32(entryOffset + 8, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 5:\n          // rational = two long values, first is numerator, second is denominator\n          if (numValues === 1) {\n            numerator = file.getUint32(valueOffset, !bigEnd);\n            denominator = file.getUint32(valueOffset + 4, !bigEnd);\n            val = new Fraction(numerator / denominator);\n            val.numerator = numerator;\n            val.denominator = denominator;\n            return val;\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n              denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n              vals[n] = new Fraction(numerator / denominator);\n              vals[n].numerator = numerator;\n              vals[n].denominator = denominator;\n            }\n\n            return vals;\n          }\n\n        case 9:\n          // slong, 32 bit signed int\n          if (numValues === 1) {\n            return file.getInt32(entryOffset + 8, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 10:\n          // signed rational, two slongs, first is numerator, second is denominator\n          if (numValues === 1) {\n            return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"getStringFromDB\",\n    value: function getStringFromDB(buffer, start, length) {\n      var outstr = '';\n\n      for (var n = start; n < start + length; n++) {\n        outstr += String.fromCharCode(buffer.getUint8(n));\n      }\n\n      return outstr;\n    }\n  }, {\n    key: \"readEXIFData\",\n    value: function readEXIFData(file, start) {\n      if (this.getStringFromDB(file, start, 4) !== 'Exif') {\n        this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\n        return false;\n      }\n\n      var bigEnd;\n      var tags;\n      var tag;\n      var exifData;\n      var gpsData;\n      var tiffOffset = start + 6; // test for TIFF validity and endianness\n\n      if (file.getUint16(tiffOffset) === 0x4949) {\n        bigEnd = false;\n      } else {\n        if (file.getUint16(tiffOffset) === 0x4d4d) {\n          bigEnd = true;\n        } else {\n          this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\n          return false;\n        }\n      }\n\n      if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\n        this.log('Not valid TIFF data! (no 0x002A)');\n        return false;\n      }\n\n      var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n      if (firstIFDOffset < 0x00000008) {\n        this.log('Not valid TIFF data! (First offset less than 8)', file.getUint32(tiffOffset + 4, !bigEnd));\n        return false;\n      }\n\n      tags = this.readTags(file, tiffOffset, tiffOffset + firstIFDOffset, this.TiffTags, bigEnd);\n\n      if (tags.ExifIFDPointer) {\n        exifData = this.readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, this.Tags, bigEnd);\n\n        for (tag in exifData) {\n          if ({}.hasOwnProperty.call(exifData, tag)) {\n            switch (tag) {\n              case 'LightSource':\n              case 'Flash':\n              case 'MeteringMode':\n              case 'ExposureProgram':\n              case 'SensingMethod':\n              case 'SceneCaptureType':\n              case 'SceneType':\n              case 'CustomRendered':\n              case 'WhiteBalance':\n              case 'GainControl':\n              case 'Contrast':\n              case 'Saturation':\n              case 'Sharpness':\n              case 'SubjectDistanceRange':\n              case 'FileSource':\n                exifData[tag] = this.StringValues[tag][exifData[tag]];\n                break;\n\n              case 'ExifVersion':\n              case 'FlashpixVersion':\n                exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                break;\n\n              case 'ComponentsConfiguration':\n                var compopents = 'Components';\n                exifData[tag] = this.StringValues[compopents][exifData[tag][0]] + this.StringValues[compopents][exifData[tag][1]] + this.StringValues[compopents][exifData[tag][2]] + this.StringValues[compopents][exifData[tag][3]];\n                break;\n\n              default:\n                break;\n            }\n\n            tags[tag] = exifData[tag];\n          }\n        }\n      }\n\n      if (tags.GPSInfoIFDPointer) {\n        gpsData = this.readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, this.GPSTags, bigEnd);\n\n        for (tag in gpsData) {\n          if ({}.hasOwnProperty.call(gpsData, tag)) {\n            switch (tag) {\n              case 'GPSVersionID':\n                gpsData[tag] = gpsData[tag][0] + '.' + gpsData[tag][1] + '.' + gpsData[tag][2] + '.' + gpsData[tag][3];\n                break;\n\n              default:\n                break;\n            }\n\n            tags[tag] = gpsData[tag];\n          }\n        }\n      }\n\n      return tags;\n    } //   get rid of this silly issue\n\n  }, {\n    key: \"checkImageType\",\n    value: function checkImageType(img) {\n      return img instanceof Image || img instanceof HTMLImageElement;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(img, callback) {\n      if (this.checkImageType(img) && !img.complete) {\n        return false;\n      }\n\n      if (!this.imageHasData(img)) {\n        this.getImageData(img, callback);\n      } else {\n        if (callback) {\n          callback.call(img);\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getTag\",\n    value: function getTag(img, tag) {\n      if (!this.imageHasData(img)) {\n        return;\n      }\n\n      return img.exifdata[tag];\n    }\n  }, {\n    key: \"getAllTags\",\n    value: function getAllTags(img) {\n      if (!this.imageHasData(img)) {\n        return {};\n      }\n\n      var a;\n      var data = img.exifdata;\n      var tags = {};\n\n      for (a in data) {\n        if (data.hasOwnProperty(a)) {\n          tags[a] = data[a];\n        }\n      }\n\n      return tags;\n    }\n  }, {\n    key: \"pretty\",\n    value: function pretty(img) {\n      if (!this.imageHasData(img)) {\n        return '';\n      }\n\n      var a;\n      var data = img.exifdata;\n      var strPretty = '';\n\n      for (a in data) {\n        if (data.hasOwnProperty(a)) {\n          if (typeof data[a] === 'object') {\n            if (data[a] instanceof Number) {\n              strPretty += \"\".concat(a, \" : \").concat(data[a], \" [\").concat(data[a].numerator, \"/\").concat(data[a].denominator, \"]\\r\\n\");\n            } else {\n              strPretty += \"\".concat(a, \" : [\").concat(data[a].length, \" values]\\r\\n\");\n            }\n          } else {\n            strPretty += \"\".concat(a, \" : \").concat(data[a], \"\\r\\n\");\n          }\n        }\n      }\n\n      return strPretty;\n    }\n  }, {\n    key: \"readFromBinaryFile\",\n    value: function readFromBinaryFile(file) {\n      return this.findEXIFinJPEG(file);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (this.debug) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        console.log(args);\n      }\n    }\n  }]);\n\n  return Exif;\n}();\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: \"next\",\n    get: function get() {\n      return this.myNext;\n    },\n    set: function set(p) {\n      this.myNext = p;\n    }\n  }, {\n    key: \"prev\",\n    get: function get() {\n      return this.myPrev;\n    },\n    set: function set(p) {\n      this.myPrev = p;\n    }\n  }]);\n\n  return Point;\n}();\n\nvar PointPool = /*#__PURE__*/function () {\n  function PointPool() {\n    var initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    _classCallCheck(this, PointPool);\n\n    var prev = this.firstAvailable = new Point();\n\n    for (var i = 1; i < initialSize; i++) {\n      var p = new Point();\n      prev.next = p;\n      prev = p;\n    }\n  }\n\n  _createClass(PointPool, [{\n    key: \"instance\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"borrow\",\n    value: function borrow(x, y) {\n      if (this.firstAvailable == null) {\n        throw new Error('Pool exhausted');\n      }\n\n      this.borrowed++;\n      var p = this.firstAvailable;\n      this.firstAvailable = p.next;\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n  }, {\n    key: \"returnPoint\",\n    value: function returnPoint(p) {\n      this.borrowed--;\n      p.x = 0;\n      p.y = 0;\n      p.next = this.firstAvailable;\n      this.firstAvailable = p;\n    }\n  }]);\n\n  return PointPool;\n}();\n\nvar Bounds = /*#__PURE__*/function () {\n  function Bounds(x, y, width, height) {\n    _classCallCheck(this, Bounds);\n\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (width === void 0) {\n      width = 0;\n    }\n\n    if (height === void 0) {\n      height = 0;\n    }\n\n    this.left = x;\n    this.right = x + width;\n    this.top = y;\n    this.bottom = y + height;\n  }\n\n  _createClass(Bounds, [{\n    key: \"width\",\n    get: function get() {\n      return this.right - this.left;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.bottom - this.top;\n    }\n  }, {\n    key: \"getCentre\",\n    value: function getCentre() {\n      var w = this.width;\n      var h = this.height;\n      return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\n    }\n  }]);\n\n  return Bounds;\n}();\n\nvar Handle = /*#__PURE__*/function () {\n  function Handle(x, y, radius, settings) {\n    _classCallCheck(this, Handle);\n\n    this.cropperSettings = new CropperSettings();\n    this.over = false;\n    this.drag = false;\n    this._position = new Point(x, y);\n    this.offset = new Point(0, 0);\n    this.radius = radius;\n    this.cropperSettings = settings;\n  }\n\n  _createClass(Handle, [{\n    key: \"setDrag\",\n    value: function setDrag(value) {\n      this.drag = value;\n      this.setOver(value);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {// this should't be empty\n    }\n  }, {\n    key: \"setOver\",\n    value: function setOver(over) {\n      this.over = over;\n    }\n  }, {\n    key: \"touchInBounds\",\n    value: function touchInBounds(x, y) {\n      return x > this.position.x - this.radius + this.offset.x && x < this.position.x + this.radius + this.offset.x && y > this.position.y - this.radius + this.offset.y && y < this.position.y + this.radius + this.offset.y;\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(x, y) {\n      this._position.x = x;\n      this._position.y = y;\n    }\n  }]);\n\n  return Handle;\n}();\n\nvar CornerMarker = /*#__PURE__*/function (_Handle) {\n  _inherits(CornerMarker, _Handle);\n\n  var _super2 = _createSuper(CornerMarker);\n\n  function CornerMarker(x, y, radius, cropperSettings) {\n    _classCallCheck(this, CornerMarker);\n\n    return _super2.call(this, x, y, radius, cropperSettings);\n  }\n\n  _createClass(CornerMarker, [{\n    key: \"drawCornerBorder\",\n    value: function drawCornerBorder(ctx) {\n      var sideLength = 10;\n\n      if (this.over || this.drag) {\n        sideLength = 12;\n      }\n\n      var hDirection = this.cropperSettings.markerSizeMultiplier;\n      var vDirection = this.cropperSettings.markerSizeMultiplier;\n\n      if (this.horizontalNeighbour.position.x < this.position.x) {\n        hDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.verticalNeighbour.position.y < this.position.y) {\n        vDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      ctx.beginPath();\n\n      if (this.cropperSettings.cropperDrawSettings.lineDash) {\n        ctx.setLineDash([1, 3]);\n      }\n\n      ctx.lineJoin = 'miter';\n      ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.closePath();\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor || 'rgba(255,255,255,.7)';\n      ctx.stroke();\n    }\n  }, {\n    key: \"drawCornerFill\",\n    value: function drawCornerFill(ctx) {\n      var sideLength = 10;\n\n      if (this.over || this.drag) {\n        sideLength = 12;\n      }\n\n      var hDirection = this.cropperSettings.markerSizeMultiplier;\n      var vDirection = this.cropperSettings.markerSizeMultiplier;\n\n      if (this.horizontalNeighbour.position.x < this.position.x) {\n        hDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.verticalNeighbour.position.y < this.position.y) {\n        vDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.cropperSettings.rounded) {\n        var width = this.position.x - this.horizontalNeighbour.position.x;\n        var height = this.position.y - this.verticalNeighbour.position.y;\n        var offX = Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\n        var offY = Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\n        this.offset.x = hDirection > 0 ? offX : -offX;\n        this.offset.y = vDirection > 0 ? offY : -offY;\n      } else {\n        this.offset.x = 0;\n        this.offset.y = 0;\n      }\n\n      ctx.beginPath();\n\n      if (this.cropperSettings.cropperDrawSettings.lineDash) {\n        ctx.setLineDash([1, 3]);\n      }\n\n      ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.closePath();\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.fillColor || 'rgba(255,255,255,.7)';\n      ctx.fill();\n    }\n  }, {\n    key: \"moveX\",\n    value: function moveX(x) {\n      this.setPosition(x, this.position.y);\n    }\n  }, {\n    key: \"moveY\",\n    value: function moveY(y) {\n      this.setPosition(this.position.x, y);\n    }\n  }, {\n    key: \"move\",\n    value: function move(x, y) {\n      this.setPosition(x, y);\n      this.verticalNeighbour.moveX(x);\n      this.horizontalNeighbour.moveY(y);\n    }\n  }, {\n    key: \"addHorizontalNeighbour\",\n    value: function addHorizontalNeighbour(neighbour) {\n      this.horizontalNeighbour = neighbour;\n    }\n  }, {\n    key: \"addVerticalNeighbour\",\n    value: function addVerticalNeighbour(neighbour) {\n      this.verticalNeighbour = neighbour;\n    }\n  }, {\n    key: \"getHorizontalNeighbour\",\n    value: function getHorizontalNeighbour() {\n      return this.horizontalNeighbour;\n    }\n  }, {\n    key: \"getVerticalNeighbour\",\n    value: function getVerticalNeighbour() {\n      return this.verticalNeighbour;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      this.drawCornerFill(ctx);\n      this.drawCornerBorder(ctx);\n    }\n  }]);\n\n  return CornerMarker;\n}(Handle);\n\nvar CropTouch = function CropTouch() {\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  _classCallCheck(this, CropTouch);\n\n  this.id = id;\n  this.x = x;\n  this.y = y;\n};\n\nvar DragMarker = /*#__PURE__*/function (_Handle2) {\n  _inherits(DragMarker, _Handle2);\n\n  var _super3 = _createSuper(DragMarker);\n\n  function DragMarker(x, y, radius, cropperSettings) {\n    var _this2;\n\n    _classCallCheck(this, DragMarker);\n\n    _this2 = _super3.call(this, x, y, radius, cropperSettings);\n    _this2.iconPoints = [];\n    _this2.scaledIconPoints = [];\n\n    _this2.getDragIconPoints(_this2.iconPoints, 1);\n\n    _this2.getDragIconPoints(_this2.scaledIconPoints, 1.2);\n\n    return _this2;\n  }\n\n  _createClass(DragMarker, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (this.over || this.drag) {\n        this.drawIcon(ctx, this.scaledIconPoints);\n      } else {\n        this.drawIcon(ctx, this.iconPoints);\n      }\n    }\n  }, {\n    key: \"getDragIconPoints\",\n    value: function getDragIconPoints(arr, scale) {\n      var maxLength = 17 * scale;\n      var arrowWidth = 14 * scale;\n      var arrowLength = 8 * scale;\n      var connectorThroat = 4 * scale;\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(0, maxLength));\n      arr.push(new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(maxLength, 0));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(0, -maxLength));\n      arr.push(new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength, 0));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2));\n    }\n  }, {\n    key: \"drawIcon\",\n    value: function drawIcon(ctx, points) {\n      if (this.cropperSettings.showCenterMarker) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\n\n        var _iterator = _createForOfIteratorHelper(points),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var p = _step.value;\n            ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        ctx.closePath();\n        ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\n        ctx.fill();\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\n        ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"recalculatePosition\",\n    value: function recalculatePosition(bounds) {\n      var c = bounds.getCentre();\n      this.setPosition(c.x, c.y);\n      new PointPool().instance.returnPoint(c);\n    }\n  }]);\n\n  return DragMarker;\n}(Handle);\n\nvar ImageCropperModel = function ImageCropperModel() {\n  _classCallCheck(this, ImageCropperModel);\n};\n\nvar ImageCropperDataShare = /*#__PURE__*/function () {\n  function ImageCropperDataShare() {\n    _classCallCheck(this, ImageCropperDataShare);\n\n    this.share = {};\n  }\n\n  _createClass(ImageCropperDataShare, [{\n    key: \"setPressed\",\n    value: function setPressed(canvas) {\n      this.pressed = canvas;\n    }\n  }, {\n    key: \"setReleased\",\n    value: function setReleased(canvas) {\n      if (canvas === this.pressed) {//  this.pressed = undefined;\n      }\n    }\n  }, {\n    key: \"setOver\",\n    value: function setOver(canvas) {\n      this.over = canvas;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(canvas, style) {\n      if (this.pressed !== undefined) {\n        if (this.pressed === canvas) {// TODO: check this\n          // angular.element(document.documentElement).css('cursor', style);\n        }\n      } else {\n        if (canvas === this.over) {// TODO: check this\n          // angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n    }\n  }]);\n\n  return ImageCropperDataShare;\n}();\n\nvar ImageCropper = /*#__PURE__*/function (_ImageCropperModel) {\n  _inherits(ImageCropper, _ImageCropperModel);\n\n  var _super4 = _createSuper(ImageCropper);\n\n  function ImageCropper(cropperSettings) {\n    var _this3;\n\n    _classCallCheck(this, ImageCropper);\n\n    _this3 = _super4.call(this);\n    _this3.imageCropperDataShare = new ImageCropperDataShare();\n    var x = 0;\n    var y = 0;\n    var width = cropperSettings.width;\n    var height = cropperSettings.height;\n    var keepAspect = cropperSettings.keepAspect;\n    var touchRadius = cropperSettings.touchRadius;\n    var centerTouchRadius = cropperSettings.centerTouchRadius;\n    var minWidth = cropperSettings.minWidth;\n    var minHeight = cropperSettings.minHeight;\n    var croppedWidth = cropperSettings.croppedWidth;\n    var croppedHeight = cropperSettings.croppedHeight;\n    _this3.cropperSettings = cropperSettings;\n    _this3.crop = _assertThisInitialized(_this3);\n    _this3.x = x;\n    _this3.y = y;\n    _this3.canvasHeight = cropperSettings.canvasHeight;\n    _this3.canvasWidth = cropperSettings.canvasWidth;\n    _this3.width = width;\n\n    if (width === void 0) {\n      _this3.width = 100;\n    }\n\n    _this3.height = height;\n\n    if (height === void 0) {\n      _this3.height = 50;\n    }\n\n    _this3.keepAspect = keepAspect;\n\n    if (keepAspect === void 0) {\n      _this3.keepAspect = true;\n    }\n\n    _this3.touchRadius = touchRadius;\n\n    if (touchRadius === void 0) {\n      _this3.touchRadius = 20;\n    }\n\n    _this3.minWidth = minWidth;\n    _this3.minHeight = minHeight;\n    _this3.aspectRatio = 0;\n    _this3.currentDragTouches = [];\n    _this3.isMouseDown = false;\n    _this3.ratioW = 1;\n    _this3.ratioH = 1;\n    _this3.fileType = cropperSettings.fileType;\n    _this3.imageSet = false;\n    _this3.pointPool = new PointPool(200);\n    _this3.tl = new CornerMarker(x, y, touchRadius, _this3.cropperSettings);\n    _this3.tr = new CornerMarker(x + width, y, touchRadius, _this3.cropperSettings);\n    _this3.bl = new CornerMarker(x, y + height, touchRadius, _this3.cropperSettings);\n    _this3.br = new CornerMarker(x + width, y + height, touchRadius, _this3.cropperSettings);\n\n    _this3.tl.addHorizontalNeighbour(_this3.tr);\n\n    _this3.tl.addVerticalNeighbour(_this3.bl);\n\n    _this3.tr.addHorizontalNeighbour(_this3.tl);\n\n    _this3.tr.addVerticalNeighbour(_this3.br);\n\n    _this3.bl.addHorizontalNeighbour(_this3.br);\n\n    _this3.bl.addVerticalNeighbour(_this3.tl);\n\n    _this3.br.addHorizontalNeighbour(_this3.bl);\n\n    _this3.br.addVerticalNeighbour(_this3.tr);\n\n    _this3.markers = [_this3.tl, _this3.tr, _this3.bl, _this3.br];\n    _this3.center = new DragMarker(x + width / 2, y + height / 2, centerTouchRadius, _this3.cropperSettings);\n    _this3.aspectRatio = height / width;\n    _this3.croppedImage = new Image();\n    _this3.currentlyInteracting = false;\n    _this3.cropWidth = croppedWidth;\n    _this3.cropHeight = croppedHeight;\n    return _this3;\n  }\n\n  _createClass(ImageCropper, [{\n    key: \"sign\",\n    value: function sign(x) {\n      if (+x === x) {\n        return x === 0 ? x : x > 0 ? 1 : -1;\n      }\n\n      return NaN;\n    }\n  }, {\n    key: \"getMousePos\",\n    value: function getMousePos(canvas, evt) {\n      var rect = canvas.getBoundingClientRect();\n      return new PointPool().instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\n    }\n  }, {\n    key: \"getTouchPos\",\n    value: function getTouchPos(canvas, touch) {\n      var rect = canvas.getBoundingClientRect();\n      return new PointPool().instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\n    }\n  }, {\n    key: \"detectVerticalSquash\",\n    value: function detectVerticalSquash(img) {\n      var ih = img.height;\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = ih;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      var imageData = ctx.getImageData(0, 0, 1, ih);\n\n      if (imageData) {\n        var data = imageData.data; // search image edge pixel position in case it is squashed vertically.\n\n        var sy = 0;\n        var ey = ih;\n        var py = ih;\n\n        while (py > sy) {\n          var alpha = data[(py - 1) * 4 + 3];\n\n          if (alpha === 0) {\n            ey = py;\n          } else {\n            sy = py;\n          } // tslint:disable-next-line:no-bitwise\n\n\n          py = ey + sy >> 1;\n        }\n\n        var ratio = py / ih;\n        return ratio === 0 ? 1 : ratio;\n      } else {\n        return 1;\n      }\n    }\n  }, {\n    key: \"getDataUriMimeType\",\n    value: function getDataUriMimeType(dataUri) {\n      // Get a substring because the regex does not perform well on very large strings.\n      // Cater for optional charset. Length 50 shoould be enough.\n      var dataUriSubstring = dataUri.substring(0, 50);\n      var mimeType = 'image/png'; // data-uri scheme\n      // data:[<media type>][;charset=<character set>][;base64],<data>\n\n      var regEx = RegExp(/^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi);\n      var matches = regEx.exec(dataUriSubstring);\n\n      if (matches && matches[2]) {\n        mimeType = matches[2];\n\n        if (mimeType === 'image/jpg') {\n          mimeType = 'image/jpeg';\n        }\n      }\n\n      return mimeType;\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare(canvas) {\n      this.buffer = document.createElement('canvas');\n      this.cropCanvas = document.createElement('canvas'); // todo get more reliable parent width value.\n\n      var responsiveWidth = canvas.parentElement ? canvas.parentElement.clientWidth : 0;\n\n      if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\n        this.cropCanvas.width = responsiveWidth;\n        this.buffer.width = responsiveWidth;\n        canvas.width = responsiveWidth;\n      } else {\n        this.cropCanvas.width = this.cropWidth;\n        this.buffer.width = canvas.width;\n      }\n\n      this.cropCanvas.height = this.cropHeight;\n      this.buffer.height = canvas.height;\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext('2d');\n      this.draw(this.ctx);\n    }\n  }, {\n    key: \"updateSettings\",\n    value: function updateSettings(cropperSettings) {\n      this.cropperSettings = cropperSettings;\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(width, height) {\n      var setImage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\n      this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\n\n      if (setImage) {\n        this.setImage(this.srcImage);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setImage(undefined);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var bounds = this.getBounds();\n\n      if (this.srcImage) {\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        var w = this.canvasWidth;\n        var h = this.canvasHeight;\n\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n\n        if (canvasAspect < sourceAspect) {\n          this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\n        } else {\n          this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\n        }\n\n        this.buffer.getContext('2d').drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\n        ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\n        ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\n\n        if (!this.cropperSettings.rounded) {\n          ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n          ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.width, 1), Math.max(bounds.height, 1), bounds.left, bounds.top, bounds.width, bounds.height);\n          ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\n        } else {\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          ctx.save();\n          ctx.beginPath();\n          ctx.arc(bounds.left + bounds.width / 2, bounds.top + bounds.height / 2, bounds.width / 2, 0, 2 * Math.PI);\n          ctx.stroke();\n          ctx.clip();\n\n          if (canvasAspect < sourceAspect) {\n            this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\n          } else {\n            this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\n          }\n\n          ctx.restore();\n        }\n\n        var marker; // tslint:disable-next-line:prefer-for-of\n\n        for (var i = 0; i < this.markers.length; i++) {\n          marker = this.markers[i];\n          marker.draw(ctx);\n        }\n\n        this.center.draw(ctx);\n      } else {\n        ctx.fillStyle = 'rgba(192,192,192,1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n    }\n  }, {\n    key: \"dragCenter\",\n    value: function dragCenter(x, y, marker) {\n      var bounds = this.getBounds();\n      var left = x - bounds.width / 2;\n      var right = x + bounds.width / 2;\n      var top = y - bounds.height / 2;\n      var bottom = y + bounds.height / 2;\n\n      if (right >= this.maxXClamp) {\n        x = this.maxXClamp - bounds.width / 2;\n      }\n\n      if (left <= this.minXClamp) {\n        x = bounds.width / 2 + this.minXClamp;\n      }\n\n      if (top < this.minYClamp) {\n        y = bounds.height / 2 + this.minYClamp;\n      }\n\n      if (bottom >= this.maxYClamp) {\n        y = this.maxYClamp - bounds.height / 2;\n      }\n\n      this.tl.moveX(x - bounds.width / 2);\n      this.tl.moveY(y - bounds.height / 2);\n      this.tr.moveX(x + bounds.width / 2);\n      this.tr.moveY(y - bounds.height / 2);\n      this.bl.moveX(x - bounds.width / 2);\n      this.bl.moveY(y + bounds.height / 2);\n      this.br.moveX(x + bounds.width / 2);\n      this.br.moveY(y + bounds.height / 2);\n      marker.setPosition(x, y);\n    }\n  }, {\n    key: \"enforceMinSize\",\n    value: function enforceMinSize(x, y, marker) {\n      var xLength = x - marker.getHorizontalNeighbour().position.x;\n      var yLength = y - marker.getVerticalNeighbour().position.y;\n      var xOver = this.minWidth - Math.abs(xLength);\n      var yOver = this.minHeight - Math.abs(yLength);\n\n      if (xLength === 0 || yLength === 0) {\n        x = marker.position.x;\n        y = marker.position.y;\n        return new PointPool().instance.borrow(x, y);\n      }\n\n      if (this.keepAspect) {\n        if (xOver > 0 && yOver / this.aspectRatio > 0) {\n          if (xOver > yOver / this.aspectRatio) {\n            if (xLength < 0) {\n              x -= xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yLength < 0) {\n              y -= yOver;\n\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        } else {\n          if (xOver > 0) {\n            if (xLength < 0) {\n              x -= xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yOver > 0) {\n              if (yLength < 0) {\n                y -= yOver;\n\n                if (xLength < 0) {\n                  x -= yOver / this.aspectRatio;\n                } else {\n                  x += yOver / this.aspectRatio;\n                }\n              } else {\n                y += yOver;\n\n                if (xLength < 0) {\n                  x -= yOver / this.aspectRatio;\n                } else {\n                  x += yOver / this.aspectRatio;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (xOver > 0) {\n          if (xLength < 0) {\n            x -= xOver;\n          } else {\n            x += xOver;\n          }\n        }\n\n        if (yOver > 0) {\n          if (yLength < 0) {\n            y -= yOver;\n          } else {\n            y += yOver;\n          }\n        }\n      }\n\n      if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\n        x = marker.position.x;\n        y = marker.position.y;\n      }\n\n      return new PointPool().instance.borrow(x, y);\n    }\n  }, {\n    key: \"dragCorner\",\n    value: function dragCorner(x, y, marker) {\n      var iX = 0;\n      var iY = 0;\n      var ax = 0;\n      var ay = 0;\n      var newHeight = 0;\n      var newWidth = 0;\n      var newY = 0;\n      var newX = 0;\n      var anchorMarker;\n      var fold = 0;\n\n      if (this.keepAspect) {\n        anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\n        ax = anchorMarker.position.x;\n        ay = anchorMarker.position.y;\n\n        if (x <= anchorMarker.position.x) {\n          if (y <= anchorMarker.position.y) {\n            iX = ax - 100 / this.aspectRatio;\n            iY = ay - 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.position.y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.position.y - newHeight;\n              newX = anchorMarker.position.x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              new PointPool().instance.returnPoint(min);\n            } else {\n              if (fold < 0) {\n                newWidth = Math.abs(anchorMarker.position.x - x);\n                newHeight = newWidth * this.aspectRatio;\n                newY = anchorMarker.position.y - newHeight;\n                newX = anchorMarker.position.x - newWidth;\n\n                var _min = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min.x, _min.y);\n                new PointPool().instance.returnPoint(_min);\n              }\n            }\n          } else {\n            iX = ax - 100 / this.aspectRatio;\n            iY = ay + 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.position.x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.position.y + newHeight;\n              newX = anchorMarker.position.x - newWidth;\n\n              var _min2 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min2.x, _min2.y);\n              new PointPool().instance.returnPoint(_min2);\n            } else {\n              if (fold < 0) {\n                newHeight = Math.abs(anchorMarker.position.y - y);\n                newWidth = newHeight / this.aspectRatio;\n                newY = anchorMarker.position.y + newHeight;\n                newX = anchorMarker.position.x - newWidth;\n\n                var _min3 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min3.x, _min3.y);\n                new PointPool().instance.returnPoint(_min3);\n              }\n            }\n          }\n        } else {\n          if (y <= anchorMarker.position.y) {\n            iX = ax + 100 / this.aspectRatio;\n            iY = ay - 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.position.y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.position.y - newHeight;\n              newX = anchorMarker.position.x + newWidth;\n\n              var _min4 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min4.x, _min4.y);\n              new PointPool().instance.returnPoint(_min4);\n            } else {\n              if (fold > 0) {\n                newWidth = Math.abs(anchorMarker.position.x - x);\n                newHeight = newWidth * this.aspectRatio;\n                newY = anchorMarker.position.y - newHeight;\n                newX = anchorMarker.position.x + newWidth;\n\n                var _min5 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min5.x, _min5.y);\n                new PointPool().instance.returnPoint(_min5);\n              }\n            }\n          } else {\n            iX = ax + 100 / this.aspectRatio;\n            iY = ay + 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.position.x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.position.y + newHeight;\n              newX = anchorMarker.position.x + newWidth;\n\n              var _min6 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min6.x, _min6.y);\n              new PointPool().instance.returnPoint(_min6);\n            } else {\n              if (fold > 0) {\n                newHeight = Math.abs(anchorMarker.position.y - y);\n                newWidth = newHeight / this.aspectRatio;\n                newY = anchorMarker.position.y + newHeight;\n                newX = anchorMarker.position.x + newWidth;\n\n                var _min7 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min7.x, _min7.y);\n                new PointPool().instance.returnPoint(_min7);\n              }\n            }\n          }\n        }\n      } else {\n        var _min8 = this.enforceMinSize(x, y, marker);\n\n        marker.move(_min8.x, _min8.y);\n        new PointPool().instance.returnPoint(_min8);\n      }\n\n      this.center.recalculatePosition(this.getBounds());\n    }\n  }, {\n    key: \"getSide\",\n    value: function getSide(a, b, c) {\n      var n = this.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)); // TODO move the return of the pools to outside of this function\n\n      new PointPool().instance.returnPoint(a);\n      new PointPool().instance.returnPoint(c);\n      return n;\n    }\n  }, {\n    key: \"handleRelease\",\n    value: function handleRelease(newCropTouch) {\n      if (newCropTouch == null) {\n        return;\n      }\n\n      var index = 0;\n\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id === this.currentDragTouches[k].id) {\n          this.currentDragTouches[k].dragHandle.setDrag(false);\n          index = k;\n        }\n      }\n\n      this.currentDragTouches.splice(index, 1);\n      this.draw(this.ctx);\n    }\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(newCropTouch) {\n      var matched = false; // tslint:disable-next-line:prefer-for-of\n\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id === this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null) {\n          var dragTouch = this.currentDragTouches[k];\n          var clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x, newCropTouch.y - dragTouch.dragHandle.offset.y);\n          newCropTouch.x = clampedPositions.x;\n          newCropTouch.y = clampedPositions.y;\n          new PointPool().instance.returnPoint(clampedPositions);\n\n          if (dragTouch.dragHandle instanceof CornerMarker) {\n            this.dragCorner(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          } else {\n            this.dragCenter(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          }\n\n          this.currentlyInteracting = true;\n          matched = true;\n          this.imageCropperDataShare.setPressed(this.canvas);\n          break;\n        }\n      }\n\n      if (!matched) {\n        var _iterator2 = _createForOfIteratorHelper(this.markers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var marker = _step2.value;\n\n            if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n              newCropTouch.dragHandle = marker;\n              this.currentDragTouches.push(newCropTouch);\n              marker.setDrag(true);\n              newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n              newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n              this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (newCropTouch.dragHandle === null || typeof newCropTouch.dragHandle === 'undefined') {\n          if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = this.center;\n            this.currentDragTouches.push(newCropTouch);\n            newCropTouch.dragHandle.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n            this.dragCenter(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateClampBounds\",\n    value: function updateClampBounds() {\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n\n      if (canvasAspect > sourceAspect) {\n        w = this.canvas.width;\n        h = this.canvas.width * sourceAspect;\n      } else {\n        h = this.canvas.height;\n        w = this.canvas.height / sourceAspect;\n      }\n\n      this.minXClamp = this.canvas.width / 2 - w / 2;\n      this.minYClamp = this.canvas.height / 2 - h / 2;\n      this.maxXClamp = this.canvas.width / 2 + w / 2;\n      this.maxYClamp = this.canvas.height / 2 + h / 2;\n    }\n  }, {\n    key: \"getCropBounds\",\n    value: function getCropBounds() {\n      var bounds = this.getBounds();\n      bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\n      bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\n      bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\n      bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\n      return bounds;\n    }\n  }, {\n    key: \"clampPosition\",\n    value: function clampPosition(x, y) {\n      if (x < this.minXClamp) {\n        x = this.minXClamp;\n      }\n\n      if (x > this.maxXClamp) {\n        x = this.maxXClamp;\n      }\n\n      if (y < this.minYClamp) {\n        y = this.minYClamp;\n      }\n\n      if (y > this.maxYClamp) {\n        y = this.maxYClamp;\n      }\n\n      return new PointPool().instance.borrow(x, y);\n    }\n  }, {\n    key: \"isImageSet\",\n    value: function isImageSet() {\n      return this.imageSet;\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(img) {\n      this.srcImage = img;\n\n      if (!img) {\n        this.imageSet = false;\n        this.draw(this.ctx);\n      } else {\n        this.imageSet = true;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        var bufferContext = this.buffer.getContext('2d');\n        bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\n\n        if (!this.cropperSettings.fileType) {\n          this.fileType = this.getDataUriMimeType(img.src);\n        }\n\n        if (this.cropperSettings.minWithRelativeToResolution) {\n          this.minWidth = this.canvas.width * this.cropperSettings.minWidth / this.srcImage.width;\n          this.minHeight = this.canvas.height * this.cropperSettings.minHeight / this.srcImage.height;\n        }\n\n        this.updateClampBounds();\n        this.canvasWidth = this.canvas.width;\n        this.canvasHeight = this.canvas.height;\n        var cropPosition = this.getCropPositionFromMarkers();\n        this.setCropPosition(cropPosition);\n      }\n    }\n  }, {\n    key: \"updateCropPosition\",\n    value: function updateCropPosition(cropBounds) {\n      var cropPosition = this.getCropPositionFromBounds(cropBounds);\n      this.setCropPosition(cropPosition);\n    }\n  }, {\n    key: \"setCropPosition\",\n    value: function setCropPosition(cropPosition) {\n      this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\n      this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\n      this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\n      this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\n      this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\n\n      var _iterator3 = _createForOfIteratorHelper(cropPosition),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var position = _step3.value;\n          new PointPool().instance.returnPoint(position);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\n      this.draw(this.ctx);\n      this.croppedImage = this.getCroppedImageHelper(false, this.cropWidth, this.cropHeight);\n    }\n  }, {\n    key: \"getCropPositionFromMarkers\",\n    value: function getCropPositionFromMarkers() {\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      var tlPos;\n      var trPos;\n      var blPos;\n      var brPos;\n      var center;\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var cropBounds = this.getBounds();\n      var cropAspect = cropBounds.height / cropBounds.width;\n      var cX = this.canvas.width / 2;\n      var cY = this.canvas.height / 2;\n\n      if (cropAspect > sourceAspect) {\n        var imageH = Math.min(w * sourceAspect, h);\n        var cropW = imageH / cropAspect;\n        tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\n        trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\n        blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\n        brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\n      } else {\n        var imageW = Math.min(h / sourceAspect, w);\n        var cropH = imageW * cropAspect;\n        tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      }\n\n      center = new PointPool().instance.borrow(cX, cY);\n      var positions = [tlPos, trPos, blPos, brPos, center];\n      return positions;\n    }\n  }, {\n    key: \"getCropPositionFromBounds\",\n    value: function getCropPositionFromBounds(cropPosition) {\n      var marginTop = 0;\n      var marginLeft = 0;\n      var canvasAspect = this.canvasHeight / this.canvasWidth;\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n\n      if (canvasAspect > sourceAspect) {\n        marginTop = this.buffer.height / 2 - this.canvasWidth * sourceAspect / 2;\n      } else {\n        marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\n      }\n\n      var ratioW = (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\n      var ratioH = (this.canvasHeight - marginTop * 2) / this.srcImage.height;\n      var actualH = cropPosition.height * ratioH;\n      var actualW = cropPosition.width * ratioW;\n      var actualX = cropPosition.left * ratioW + marginLeft;\n      var actualY = cropPosition.top * ratioH + marginTop;\n\n      if (this.keepAspect) {\n        var scaledW = actualH / this.aspectRatio;\n        var scaledH = actualW * this.aspectRatio;\n\n        if (this.getCropBounds().height === cropPosition.height) {\n          // only width changed\n          actualH = scaledH;\n        } else if (this.getCropBounds().width === cropPosition.width) {\n          // only height changed\n          actualW = scaledW;\n        } else {\n          // height and width changed\n          if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\n            actualW = scaledW;\n          } else {\n            actualH = scaledH;\n          }\n        }\n      }\n\n      var tlPos = new PointPool().instance.borrow(actualX, actualY + actualH);\n      var trPos = new PointPool().instance.borrow(actualX + actualW, actualY + actualH);\n      var blPos = new PointPool().instance.borrow(actualX, actualY);\n      var brPos = new PointPool().instance.borrow(actualX + actualW, actualY);\n      var center = new PointPool().instance.borrow(actualX + actualW / 2, actualY + actualH / 2);\n      var positions = [tlPos, trPos, blPos, brPos, center];\n      return positions;\n    }\n  }, {\n    key: \"getCroppedImageHelper\",\n    value: function getCroppedImageHelper(preserveSize, fillWidth, fillHeight) {\n      if (this.cropperSettings.cropOnResize) {\n        return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\n      }\n\n      return this.croppedImage ? this.croppedImage : document.createElement('img');\n    } // todo: Unused parameters?\n\n  }, {\n    key: \"getCroppedImage\",\n    value: function getCroppedImage(preserveSize, fillWidth, fillHeight) {\n      var bounds = this.getBounds();\n\n      if (!this.srcImage) {\n        return document.createElement('img');\n      } else {\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvas.height / this.canvas.width;\n        var w = this.canvas.width;\n        var h = this.canvas.height;\n\n        if (canvasAspect > sourceAspect) {\n          w = this.canvas.width;\n          h = this.canvas.width * sourceAspect;\n        } else {\n          if (canvasAspect < sourceAspect) {\n            h = this.canvas.height;\n            w = this.canvas.height / sourceAspect;\n          } else {\n            h = this.canvas.height;\n            w = this.canvas.width;\n          }\n        }\n\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        var offsetH = (this.buffer.height - h) / 2 / this.ratioH;\n        var offsetW = (this.buffer.width - w) / 2 / this.ratioW;\n        var ctx = this.cropCanvas.getContext('2d');\n\n        if (this.cropperSettings.preserveSize || preserveSize) {\n          var width = Math.round(bounds.right / this.ratioW - bounds.left / this.ratioW);\n          var height = Math.round(bounds.bottom / this.ratioH - bounds.top / this.ratioH);\n          this.cropCanvas.width = width;\n          this.cropCanvas.height = height;\n          this.cropperSettings.croppedWidth = this.cropCanvas.width;\n          this.cropperSettings.croppedHeight = this.cropCanvas.height;\n        } else {\n          this.cropCanvas.width = this.cropWidth;\n          this.cropCanvas.height = this.cropHeight;\n        }\n\n        ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\n        this.drawImageIOSFix(ctx, this.srcImage, Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0), Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0), Math.max(Math.round(bounds.width / this.ratioW), 1), Math.max(Math.round(bounds.height / this.ratioH), 1), 0, 0, this.cropCanvas.width, this.cropCanvas.height);\n\n        if (this.cropperSettings.resampleFn) {\n          this.cropperSettings.resampleFn(this.cropCanvas);\n        }\n\n        this.croppedImage.width = this.cropCanvas.width;\n        this.croppedImage.height = this.cropCanvas.height;\n        this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType, this.cropperSettings.compressRatio);\n        return this.croppedImage;\n      }\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = -Number.MAX_VALUE;\n      var maxY = -Number.MAX_VALUE;\n\n      var _iterator4 = _createForOfIteratorHelper(this.markers),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var marker = _step4.value;\n\n          if (marker.position.x < minX) {\n            minX = marker.position.x;\n          }\n\n          if (marker.position.x > maxX) {\n            maxX = marker.position.x;\n          }\n\n          if (marker.position.y < minY) {\n            minY = marker.position.y;\n          }\n\n          if (marker.position.y > maxY) {\n            maxY = marker.position.y;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var bounds = new Bounds();\n      bounds.left = minX;\n      bounds.right = maxX;\n      bounds.top = minY;\n      bounds.bottom = maxY;\n      return bounds;\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(bounds) {\n      // const topLeft: CornerMarker;\n      // const topRight: CornerMarker;\n      // const bottomLeft: CornerMarker;\n      // const bottomRight: CornerMarker;\n      var currentBounds = this.getBounds();\n\n      var _iterator5 = _createForOfIteratorHelper(this.markers),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var marker = _step5.value;\n\n          if (marker.position.x === currentBounds.left) {\n            if (marker.position.y === currentBounds.top) {\n              marker.setPosition(bounds.left, bounds.top);\n            } else {\n              marker.setPosition(bounds.left, bounds.bottom);\n            }\n          } else {\n            if (marker.position.y === currentBounds.top) {\n              marker.setPosition(bounds.right, bounds.top);\n            } else {\n              marker.setPosition(bounds.right, bounds.bottom);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.center.recalculatePosition(bounds);\n      this.center.draw(this.ctx);\n      this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      if (this.crop.isImageSet()) {\n        if (event.touches.length === 1) {\n          if (this.isMouseDown) {\n            event.preventDefault(); // tslint:disable-next-line:prefer-for-of\n\n            for (var i = 0; i < event.touches.length; i++) {\n              var touch = event.touches[i];\n              var touchPosition = this.getTouchPos(this.canvas, touch);\n              var cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\n              new PointPool().instance.returnPoint(touchPosition);\n              this.move(cropTouch);\n            }\n          }\n        } else {\n          if (event.touches.length === 2) {\n            event.preventDefault();\n            var distance = (event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX) + (event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY);\n\n            if (this.previousDistance && this.previousDistance !== distance) {\n              var bounds = this.getBounds();\n\n              if (distance < this.previousDistance) {\n                bounds.top += 1;\n                bounds.left += 1;\n                bounds.right -= 1;\n                bounds.bottom -= 1;\n              }\n\n              if (distance > this.previousDistance) {\n                if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // none\n                  bounds.top -= 1;\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                  bounds.bottom += 1;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // left\n                  bounds.top -= 1;\n                  bounds.right += 2;\n                  bounds.bottom += 1;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // right\n                  bounds.top -= 1;\n                  bounds.left -= 2;\n                  bounds.bottom += 1;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // top\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                  bounds.bottom += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // bottom\n                  bounds.top -= 2;\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // top left\n                  bounds.right += 2;\n                  bounds.bottom += 2;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // top right\n                  bounds.left -= 2;\n                  bounds.bottom += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // bottom left\n                  bounds.top -= 2;\n                  bounds.right += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // bottom right\n                  bounds.top -= 2;\n                  bounds.left -= 2;\n                }\n              }\n\n              if (bounds.top < this.minYClamp) {\n                bounds.top = this.minYClamp;\n              }\n\n              if (bounds.bottom > this.maxYClamp) {\n                bounds.bottom = this.maxYClamp;\n              }\n\n              if (bounds.left < this.minXClamp) {\n                bounds.left = this.minXClamp;\n              }\n\n              if (bounds.right > this.maxXClamp) {\n                bounds.right = this.maxXClamp;\n              }\n\n              this.setBounds(bounds);\n            }\n\n            this.previousDistance = distance;\n          }\n        }\n\n        this.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      if (this.crop.isImageSet() && this.isMouseDown) {\n        var mousePosition = this.getMousePos(this.canvas, e);\n        this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\n        var dragTouch = this.getDragTouchForID(0);\n\n        if (dragTouch) {\n          dragTouch.x = mousePosition.x;\n          dragTouch.y = mousePosition.y;\n        } else {\n          dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\n        }\n\n        new PointPool().instance.returnPoint(mousePosition);\n        this.drawCursors(dragTouch);\n        this.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(cropTouch) {\n      if (this.isMouseDown) {\n        this.handleMove(cropTouch);\n      }\n    }\n  }, {\n    key: \"getDragTouchForID\",\n    value: function getDragTouchForID(id) {\n      // tslint:disable-next-line:prefer-for-of\n      for (var i = 0; i < this.currentDragTouches.length; i++) {\n        if (id === this.currentDragTouches[i].id) {\n          return this.currentDragTouches[i];\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"drawCursors\",\n    value: function drawCursors(cropTouch) {\n      var cursorDrawn = false;\n\n      if (cropTouch != null) {\n        if (cropTouch.dragHandle === this.center) {\n          this.imageCropperDataShare.setStyle(this.canvas, 'move');\n          cursorDrawn = true;\n        }\n\n        if (cropTouch.dragHandle !== null && cropTouch.dragHandle instanceof CornerMarker) {\n          this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.position.x, cropTouch.dragHandle.position.y);\n          cursorDrawn = true;\n        }\n      }\n\n      var didDraw = false;\n\n      if (!cursorDrawn) {\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this.markers.length; i++) {\n          didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\n        }\n\n        if (!didDraw) {\n          this.imageCropperDataShare.setStyle(this.canvas, 'initial');\n        }\n      }\n\n      if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n        this.center.setOver(true);\n        this.imageCropperDataShare.setOver(this.canvas);\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\n      } else {\n        this.center.setOver(false);\n      }\n    }\n  }, {\n    key: \"drawCornerCursor\",\n    value: function drawCornerCursor(marker, x, y) {\n      if (marker.touchInBounds(x, y)) {\n        marker.setOver(true);\n\n        if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\n          if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          } else {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          }\n        } else {\n          if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          } else {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          }\n        }\n\n        return true;\n      }\n\n      marker.setOver(false);\n      return false;\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      if (this.crop.isImageSet()) {\n        var touch = event.touches[0];\n        var touchPosition = this.getTouchPos(this.canvas, touch);\n        var cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\n        new PointPool().instance.returnPoint(touchPosition);\n        this.isMouseDown = false;\n\n        var _iterator6 = _createForOfIteratorHelper(this.markers),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var marker = _step6.value;\n\n            if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\n              this.isMouseDown = true;\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n          this.isMouseDown = true;\n        }\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (this.crop.isImageSet()) {\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < event.changedTouches.length; i++) {\n          var touch = event.changedTouches[i];\n          var dragTouch = this.getDragTouchForID(touch.identifier);\n\n          if (dragTouch && dragTouch !== undefined) {\n            if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\n              dragTouch.dragHandle.setOver(false);\n            }\n\n            this.handleRelease(dragTouch);\n          }\n        }\n\n        if (this.currentDragTouches.length === 0) {\n          this.isMouseDown = false;\n          this.currentlyInteracting = false;\n        }\n      }\n    } // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n\n  }, {\n    key: \"drawImageIOSFix\",\n    value: function drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      // Works only if whole image is displayed:\n      // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n      // The following works correct also when only a part of the image is displayed:\n      // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\n      // this.vertSquashRatio, dx, dy, dw, dh);\n      ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (this.crop.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      if (this.crop.isImageSet()) {\n        this.imageCropperDataShare.setReleased(this.canvas);\n        this.isMouseDown = false;\n        this.handleRelease(new CropTouch(0, 0, 0));\n      }\n    }\n  }]);\n\n  return ImageCropper;\n}(ImageCropperModel);\n\nvar CropPosition = /*#__PURE__*/function () {\n  function CropPosition() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var w = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var h = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, CropPosition);\n\n    this.x = +x;\n    this.y = +y;\n    this.w = +w;\n    this.h = +h;\n  }\n\n  _createClass(CropPosition, [{\n    key: \"toBounds\",\n    value: function toBounds() {\n      return new Bounds(this.x, this.y, this.w, this.h);\n    }\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\n    }\n  }]);\n\n  return CropPosition;\n}();\n\nvar ImageCropperComponent = /*#__PURE__*/function () {\n  function ImageCropperComponent(renderer, document) {\n    _classCallCheck(this, ImageCropperComponent);\n\n    this.document = document;\n    this.cropPositionChange = new EventEmitter();\n    this.exif = new Exif(); // tslint:disable-next-line:no-output-on-prefix\n\n    this.onCrop = new EventEmitter();\n    this.imageSet = new EventEmitter();\n    this.dragUnsubscribers = [];\n    this.renderer = renderer;\n  }\n\n  _createClass(ImageCropperComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var canvas = this.cropcanvas.nativeElement;\n\n      if (!this.settings) {\n        this.settings = new CropperSettings();\n      }\n\n      if (this.settings.cropperClass) {\n        this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\n      }\n\n      if (!this.settings.dynamicSizing) {\n        this.renderer.setAttribute(canvas, 'width', this.settings.canvasWidth.toString());\n        this.renderer.setAttribute(canvas, 'height', this.settings.canvasHeight.toString());\n      } else {\n        this.windowListener = this.resize.bind(this);\n        window.addEventListener('resize', this.windowListener);\n      }\n\n      if (!this.cropper) {\n        this.cropper = new ImageCropper(this.settings);\n      }\n\n      this.cropper.prepare(canvas);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.isCropPositionChanged(changes)) {\n        this.cropper.updateCropPosition(this.cropPosition.toBounds());\n\n        if (this.cropper.isImageSet()) {\n          var bounds = this.cropper.getCropBounds();\n          this.image.image = this.cropper.getCroppedImageHelper().src;\n          this.onCrop.emit(bounds);\n        }\n\n        this.updateCropBounds();\n      }\n\n      if (changes.inputImage) {\n        this.setImage(changes.inputImage.currentValue);\n      }\n\n      if (changes.settings && this.cropper) {\n        this.cropper.updateSettings(this.settings);\n\n        if (this.cropper.isImageSet()) {\n          this.image.image = this.cropper.getCroppedImageHelper().src;\n          this.onCrop.emit(this.cropper.getCropBounds());\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeDragListeners();\n\n      if (this.settings.dynamicSizing && this.windowListener) {\n        window.removeEventListener('resize', this.windowListener);\n      }\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      this.cropper.onTouchMove(event);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      this.cropper.onTouchStart(event);\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      this.cropper.onTouchEnd(event);\n\n      if (this.cropper.isImageSet()) {\n        this.image.image = this.cropper.getCroppedImageHelper().src;\n        this.onCrop.emit(this.cropper.getCropBounds());\n        this.updateCropBounds();\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\n      this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\n      this.cropper.onMouseDown(event); // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\n      //   // load img\n      //   this.fileInput.nativeElement.click();\n      // }\n    }\n  }, {\n    key: \"removeDragListeners\",\n    value: function removeDragListeners() {\n      this.dragUnsubscribers.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      this.removeDragListeners();\n\n      if (this.cropper.isImageSet()) {\n        this.cropper.onMouseUp(event);\n        this.image.image = this.cropper.getCroppedImageHelper().src;\n        this.onCrop.emit(this.cropper.getCropBounds());\n        this.updateCropBounds();\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      this.cropper.onMouseMove(event);\n    }\n  }, {\n    key: \"fileChangeListener\",\n    value: function fileChangeListener($event) {\n      var _this4 = this;\n\n      if ($event.target.files.length === 0) {\n        return;\n      }\n\n      var file = $event.target.files[0];\n\n      if (this.settings.allowedFilesRegex.test(file.name)) {\n        var image = new Image();\n        var fileReader = new FileReader();\n        fileReader.addEventListener('loadend', function (loadEvent) {\n          image.addEventListener('load', function () {\n            _this4.setImage(image);\n          });\n          image.src = loadEvent.target.result;\n        });\n        fileReader.readAsDataURL(file);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var canvas = this.cropcanvas.nativeElement;\n      this.settings.canvasWidth = canvas.offsetWidth;\n      this.settings.canvasHeight = canvas.offsetHeight;\n      this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.cropper.reset();\n      this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', this.settings.cropperClass);\n      this.image.image = this.cropper.getCroppedImageHelper().src;\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(image) {\n      var _this5 = this;\n\n      var newBounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      this.imageSet.emit(true);\n      this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', \"\".concat(this.settings.cropperClass, \" \").concat(this.settings.croppingClass));\n      this.raf = window.requestAnimationFrame(function () {\n        if (_this5.raf) {\n          window.cancelAnimationFrame(_this5.raf);\n        }\n\n        if (image.naturalHeight > 0 && image.naturalWidth > 0) {\n          image.height = image.naturalHeight;\n          image.width = image.naturalWidth;\n          window.cancelAnimationFrame(_this5.raf);\n\n          _this5.getOrientedImage(image, function (img) {\n            if (_this5.settings.dynamicSizing) {\n              var canvas = _this5.cropcanvas.nativeElement;\n              _this5.settings.canvasWidth = canvas.offsetWidth;\n              _this5.settings.canvasHeight = canvas.offsetHeight;\n\n              _this5.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, false);\n            }\n\n            _this5.cropper.setImage(img);\n\n            if (_this5.cropPosition && _this5.cropPosition.isInitialized()) {\n              _this5.cropper.updateCropPosition(_this5.cropPosition.toBounds());\n            }\n\n            _this5.image.original = img;\n\n            var bounds = _this5.cropper.getCropBounds();\n\n            _this5.image.image = _this5.cropper.getCroppedImageHelper().src;\n\n            if (!_this5.image) {\n              _this5.image = image;\n            }\n\n            if (newBounds != null) {\n              bounds = newBounds;\n\n              _this5.cropper.setBounds(bounds);\n\n              _this5.cropper.updateCropPosition(bounds);\n            }\n\n            _this5.onCrop.emit(bounds);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"isCropPositionChanged\",\n    value: function isCropPositionChanged(changes) {\n      if (this.cropper && changes.cropPosition && this.isCropPositionUpdateNeeded) {\n        return true;\n      } else {\n        this.isCropPositionUpdateNeeded = true;\n        return false;\n      }\n    }\n  }, {\n    key: \"updateCropBounds\",\n    value: function updateCropBounds() {\n      var cropBound = this.cropper.getCropBounds();\n      this.cropPositionChange.emit(new CropPosition(cropBound.left, cropBound.top, cropBound.width, cropBound.height));\n      this.isCropPositionUpdateNeeded = false;\n    }\n  }, {\n    key: \"getOrientedImage\",\n    value: function getOrientedImage(image, callback) {\n      var _this6 = this;\n\n      var img;\n      this.exif.getData(image, function () {\n        var orientation = _this6.exif.getTag(image, 'Orientation');\n\n        if ([3, 6, 8].indexOf(orientation) > -1) {\n          var canvas = document.createElement('canvas');\n          var ctx = canvas.getContext('2d');\n          var cw = image.width;\n          var ch = image.height;\n          var cx = 0;\n          var cy = 0;\n          var deg = 0;\n\n          switch (orientation) {\n            case 3:\n              cx = -image.width;\n              cy = -image.height;\n              deg = 180;\n              break;\n\n            case 6:\n              cw = image.height;\n              ch = image.width;\n              cy = -image.height;\n              deg = 90;\n              break;\n\n            case 8:\n              cw = image.height;\n              ch = image.width;\n              cx = -image.width;\n              deg = 270;\n              break;\n\n            default:\n              break;\n          }\n\n          canvas.width = cw;\n          canvas.height = ch;\n          ctx.rotate(deg * Math.PI / 180);\n          ctx.drawImage(image, cx, cy);\n          img = document.createElement('img');\n          img.width = cw;\n          img.height = ch;\n          img.addEventListener('load', function () {\n            callback(img);\n          });\n          img.src = canvas.toDataURL('image/png');\n        } else {\n          img = image;\n          callback(img);\n        }\n      });\n    }\n  }]);\n\n  return ImageCropperComponent;\n}();\n\nImageCropperComponent.ɵfac = function ImageCropperComponent_Factory(t) {\n  return new (t || ImageCropperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nImageCropperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ImageCropperComponent,\n  selectors: [[\"img-cropper\"]],\n  viewQuery: function ImageCropperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cropcanvas = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    }\n  },\n  inputs: {\n    settings: \"settings\",\n    cropper: \"cropper\",\n    image: \"image\",\n    inputImage: \"inputImage\",\n    cropPosition: \"cropPosition\"\n  },\n  outputs: {\n    cropPositionChange: \"cropPositionChange\",\n    onCrop: \"onCrop\",\n    imageSet: \"imageSet\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"ng2-imgcrop\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\", 4, \"ngIf\"], [3, \"mousedown\", \"touchmove\", \"touchend\", \"touchstart\"], [\"cropcanvas\", \"\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"fileInput\", \"\"]],\n  template: function ImageCropperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, ImageCropperComponent_input_1_Template, 2, 0, \"input\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"canvas\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function ImageCropperComponent_Template_canvas_mousedown_2_listener($event) {\n        return ctx.onMouseDown($event);\n      })(\"touchmove\", function ImageCropperComponent_Template_canvas_touchmove_2_listener($event) {\n        return ctx.onTouchMove($event);\n      })(\"touchend\", function ImageCropperComponent_Template_canvas_touchend_2_listener($event) {\n        return ctx.onTouchEnd($event);\n      })(\"touchstart\", function ImageCropperComponent_Template_canvas_touchstart_2_listener($event) {\n        return ctx.onTouchStart($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.noFileInput);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\nImageCropperComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n__decorate([ViewChild('cropcanvas', {\n  static: true\n}), __metadata(\"design:type\", ElementRef)], ImageCropperComponent.prototype, \"cropcanvas\", void 0);\n\n__decorate([ViewChild('fileInput'), __metadata(\"design:type\", ElementRef)], ImageCropperComponent.prototype, \"fileInput\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", CropperSettings)], ImageCropperComponent.prototype, \"settings\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], ImageCropperComponent.prototype, \"image\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], ImageCropperComponent.prototype, \"inputImage\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", ImageCropper)], ImageCropperComponent.prototype, \"cropper\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", CropPosition)], ImageCropperComponent.prototype, \"cropPosition\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], ImageCropperComponent.prototype, \"cropPositionChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], ImageCropperComponent.prototype, \"onCrop\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], ImageCropperComponent.prototype, \"imageSet\", void 0);\n\nImageCropperComponent = __decorate([__param(1, Inject(DOCUMENT)), __metadata(\"design:paramtypes\", [Renderer2, Object])], ImageCropperComponent);\n\nvar ImageCropperModule = function ImageCropperModule() {\n  _classCallCheck(this, ImageCropperModule);\n};\n\nImageCropperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ImageCropperModule\n});\nImageCropperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ImageCropperModule_Factory(t) {\n    return new (t || ImageCropperModule)();\n  },\n  imports: [[CommonModule]]\n});\n\nvar ImageCropperService = function ImageCropperService() {\n  _classCallCheck(this, ImageCropperService);\n};\n\nImageCropperService.ɵfac = function ImageCropperService_Factory(t) {\n  return new (t || ImageCropperService)();\n};\n\nImageCropperService.ɵprov = ɵɵdefineInjectable({\n  factory: function ImageCropperService_Factory() {\n    return new ImageCropperService();\n  },\n  token: ImageCropperService,\n  providedIn: \"root\"\n});\nImageCropperService = __decorate([__metadata(\"design:paramtypes\", [])], ImageCropperService);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ImageCropperComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line:component-selector\n      selector: 'img-cropper',\n      template: \"<span class=\\\"ng2-imgcrop\\\">\\r\\n  <input\\r\\n    *ngIf=\\\"!settings.noFileInput\\\"\\r\\n    #fileInput\\r\\n    type=\\\"file\\\"\\r\\n    accept=\\\"image/*\\\"\\r\\n    (change)=\\\"fileChangeListener($event)\\\"\\r\\n  />\\r\\n  <canvas\\r\\n    #cropcanvas\\r\\n    (mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (touchmove)=\\\"onTouchMove($event)\\\"\\r\\n    (touchend)=\\\"onTouchEnd($event)\\\"\\r\\n    (touchstart)=\\\"onTouchStart($event)\\\"\\r\\n  >\\r\\n  </canvas>\\r\\n</span>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    cropPositionChange: [{\n      type: Output\n    }],\n    onCrop: [{\n      type: Output\n    }],\n    imageSet: [{\n      type: Output\n    }],\n    settings: [{\n      type: Input\n    }],\n    cropper: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    cropcanvas: [{\n      type: ViewChild,\n      args: ['cropcanvas', {\n        static: true\n      }]\n    }],\n    fileInput: [{\n      type: ViewChild,\n      args: ['fileInput']\n    }],\n    inputImage: [{\n      type: Input\n    }],\n    cropPosition: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageCropperModule, {\n    declarations: function declarations() {\n      return [ImageCropperComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ImageCropperComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ImageCropperModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ImageCropperComponent],\n      exports: [ImageCropperComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ImageCropperService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})(); // looks like this CropService is never used\n\n\nvar CropService = /*#__PURE__*/function () {\n  function CropService() {\n    _classCallCheck(this, CropService);\n  }\n\n  _createClass(CropService, [{\n    key: \"init\",\n    value: function init(canvas) {\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext('2d');\n    }\n  }]);\n\n  return CropService;\n}();\n/*\r\n * Public API Surface of ngx-img-cropper\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { Bounds, CornerMarker, CropPosition, CropService, CropTouch, CropperDrawSettings, CropperSettings, DragMarker, Exif, Fraction, Handle, ImageCropper, ImageCropperComponent, ImageCropperDataShare, ImageCropperModel, ImageCropperModule, ImageCropperService, Point, PointPool, ImageCropperModel as ɵa };","map":{"version":3,"sources":["ngx-img-cropper/lib/image-cropper/cropper-draw-settings.ts","ngx-img-cropper/lib/image-cropper/cropper-settings.ts","ngx-img-cropper/lib/image-cropper/exif.ts","ngx-img-cropper/lib/image-cropper/model/point.ts","ngx-img-cropper/lib/image-cropper/model/pointPool.ts","ngx-img-cropper/lib/image-cropper/model/bounds.ts","ngx-img-cropper/lib/image-cropper/model/handle.ts","ngx-img-cropper/lib/image-cropper/model/cornerMarker.ts","ngx-img-cropper/lib/image-cropper/model/cropTouch.ts","ngx-img-cropper/lib/image-cropper/model/dragMarker.ts","ngx-img-cropper/lib/image-cropper/model/imageCropperModel.ts","ngx-img-cropper/lib/image-cropper/imageCropperDataShare.ts","ngx-img-cropper/lib/image-cropper/imageCropper.ts","ngx-img-cropper/lib/image-cropper/model/cropPosition.ts","ngx-img-cropper/lib/image-cropper/image-cropper.component.ts","ngx-img-cropper/lib/image-cropper/image-cropper.module.ts","ngx-img-cropper/lib/image-cropper/image-cropper.service.ts","ngx-img-cropper/lib/image-cropper/model/cropService.ts","ngx-img-cropper/public_api.ts","ngx-img-cropper/ngx-img-cropper.ts"],"names":[],"mappings":"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","sourcesContent":["export class CropperDrawSettings {\r\n  public lineDash = false;\r\n  public strokeWidth = 1;\r\n  public strokeColor = 'rgba(255,255,255,1)';\r\n  public fillColor = 'rgba(255,255,255,1)';\r\n  public dragIconStrokeWidth = 1;\r\n  public dragIconStrokeColor = 'rgba(0,0,0,1)';\r\n  public dragIconFillColor = 'rgba(255,255,255,1)';\r\n  public backgroundFillColor = 'rgba(0,0,0,0.6)';\r\n\r\n  constructor(settings?: any) {\r\n    if (typeof settings === 'object') {\r\n      this.lineDash = settings.lineDash || this.lineDash;\r\n      this.strokeWidth = settings.strokeWidth || this.strokeWidth;\r\n      this.fillColor = settings.fillColor || this.fillColor;\r\n      this.strokeColor = settings.strokeColor || this.strokeColor;\r\n      this.dragIconStrokeWidth =\r\n        settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\r\n      this.dragIconStrokeColor =\r\n        settings.dragIconStrokeColor || this.dragIconStrokeColor;\r\n      this.dragIconFillColor =\r\n        settings.dragIconFillColor || this.dragIconFillColor;\r\n      this.backgroundFillColor =\r\n        settings.backgroundFillColor || this.backgroundFillColor;\r\n    }\r\n  }\r\n}\r\n","import { CropperDrawSettings } from './cropper-draw-settings';\r\n\r\nexport interface ICropperSettings {\r\n  canvasWidth?: number;\r\n  canvasHeight?: number;\r\n  dynamicSizing?: boolean;\r\n  cropperClass?: string;\r\n  croppingClass?: string;\r\n  width?: number;\r\n  height?: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  minWithRelativeToResolution?: boolean;\r\n  croppedWidth?: number;\r\n  croppedHeight?: number;\r\n  cropperDrawSettings?: any;\r\n  touchRadius?: number;\r\n  noFileInput?: boolean;\r\n  fileType?: string;\r\n  resampleFn?: (c: HTMLCanvasElement) => void;\r\n  markerSizeMultiplier?: number;\r\n  centerTouchRadius?: number;\r\n  showCenterMarker?: boolean;\r\n  allowedFilesRegex?: RegExp;\r\n  cropOnResize?: boolean;\r\n  preserveSize?: boolean;\r\n  compressRatio?: number;\r\n  rounded?: boolean;\r\n  keepAspect?: boolean;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth = 300;\r\n  public canvasHeight = 300;\r\n\r\n  public dynamicSizing = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width = 200;\r\n  public height = 200;\r\n\r\n  public minWidth = 50;\r\n  public minHeight = 50;\r\n  public minWithRelativeToResolution = true;\r\n\r\n  public croppedWidth = 100;\r\n  public croppedHeight = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius = 20;\r\n  public noFileInput = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: (c: HTMLCanvasElement) => void;\r\n\r\n  public markerSizeMultiplier = 1;\r\n  public centerTouchRadius = 20;\r\n  public showCenterMarker = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize = true;\r\n  public preserveSize = false;\r\n\r\n  public compressRatio = 1.0;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _rounded = false;\r\n  // tslint:disable-next-line:variable-name\r\n  private _keepAspect = true;\r\n\r\n  constructor(settings?: ICropperSettings) {\r\n    if (typeof settings === 'object') {\r\n      Object.assign(this, settings);\r\n    }\r\n  }\r\n\r\n  set rounded(val: boolean) {\r\n    this._rounded = val;\r\n    if (val) {\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n  set keepAspect(val: boolean) {\r\n    this._keepAspect = val;\r\n    if (this._rounded === true && this._keepAspect === false) {\r\n      console.error(\r\n        'Cannot set keep aspect to false on rounded cropper. Ellipsis not supported'\r\n      );\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n","export class Fraction extends Number {\r\n  numerator: number;\r\n  denominator: number;\r\n}\r\n\r\nexport interface IImageExtended extends HTMLImageElement {\r\n  exifdata: any;\r\n  iptcdata: any;\r\n}\r\n\r\nexport class Exif {\r\n  public debug = false;\r\n\r\n  public IptcFieldMap: any = {\r\n    0x78: 'caption',\r\n    0x6e: 'credit',\r\n    0x19: 'keywords',\r\n    0x37: 'dateCreated',\r\n    0x50: 'byline',\r\n    0x55: 'bylineTitle',\r\n    0x7a: 'captionWriter',\r\n    0x69: 'headline',\r\n    0x74: 'copyright',\r\n    0x0f: 'category'\r\n  };\r\n\r\n  public Tags: any = {\r\n    // version tags\r\n    0x9000: 'ExifVersion', // EXIF version\r\n    0xa000: 'FlashpixVersion', // Flashpix format version\r\n\r\n    // colorspace tags\r\n    0xa001: 'ColorSpace', // Color space information tag\r\n\r\n    // image configuration\r\n    0xa002: 'PixelXDimension', // Valid width of meaningful image\r\n    0xa003: 'PixelYDimension', // Valid height of meaningful image\r\n    0x9101: 'ComponentsConfiguration', // Information about channels\r\n    0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\r\n\r\n    // user information\r\n    0x927c: 'MakerNote', // Any desired information written by the manufacturer\r\n    0x9286: 'UserComment', // Comments by user\r\n\r\n    // related file\r\n    0xa004: 'RelatedSoundFile', // Name of related sound file\r\n\r\n    // date and time\r\n    0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\r\n    0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\r\n    0x9290: 'SubsecTime', // Fractions of seconds for DateTime\r\n    0x9291: 'SubsecTimeOriginal', // Fractions of seconds for DateTimeOriginal\r\n    0x9292: 'SubsecTimeDigitized', // Fractions of seconds for DateTimeDigitized\r\n\r\n    // picture-taking conditions\r\n    0x829a: 'ExposureTime', // Exposure time (in seconds)\r\n    0x829d: 'FNumber', // F number\r\n    0x8822: 'ExposureProgram', // Exposure program\r\n    0x8824: 'SpectralSensitivity', // Spectral sensitivity\r\n    0x8827: 'ISOSpeedRatings', // ISO speed rating\r\n    0x8828: 'OECF', // Optoelectric conversion factor\r\n    0x9201: 'ShutterSpeedValue', // Shutter speed\r\n    0x9202: 'ApertureValue', // Lens aperture\r\n    0x9203: 'BrightnessValue', // Value of brightness\r\n    0x9204: 'ExposureBias', // Exposure bias\r\n    0x9205: 'MaxApertureValue', // Smallest F number of lens\r\n    0x9206: 'SubjectDistance', // Distance to subject in meters\r\n    0x9207: 'MeteringMode', // Metering mode\r\n    0x9208: 'LightSource', // Kind of light source\r\n    0x9209: 'Flash', // Flash status\r\n    0x9214: 'SubjectArea', // Location and area of main subject\r\n    0x920a: 'FocalLength', // Focal length of the lens in mm\r\n    0xa20b: 'FlashEnergy', // Strobe energy in BCPS\r\n    0xa20c: 'SpatialFrequencyResponse', //\r\n    0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n    0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n    0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n    0xa214: 'SubjectLocation', // Location of subject in image\r\n    0xa215: 'ExposureIndex', // Exposure index selected on camera\r\n    0xa217: 'SensingMethod', // Image sensor type\r\n    0xa300: 'FileSource', // Image source (3 == DSC)\r\n    0xa301: 'SceneType', // Scene type (1 == directly photographed)\r\n    0xa302: 'CFAPattern', // Color filter array geometric pattern\r\n    0xa401: 'CustomRendered', // Special processing\r\n    0xa402: 'ExposureMode', // Exposure mode\r\n    0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\r\n    0xa404: 'DigitalZoomRation', // Digital zoom ratio\r\n    0xa405: 'FocalLengthIn35mmFilm', // Equivalent foacl length assuming 35mm film camera (in mm)\r\n    0xa406: 'SceneCaptureType', // Type of scene\r\n    0xa407: 'GainControl', // Degree of overall image gain adjustment\r\n    0xa408: 'Contrast', // Direction of contrast processing applied by camera\r\n    0xa409: 'Saturation', // Direction of saturation processing applied by camera\r\n    0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\r\n    0xa40b: 'DeviceSettingDescription', //\r\n    0xa40c: 'SubjectDistanceRange', // Distance to subject\r\n\r\n    // other tags\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\r\n  };\r\n\r\n  public TiffTags: any = {\r\n    0x0100: 'ImageWidth',\r\n    0x0101: 'ImageHeight',\r\n    0x8769: 'ExifIFDPointer',\r\n    0x8825: 'GPSInfoIFDPointer',\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0x0102: 'BitsPerSample',\r\n    0x0103: 'Compression',\r\n    0x0106: 'PhotometricInterpretation',\r\n    0x0112: 'Orientation',\r\n    0x0115: 'SamplesPerPixel',\r\n    0x011c: 'PlanarConfiguration',\r\n    0x0212: 'YCbCrSubSampling',\r\n    0x0213: 'YCbCrPositioning',\r\n    0x011a: 'XResolution',\r\n    0x011b: 'YResolution',\r\n    0x0128: 'ResolutionUnit',\r\n    0x0111: 'StripOffsets',\r\n    0x0116: 'RowsPerStrip',\r\n    0x0117: 'StripByteCounts',\r\n    0x0201: 'JPEGInterchangeFormat',\r\n    0x0202: 'JPEGInterchangeFormatLength',\r\n    0x012d: 'TransferFunction',\r\n    0x013e: 'WhitePoint',\r\n    0x013f: 'PrimaryChromaticities',\r\n    0x0211: 'YCbCrCoefficients',\r\n    0x0214: 'ReferenceBlackWhite',\r\n    0x0132: 'DateTime',\r\n    0x010e: 'ImageDescription',\r\n    0x010f: 'Make',\r\n    0x0110: 'Model',\r\n    0x0131: 'Software',\r\n    0x013b: 'Artist',\r\n    0x8298: 'Copyright'\r\n  };\r\n\r\n  public GPSTags: any = {\r\n    0x0000: 'GPSVersionID',\r\n    0x0001: 'GPSLatitudeRef',\r\n    0x0002: 'GPSLatitude',\r\n    0x0003: 'GPSLongitudeRef',\r\n    0x0004: 'GPSLongitude',\r\n    0x0005: 'GPSAltitudeRef',\r\n    0x0006: 'GPSAltitude',\r\n    0x0007: 'GPSTimeStamp',\r\n    0x0008: 'GPSSatellites',\r\n    0x0009: 'GPSStatus',\r\n    0x000a: 'GPSMeasureMode',\r\n    0x000b: 'GPSDOP',\r\n    0x000c: 'GPSSpeedRef',\r\n    0x000d: 'GPSSpeed',\r\n    0x000e: 'GPSTrackRef',\r\n    0x000f: 'GPSTrack',\r\n    0x0010: 'GPSImgDirectionRef',\r\n    0x0011: 'GPSImgDirection',\r\n    0x0012: 'GPSMapDatum',\r\n    0x0013: 'GPSDestLatitudeRef',\r\n    0x0014: 'GPSDestLatitude',\r\n    0x0015: 'GPSDestLongitudeRef',\r\n    0x0016: 'GPSDestLongitude',\r\n    0x0017: 'GPSDestBearingRef',\r\n    0x0018: 'GPSDestBearing',\r\n    0x0019: 'GPSDestDistanceRef',\r\n    0x001a: 'GPSDestDistance',\r\n    0x001b: 'GPSProcessingMethod',\r\n    0x001c: 'GPSAreaInformation',\r\n    0x001d: 'GPSDateStamp',\r\n    0x001e: 'GPSDifferential'\r\n  };\r\n\r\n  public StringValues: any = {\r\n    ExposureProgram: {\r\n      0: 'Not defined',\r\n      1: 'Manual',\r\n      2: 'Normal program',\r\n      3: 'Aperture priority',\r\n      4: 'Shutter priority',\r\n      5: 'Creative program',\r\n      6: 'Action program',\r\n      7: 'Portrait mode',\r\n      8: 'Landscape mode'\r\n    },\r\n    MeteringMode: {\r\n      0: 'Unknown',\r\n      1: 'Average',\r\n      2: 'CenterWeightedAverage',\r\n      3: 'Spot',\r\n      4: 'MultiSpot',\r\n      5: 'Pattern',\r\n      6: 'Partial',\r\n      255: 'Other'\r\n    },\r\n    LightSource: {\r\n      0: 'Unknown',\r\n      1: 'Daylight',\r\n      2: 'Fluorescent',\r\n      3: 'Tungsten (incandescent light)',\r\n      4: 'Flash',\r\n      9: 'Fine weather',\r\n      10: 'Cloudy weather',\r\n      11: 'Shade',\r\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n      13: 'Day white fluorescent (N 4600 - 5400K)',\r\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n      15: 'White fluorescent (WW 3200 - 3700K)',\r\n      17: 'Standard light A',\r\n      18: 'Standard light B',\r\n      19: 'Standard light C',\r\n      20: 'D55',\r\n      21: 'D65',\r\n      22: 'D75',\r\n      23: 'D50',\r\n      24: 'ISO studio tungsten',\r\n      255: 'Other'\r\n    },\r\n    Flash: {\r\n      0x0000: 'Flash did not fire',\r\n      0x0001: 'Flash fired',\r\n      0x0005: 'Strobe return light not detected',\r\n      0x0007: 'Strobe return light detected',\r\n      0x0009: 'Flash fired, compulsory flash mode',\r\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\r\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\r\n      0x0010: 'Flash did not fire, compulsory flash mode',\r\n      0x0018: 'Flash did not fire, auto mode',\r\n      0x0019: 'Flash fired, auto mode',\r\n      0x001d: 'Flash fired, auto mode, return light not detected',\r\n      0x001f: 'Flash fired, auto mode, return light detected',\r\n      0x0020: 'No flash function',\r\n      0x0041: 'Flash fired, red-eye reduction mode',\r\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n    },\r\n    SensingMethod: {\r\n      1: 'Not defined',\r\n      2: 'One-chip color area sensor',\r\n      3: 'Two-chip color area sensor',\r\n      4: 'Three-chip color area sensor',\r\n      5: 'Color sequential area sensor',\r\n      7: 'Trilinear sensor',\r\n      8: 'Color sequential linear sensor'\r\n    },\r\n    SceneCaptureType: {\r\n      0: 'Standard',\r\n      1: 'Landscape',\r\n      2: 'Portrait',\r\n      3: 'Night scene'\r\n    },\r\n    SceneType: {\r\n      1: 'Directly photographed'\r\n    },\r\n    CustomRendered: {\r\n      0: 'Normal process',\r\n      1: 'Custom process'\r\n    },\r\n    WhiteBalance: {\r\n      0: 'Auto white balance',\r\n      1: 'Manual white balance'\r\n    },\r\n    GainControl: {\r\n      0: 'None',\r\n      1: 'Low gain up',\r\n      2: 'High gain up',\r\n      3: 'Low gain down',\r\n      4: 'High gain down'\r\n    },\r\n    Contrast: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    Saturation: {\r\n      0: 'Normal',\r\n      1: 'Low saturation',\r\n      2: 'High saturation'\r\n    },\r\n    Sharpness: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    SubjectDistanceRange: {\r\n      0: 'Unknown',\r\n      1: 'Macro',\r\n      2: 'Close view',\r\n      3: 'Distant view'\r\n    },\r\n    FileSource: {\r\n      3: 'DSC'\r\n    },\r\n\r\n    Components: {\r\n      0: '',\r\n      1: 'Y',\r\n      2: 'Cb',\r\n      3: 'Cr',\r\n      4: 'R',\r\n      5: 'G',\r\n      6: 'B'\r\n    }\r\n  };\r\n\r\n  public addEvent(\r\n    element: EventTarget | any,\r\n    event: string,\r\n    handler: EventListener\r\n  ) {\r\n    if (element.addEventListener) {\r\n      element.addEventListener(event, handler, false);\r\n    } else {\r\n      // Hello, IE!\r\n      if (element.attachEvent) {\r\n        element.attachEvent('on' + event, handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  public imageHasData(img: IImageExtended) {\r\n    return !!img.exifdata;\r\n  }\r\n\r\n  public base64ToArrayBuffer(base64: string): ArrayBuffer {\r\n    base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\r\n    const binary: string = atob(base64);\r\n    const len: number = binary.length;\r\n    const buffer: ArrayBuffer = new ArrayBuffer(len);\r\n    const view: Uint8Array = new Uint8Array(buffer);\r\n    for (let i = 0; i < len; i++) {\r\n      view[i] = binary.charCodeAt(i);\r\n    }\r\n    return buffer;\r\n  }\r\n\r\n  public objectURLToBlob(url: string, callback: (blob: Blob) => void) {\r\n    const http: XMLHttpRequest = new XMLHttpRequest();\r\n    http.open('GET', url, true);\r\n    http.responseType = 'blob';\r\n    http.onload = () => {\r\n      if (http.status === 200 || http.status === 0) {\r\n        callback(http.response);\r\n      }\r\n    };\r\n    http.send();\r\n  }\r\n\r\n  public getImageData(\r\n    img: IImageExtended | Blob | File,\r\n    callback: (img: IImageExtended) => void\r\n  ) {\r\n    const handleBinaryFile = (binFile: ArrayBuffer) => {\r\n      const data = this.findEXIFinJPEG(binFile);\r\n      const iptcdata = this.findIPTCinJPEG(binFile);\r\n      (img as IImageExtended).exifdata = data || {};\r\n      (img as IImageExtended).iptcdata = iptcdata || {};\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    };\r\n\r\n    if ('src' in img && (img as IImageExtended).src) {\r\n      if (/^data:/i.test((img as IImageExtended).src)) {\r\n        // Data URI\r\n        const arrayBuffer = this.base64ToArrayBuffer(\r\n          (img as IImageExtended).src\r\n        );\r\n        handleBinaryFile(arrayBuffer);\r\n      } else {\r\n        if (/^blob:/i.test((img as IImageExtended).src)) {\r\n          // Object URL\r\n          const fileReader = new FileReader();\r\n          fileReader.onload = (e: any) => {\r\n            handleBinaryFile(e.target.result);\r\n          };\r\n          this.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\r\n            fileReader.readAsArrayBuffer(blob);\r\n          });\r\n        } else {\r\n          const http = new XMLHttpRequest();\r\n          http.onload = () => {\r\n            if (http.status === 200 || http.status === 0) {\r\n              handleBinaryFile(http.response);\r\n            } else {\r\n              throw new Error('Could not load image');\r\n            }\r\n          };\r\n          http.open('GET', (img as IImageExtended).src, true);\r\n          http.responseType = 'arraybuffer';\r\n          http.send(null);\r\n        }\r\n      }\r\n    } else {\r\n      if (FileReader && (img instanceof Blob || img instanceof File)) {\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e: any) => {\r\n          this.log('Got file of length ' + e.target.result.byteLength);\r\n          handleBinaryFile(e.target.result);\r\n        };\r\n\r\n        fileReader.readAsArrayBuffer(img);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findEXIFinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length: number = file.byteLength;\r\n    let marker: number;\r\n\r\n    while (offset < length) {\r\n      if (dataView.getUint8(offset) !== 0xff) {\r\n        this.log(\r\n          'Not a valid marker at offset ' +\r\n            offset +\r\n            ', found: ' +\r\n            dataView.getUint8(offset)\r\n        );\r\n        return false; // not a valid marker, something is wrong\r\n      }\r\n\r\n      marker = dataView.getUint8(offset + 1);\r\n      this.log(marker);\r\n\r\n      // we could implement handling for other markers here,\r\n      // but we're only looking for 0xFFE1 for EXIF data\r\n      if (marker === 225) {\r\n        this.log('Found 0xFFE1 marker');\r\n        return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\r\n        // offset += 2 + file.getShortAt(offset+2, true);\r\n      } else {\r\n        offset += 2 + dataView.getUint16(offset + 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findIPTCinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length = file.byteLength;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    const isFieldSegmentStart = (_dataView: DataView, _offset: number) => {\r\n      return (\r\n        _dataView.getUint8(_offset) === 0x38 &&\r\n        _dataView.getUint8(_offset + 1) === 0x42 &&\r\n        _dataView.getUint8(_offset + 2) === 0x49 &&\r\n        _dataView.getUint8(_offset + 3) === 0x4d &&\r\n        _dataView.getUint8(_offset + 4) === 0x04 &&\r\n        _dataView.getUint8(_offset + 5) === 0x04\r\n      );\r\n    };\r\n\r\n    while (offset < length) {\r\n      if (isFieldSegmentStart(dataView, offset)) {\r\n        // Get the length of the name header (which is padded to an even number of bytes)\r\n        let nameHeaderLength = dataView.getUint8(offset + 7);\r\n        if (nameHeaderLength % 2 !== 0) {\r\n          nameHeaderLength += 1;\r\n        }\r\n        // Check for pre photoshop 6 format\r\n        if (nameHeaderLength === 0) {\r\n          // Always 4\r\n          nameHeaderLength = 4;\r\n        }\r\n\r\n        const startOffset = offset + 8 + nameHeaderLength;\r\n        const sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n        return this.readIPTCData(file, startOffset, sectionLength);\r\n      }\r\n\r\n      // Not the marker, continue searching\r\n      offset++;\r\n    }\r\n  }\r\n\r\n  public readIPTCData(\r\n    file: ArrayBuffer,\r\n    startOffset: number,\r\n    sectionLength: number\r\n  ) {\r\n    const dataView = new DataView(file);\r\n    const data: any = {};\r\n    let fieldValue: any;\r\n    let fieldName: string;\r\n    let dataSize: number;\r\n    let segmentType: any;\r\n    let segmentSize: number;\r\n    let segmentStartPos = startOffset;\r\n    while (segmentStartPos < startOffset + sectionLength) {\r\n      if (\r\n        dataView.getUint8(segmentStartPos) === 0x1c &&\r\n        dataView.getUint8(segmentStartPos + 1) === 0x02\r\n      ) {\r\n        segmentType = dataView.getUint8(segmentStartPos + 2);\r\n        if (segmentType in this.IptcFieldMap) {\r\n          dataSize = dataView.getInt16(segmentStartPos + 3);\r\n          segmentSize = dataSize + 5;\r\n          fieldName = this.IptcFieldMap[segmentType];\r\n          fieldValue = this.getStringFromDB(\r\n            dataView,\r\n            segmentStartPos + 5,\r\n            dataSize\r\n          );\r\n          // Check if we already stored a value with this name\r\n          if (data.hasOwnProperty(fieldName)) {\r\n            // Value already stored with this name, create multivalue field\r\n            if (data[fieldName] instanceof Array) {\r\n              data[fieldName].push(fieldValue);\r\n            } else {\r\n              data[fieldName] = [data[fieldName], fieldValue];\r\n            }\r\n          } else {\r\n            data[fieldName] = fieldValue;\r\n          }\r\n        }\r\n      }\r\n      segmentStartPos++;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public readTags(\r\n    file: DataView,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    strings: string[],\r\n    bigEnd: boolean\r\n  ): any {\r\n    const entries: number = file.getUint16(dirStart, !bigEnd);\r\n    const tags: any = {};\r\n    let entryOffset: number;\r\n    let tag: string;\r\n\r\n    for (let i = 0; i < entries; i++) {\r\n      entryOffset = dirStart + i * 12 + 2;\r\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n      if (!tag) {\r\n        this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\r\n      }\r\n      tags[tag] = this.readTagValue(\r\n        file,\r\n        entryOffset,\r\n        tiffStart,\r\n        dirStart,\r\n        bigEnd\r\n      );\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public readTagValue(\r\n    file: any,\r\n    entryOffset: number,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    bigEnd: boolean\r\n  ): any {\r\n    const type: number = file.getUint16(entryOffset + 2, !bigEnd);\r\n    const numValues = file.getUint32(entryOffset + 4, !bigEnd);\r\n    const valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\r\n    let offset: number;\r\n    let vals: any[];\r\n    let val: any;\r\n    let n: number;\r\n    let numerator: any;\r\n    let denominator: any;\r\n\r\n    switch (type) {\r\n      case 1: // byte, 8-bit unsigned int\r\n      case 7: // undefined, 8-bit byte, value depending on field\r\n        if (numValues === 1) {\r\n          return file.getUint8(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint8(offset + n);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 2: // ascii, 8-bit byte\r\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n        return this.getStringFromDB(file, offset, numValues - 1);\r\n\r\n      case 3: // short, 16 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint16(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 4: // long, 32 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 5: // rational = two long values, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          numerator = file.getUint32(valueOffset, !bigEnd);\r\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\r\n          val = new Fraction(numerator / denominator);\r\n          val.numerator = numerator;\r\n          val.denominator = denominator;\r\n          return val;\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\r\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\r\n            vals[n] = new Fraction(numerator / denominator);\r\n            vals[n].numerator = numerator;\r\n            vals[n].denominator = denominator;\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 9: // slong, 32 bit signed int\r\n        if (numValues === 1) {\r\n          return file.getInt32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          return (\r\n            file.getInt32(valueOffset, !bigEnd) /\r\n            file.getInt32(valueOffset + 4, !bigEnd)\r\n          );\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] =\r\n              file.getInt32(valueOffset + 8 * n, !bigEnd) /\r\n              file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getStringFromDB(\r\n    buffer: DataView,\r\n    start: number,\r\n    length: number\r\n  ): string {\r\n    let outstr = '';\r\n    for (let n = start; n < start + length; n++) {\r\n      outstr += String.fromCharCode(buffer.getUint8(n));\r\n    }\r\n    return outstr;\r\n  }\r\n\r\n  public readEXIFData(file: DataView, start: number): any {\r\n    if (this.getStringFromDB(file, start, 4) !== 'Exif') {\r\n      this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\r\n\r\n      return false;\r\n    }\r\n\r\n    let bigEnd: boolean;\r\n    let tags: any;\r\n    let tag: string;\r\n    let exifData: any;\r\n    let gpsData: any;\r\n    const tiffOffset: number = start + 6;\r\n\r\n    // test for TIFF validity and endianness\r\n    if (file.getUint16(tiffOffset) === 0x4949) {\r\n      bigEnd = false;\r\n    } else {\r\n      if (file.getUint16(tiffOffset) === 0x4d4d) {\r\n        bigEnd = true;\r\n      } else {\r\n        this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\r\n      this.log('Not valid TIFF data! (no 0x002A)');\r\n      return false;\r\n    }\r\n\r\n    const firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\r\n\r\n    if (firstIFDOffset < 0x00000008) {\r\n      this.log(\r\n        'Not valid TIFF data! (First offset less than 8)',\r\n        file.getUint32(tiffOffset + 4, !bigEnd)\r\n      );\r\n      return false;\r\n    }\r\n\r\n    tags = this.readTags(\r\n      file,\r\n      tiffOffset,\r\n      tiffOffset + firstIFDOffset,\r\n      this.TiffTags,\r\n      bigEnd\r\n    );\r\n\r\n    if (tags.ExifIFDPointer) {\r\n      exifData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.ExifIFDPointer,\r\n        this.Tags,\r\n        bigEnd\r\n      );\r\n      for (tag in exifData) {\r\n        if ({}.hasOwnProperty.call(exifData, tag)) {\r\n          switch (tag) {\r\n            case 'LightSource':\r\n            case 'Flash':\r\n            case 'MeteringMode':\r\n            case 'ExposureProgram':\r\n            case 'SensingMethod':\r\n            case 'SceneCaptureType':\r\n            case 'SceneType':\r\n            case 'CustomRendered':\r\n            case 'WhiteBalance':\r\n            case 'GainControl':\r\n            case 'Contrast':\r\n            case 'Saturation':\r\n            case 'Sharpness':\r\n            case 'SubjectDistanceRange':\r\n            case 'FileSource':\r\n              exifData[tag] = this.StringValues[tag][exifData[tag]];\r\n              break;\r\n            case 'ExifVersion':\r\n            case 'FlashpixVersion':\r\n              exifData[tag] = String.fromCharCode(\r\n                exifData[tag][0],\r\n                exifData[tag][1],\r\n                exifData[tag][2],\r\n                exifData[tag][3]\r\n              );\r\n              break;\r\n            case 'ComponentsConfiguration':\r\n              const compopents = 'Components';\r\n              exifData[tag] =\r\n                this.StringValues[compopents][exifData[tag][0]] +\r\n                this.StringValues[compopents][exifData[tag][1]] +\r\n                this.StringValues[compopents][exifData[tag][2]] +\r\n                this.StringValues[compopents][exifData[tag][3]];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = exifData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tags.GPSInfoIFDPointer) {\r\n      gpsData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.GPSInfoIFDPointer,\r\n        this.GPSTags,\r\n        bigEnd\r\n      );\r\n      for (tag in gpsData) {\r\n        if ({}.hasOwnProperty.call(gpsData, tag)) {\r\n          switch (tag) {\r\n            case 'GPSVersionID':\r\n              gpsData[tag] =\r\n                gpsData[tag][0] +\r\n                '.' +\r\n                gpsData[tag][1] +\r\n                '.' +\r\n                gpsData[tag][2] +\r\n                '.' +\r\n                gpsData[tag][3];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = gpsData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  //   get rid of this silly issue\r\n  private checkImageType(img: any) {\r\n    return img instanceof Image || img instanceof HTMLImageElement;\r\n  }\r\n\r\n  public getData(img: IImageExtended | HTMLImageElement, callback: () => void) {\r\n    if (this.checkImageType(img) && !img.complete) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.imageHasData(img as IImageExtended)) {\r\n      this.getImageData(img as IImageExtended, callback);\r\n    } else {\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getTag(img: any, tag: string) {\r\n    if (!this.imageHasData(img)) {\r\n      return;\r\n    }\r\n    return img.exifdata[tag];\r\n  }\r\n\r\n  public getAllTags(img: any) {\r\n    if (!this.imageHasData(img)) {\r\n      return {};\r\n    }\r\n    let a: string;\r\n    const data: any = img.exifdata;\r\n    const tags: any = {};\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        tags[a] = data[a];\r\n      }\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public pretty(img: IImageExtended) {\r\n    if (!this.imageHasData(img)) {\r\n      return '';\r\n    }\r\n    let a: any;\r\n    const data: any = img.exifdata;\r\n    let strPretty = '';\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        if (typeof data[a] === 'object') {\r\n          if (data[a] instanceof Number) {\r\n            strPretty += `${a} : ${data[a]} [${data[a].numerator}/${\r\n              data[a].denominator\r\n            }]\\r\\n`;\r\n          } else {\r\n            strPretty += `${a} : [${data[a].length} values]\\r\\n`;\r\n          }\r\n        } else {\r\n          strPretty += `${a} : ${data[a]}\\r\\n`;\r\n        }\r\n      }\r\n    }\r\n    return strPretty;\r\n  }\r\n\r\n  public readFromBinaryFile(file: ArrayBuffer) {\r\n    return this.findEXIFinJPEG(file);\r\n  }\r\n\r\n  public log(...args: any[]) {\r\n    if (this.debug) {\r\n      console.log(args);\r\n    }\r\n  }\r\n}\r\n","export interface IPoint {\r\n  x: number;\r\n  y: number;\r\n  next: Point;\r\n  prev: Point;\r\n}\r\n\r\nexport class Point implements IPoint {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  private myNext: Point;\r\n  private myPrev: Point;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public get next(): Point {\r\n    return this.myNext;\r\n  }\r\n\r\n  public set next(p: Point) {\r\n    this.myNext = p;\r\n  }\r\n\r\n  public get prev(): Point {\r\n    return this.myPrev;\r\n  }\r\n\r\n  public set prev(p: Point) {\r\n    this.myPrev = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\n\r\nexport class PointPool {\r\n  private borrowed: number;\r\n  private firstAvailable: Point;\r\n\r\n  constructor(initialSize: number = 1) {\r\n    let prev: Point = (this.firstAvailable = new Point());\r\n\r\n    for (let i = 1; i < initialSize; i++) {\r\n      const p = new Point();\r\n      prev.next = p;\r\n      prev = p;\r\n    }\r\n  }\r\n\r\n  get instance(): PointPool {\r\n    return this;\r\n  }\r\n\r\n  public borrow(x: number, y: number): Point {\r\n    if (this.firstAvailable == null) {\r\n      throw new Error('Pool exhausted');\r\n    }\r\n    this.borrowed++;\r\n    const p: Point = this.firstAvailable;\r\n    this.firstAvailable = p.next;\r\n    p.x = x;\r\n    p.y = y;\r\n    return p;\r\n  }\r\n\r\n  public returnPoint(p: Point) {\r\n    this.borrowed--;\r\n    p.x = 0;\r\n    p.y = 0;\r\n    p.next = this.firstAvailable;\r\n    this.firstAvailable = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { PointPool } from './pointPool';\r\n\r\nexport class Bounds {\r\n  public left: number;\r\n  public right: number;\r\n  public top: number;\r\n  public bottom: number;\r\n\r\n  constructor(x?: number, y?: number, width?: number, height?: number) {\r\n    if (x === void 0) {\r\n      x = 0;\r\n    }\r\n    if (y === void 0) {\r\n      y = 0;\r\n    }\r\n    if (width === void 0) {\r\n      width = 0;\r\n    }\r\n    if (height === void 0) {\r\n      height = 0;\r\n    }\r\n    this.left = x;\r\n    this.right = x + width;\r\n    this.top = y;\r\n    this.bottom = y + height;\r\n  }\r\n\r\n  public get width(): number {\r\n    return this.right - this.left;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.bottom - this.top;\r\n  }\r\n\r\n  public getCentre(): Point {\r\n    const w = this.width;\r\n    const h = this.height;\r\n    return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface IHandle {\r\n  over: boolean;\r\n  drag: boolean;\r\n  position: Point;\r\n  offset: Point;\r\n  radius: number;\r\n  cropperSettings: CropperSettings;\r\n  setPosition(x: number, y: number): void;\r\n  setDrag(value: boolean): void;\r\n  draw(ctx: CanvasRenderingContext2D): void;\r\n  setOver(over: boolean): void;\r\n  touchInBounds(x: number, y: number): boolean;\r\n}\r\n\r\nexport class Handle implements IHandle {\r\n  public over: boolean;\r\n  public drag: boolean;\r\n  // tslint:disable-next-line:variable-name\r\n  private _position: Point;\r\n  public offset: Point;\r\n  public radius: number;\r\n\r\n  public cropperSettings: CropperSettings = new CropperSettings();\r\n\r\n  constructor(x: number, y: number, radius: number, settings: CropperSettings) {\r\n    this.over = false;\r\n    this.drag = false;\r\n    this._position = new Point(x, y);\r\n    this.offset = new Point(0, 0);\r\n    this.radius = radius;\r\n    this.cropperSettings = settings;\r\n  }\r\n\r\n  public setDrag(value: boolean): void {\r\n    this.drag = value;\r\n    this.setOver(value);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    // this should't be empty\r\n  }\r\n\r\n  public setOver(over: boolean): void {\r\n    this.over = over;\r\n  }\r\n\r\n  public touchInBounds(x: number, y: number): boolean {\r\n    return (\r\n      x > this.position.x - this.radius + this.offset.x &&\r\n      x < this.position.x + this.radius + this.offset.x &&\r\n      y > this.position.y - this.radius + this.offset.y &&\r\n      y < this.position.y + this.radius + this.offset.y\r\n    );\r\n  }\r\n\r\n  public get position(): Point {\r\n    return this._position;\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this._position.x = x;\r\n    this._position.y = y;\r\n  }\r\n}\r\n","import { Handle, IHandle } from './handle';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface ICornerMarker extends IHandle {\r\n  horizontalNeighbour: CornerMarker;\r\n  verticalNeighbour: CornerMarker;\r\n}\r\n\r\nexport class CornerMarker extends Handle implements ICornerMarker {\r\n  public horizontalNeighbour: CornerMarker;\r\n  public verticalNeighbour: CornerMarker;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n  }\r\n\r\n  public drawCornerBorder(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.lineJoin = 'miter';\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n    ctx.strokeStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  public drawCornerFill(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    if (this.cropperSettings.rounded) {\r\n      const width: number =\r\n        this.position.x - this.horizontalNeighbour.position.x;\r\n      const height: number =\r\n        this.position.y - this.verticalNeighbour.position.y;\r\n\r\n      const offX: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n      const offY: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n\r\n      this.offset.x = hDirection > 0 ? offX : -offX;\r\n      this.offset.y = vDirection > 0 ? offY : -offY;\r\n    } else {\r\n      this.offset.x = 0;\r\n      this.offset.y = 0;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.fillStyle =\r\n      this.cropperSettings.cropperDrawSettings.fillColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.fill();\r\n  }\r\n\r\n  public moveX(x: number): void {\r\n    this.setPosition(x, this.position.y);\r\n  }\r\n\r\n  public moveY(y: number): void {\r\n    this.setPosition(this.position.x, y);\r\n  }\r\n\r\n  public move(x: number, y: number): void {\r\n    this.setPosition(x, y);\r\n    this.verticalNeighbour.moveX(x);\r\n    this.horizontalNeighbour.moveY(y);\r\n  }\r\n\r\n  public addHorizontalNeighbour(neighbour: CornerMarker): void {\r\n    this.horizontalNeighbour = neighbour;\r\n  }\r\n\r\n  public addVerticalNeighbour(neighbour: CornerMarker): void {\r\n    this.verticalNeighbour = neighbour;\r\n  }\r\n\r\n  public getHorizontalNeighbour(): CornerMarker {\r\n    return this.horizontalNeighbour;\r\n  }\r\n\r\n  public getVerticalNeighbour(): CornerMarker {\r\n    return this.verticalNeighbour;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    this.drawCornerFill(ctx);\r\n    this.drawCornerBorder(ctx);\r\n  }\r\n}\r\n","import { IHandle } from './handle';\r\n\r\nexport class CropTouch {\r\n  public x: number;\r\n  public y: number;\r\n  public id: number;\r\n\r\n  public dragHandle: IHandle;\r\n\r\n  constructor(x: number = 0, y: number = 0, id: number = 0) {\r\n    this.id = id;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Handle } from './handle';\r\nimport { PointPool } from './pointPool';\r\nimport { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\nimport { Bounds } from './bounds';\r\n\r\nexport class DragMarker extends Handle {\r\n  private iconPoints: Array<Point>;\r\n  private scaledIconPoints: Array<Point>;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n    this.iconPoints = [];\r\n    this.scaledIconPoints = [];\r\n    this.getDragIconPoints(this.iconPoints, 1);\r\n    this.getDragIconPoints(this.scaledIconPoints, 1.2);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.over || this.drag) {\r\n      this.drawIcon(ctx, this.scaledIconPoints);\r\n    } else {\r\n      this.drawIcon(ctx, this.iconPoints);\r\n    }\r\n  }\r\n\r\n  public getDragIconPoints(arr: Array<any>, scale: number) {\r\n    const maxLength = 17 * scale;\r\n    const arrowWidth = 14 * scale;\r\n    const arrowLength = 8 * scale;\r\n    const connectorThroat = 4 * scale;\r\n\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, -maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(-maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n  }\r\n\r\n  public drawIcon(ctx: CanvasRenderingContext2D, points: Array<Point>) {\r\n    if (this.cropperSettings.showCenterMarker) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\r\n      for (const p of points) {\r\n        ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\r\n      ctx.fill();\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public recalculatePosition(bounds: Bounds) {\r\n    const c = bounds.getCentre();\r\n    this.setPosition(c.x, c.y);\r\n    new PointPool().instance.returnPoint(c);\r\n  }\r\n}\r\n","import { PointPool } from './pointPool';\r\nimport { CornerMarker } from './cornerMarker';\r\nimport { DragMarker } from './dragMarker';\r\nimport { CropTouch } from './cropTouch';\r\n\r\nexport class ImageCropperModel {\r\n  public isMouseDown: boolean;\r\n  protected canvas: HTMLCanvasElement;\r\n  protected x: number;\r\n  protected y: number;\r\n  protected width: number;\r\n  protected height: number;\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected keepAspect: boolean;\r\n  protected touchRadius: number;\r\n  protected currentDragTouches: Array<CropTouch>;\r\n  protected ratioW: number;\r\n  protected ratioH: number;\r\n  protected fileType: string;\r\n  protected imageSet: boolean;\r\n  protected pointPool: PointPool;\r\n  protected buffer: HTMLCanvasElement;\r\n  protected cropCanvas: HTMLCanvasElement;\r\n  protected tl: CornerMarker;\r\n  protected tr: CornerMarker;\r\n  protected bl: CornerMarker;\r\n  protected br: CornerMarker;\r\n  protected markers: Array<CornerMarker>;\r\n  protected center: DragMarker;\r\n  protected ctx: CanvasRenderingContext2D;\r\n  protected aspectRatio: number;\r\n  protected currentlyInteracting: boolean;\r\n  protected srcImage: HTMLImageElement;\r\n  protected vertSquashRatio: number;\r\n  protected minXClamp: number;\r\n  protected minYClamp: number;\r\n  protected maxXClamp: number;\r\n  protected maxYClamp: number;\r\n  protected minHeight: number;\r\n  protected minWidth: number;\r\n  protected cropWidth: number;\r\n  protected cropHeight: number;\r\n  protected croppedImage: HTMLImageElement;\r\n}\r\n","export class ImageCropperDataShare {\r\n  public share: any = {};\r\n  public pressed: HTMLCanvasElement;\r\n  public over: HTMLCanvasElement;\r\n\r\n  public setPressed(canvas: HTMLCanvasElement): void {\r\n    this.pressed = canvas;\r\n  }\r\n\r\n  public setReleased(canvas: HTMLCanvasElement): void {\r\n    if (canvas === this.pressed) {\r\n      //  this.pressed = undefined;\r\n    }\r\n  }\r\n\r\n  public setOver(canvas: HTMLCanvasElement): void {\r\n    this.over = canvas;\r\n  }\r\n\r\n  public setStyle(canvas: HTMLCanvasElement, style: any): void {\r\n    if (this.pressed !== undefined) {\r\n      if (this.pressed === canvas) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    } else {\r\n      if (canvas === this.over) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './model/bounds';\r\nimport { CornerMarker } from './model/cornerMarker';\r\nimport { CropTouch } from './model/cropTouch';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { DragMarker } from './model/dragMarker';\r\nimport { ImageCropperModel } from './model/imageCropperModel';\r\nimport { ImageCropperDataShare } from './imageCropperDataShare';\r\nimport { PointPool } from './model/pointPool';\r\nimport { Point } from './model/point';\r\nimport { ICornerMarker } from './model/cornerMarker';\r\n\r\nexport class ImageCropper extends ImageCropperModel {\r\n  private crop: ImageCropper;\r\n  private cropperSettings: CropperSettings;\r\n  private previousDistance: number;\r\n  private imageCropperDataShare: ImageCropperDataShare;\r\n\r\n  constructor(cropperSettings: CropperSettings) {\r\n    super();\r\n    this.imageCropperDataShare = new ImageCropperDataShare();\r\n    const x = 0;\r\n    const y = 0;\r\n    const width: number = cropperSettings.width;\r\n    const height: number = cropperSettings.height;\r\n    const keepAspect: boolean = cropperSettings.keepAspect;\r\n    const touchRadius: number = cropperSettings.touchRadius;\r\n    const centerTouchRadius: number = cropperSettings.centerTouchRadius;\r\n    const minWidth: number = cropperSettings.minWidth;\r\n    const minHeight: number = cropperSettings.minHeight;\r\n    const croppedWidth: number = cropperSettings.croppedWidth;\r\n    const croppedHeight: number = cropperSettings.croppedHeight;\r\n\r\n    this.cropperSettings = cropperSettings;\r\n\r\n    this.crop = this;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.canvasHeight = cropperSettings.canvasHeight;\r\n    this.canvasWidth = cropperSettings.canvasWidth;\r\n\r\n    this.width = width;\r\n    if (width === void 0) {\r\n      this.width = 100;\r\n    }\r\n    this.height = height;\r\n    if (height === void 0) {\r\n      this.height = 50;\r\n    }\r\n    this.keepAspect = keepAspect;\r\n    if (keepAspect === void 0) {\r\n      this.keepAspect = true;\r\n    }\r\n    this.touchRadius = touchRadius;\r\n    if (touchRadius === void 0) {\r\n      this.touchRadius = 20;\r\n    }\r\n    this.minWidth = minWidth;\r\n    this.minHeight = minHeight;\r\n    this.aspectRatio = 0;\r\n    this.currentDragTouches = [];\r\n    this.isMouseDown = false;\r\n    this.ratioW = 1;\r\n    this.ratioH = 1;\r\n    this.fileType = cropperSettings.fileType;\r\n    this.imageSet = false;\r\n    this.pointPool = new PointPool(200);\r\n\r\n    this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n    this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n    this.bl = new CornerMarker(\r\n      x,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.br = new CornerMarker(\r\n      x + width,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n\r\n    this.tl.addHorizontalNeighbour(this.tr);\r\n    this.tl.addVerticalNeighbour(this.bl);\r\n    this.tr.addHorizontalNeighbour(this.tl);\r\n    this.tr.addVerticalNeighbour(this.br);\r\n    this.bl.addHorizontalNeighbour(this.br);\r\n    this.bl.addVerticalNeighbour(this.tl);\r\n    this.br.addHorizontalNeighbour(this.bl);\r\n    this.br.addVerticalNeighbour(this.tr);\r\n    this.markers = [this.tl, this.tr, this.bl, this.br];\r\n\r\n    this.center = new DragMarker(\r\n      x + width / 2,\r\n      y + height / 2,\r\n      centerTouchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.aspectRatio = height / width;\r\n    this.croppedImage = new Image();\r\n    this.currentlyInteracting = false;\r\n    this.cropWidth = croppedWidth;\r\n    this.cropHeight = croppedHeight;\r\n  }\r\n\r\n  private sign(x: number): number {\r\n    if (+x === x) {\r\n      return x === 0 ? x : x > 0 ? 1 : -1;\r\n    }\r\n    return NaN;\r\n  }\r\n\r\n  private getMousePos(canvas: HTMLCanvasElement, evt: MouseEvent): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      evt.clientX - rect.left,\r\n      evt.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private getTouchPos(canvas: HTMLCanvasElement, touch: Touch): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      touch.clientX - rect.left,\r\n      touch.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private detectVerticalSquash(\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\r\n  ) {\r\n    const ih = img.height;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = ih;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    ctx.drawImage(img, 0, 0);\r\n    const imageData: any = ctx.getImageData(0, 0, 1, ih);\r\n    if (imageData) {\r\n      const data = imageData.data;\r\n      // search image edge pixel position in case it is squashed vertically.\r\n      let sy = 0;\r\n      let ey = ih;\r\n      let py = ih;\r\n      while (py > sy) {\r\n        const alpha = data[(py - 1) * 4 + 3];\r\n        if (alpha === 0) {\r\n          ey = py;\r\n        } else {\r\n          sy = py;\r\n        }\r\n        // tslint:disable-next-line:no-bitwise\r\n        py = (ey + sy) >> 1;\r\n      }\r\n      const ratio = py / ih;\r\n      return ratio === 0 ? 1 : ratio;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  private getDataUriMimeType(dataUri: string) {\r\n    // Get a substring because the regex does not perform well on very large strings.\r\n    // Cater for optional charset. Length 50 shoould be enough.\r\n    const dataUriSubstring = dataUri.substring(0, 50);\r\n    let mimeType = 'image/png';\r\n    // data-uri scheme\r\n    // data:[<media type>][;charset=<character set>][;base64],<data>\r\n    const regEx = RegExp(\r\n      /^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi\r\n    );\r\n    const matches = regEx.exec(dataUriSubstring);\r\n    if (matches && matches[2]) {\r\n      mimeType = matches[2];\r\n      if (mimeType === 'image/jpg') {\r\n        mimeType = 'image/jpeg';\r\n      }\r\n    }\r\n    return mimeType;\r\n  }\r\n\r\n  public prepare(canvas: HTMLCanvasElement) {\r\n    this.buffer = document.createElement('canvas');\r\n    this.cropCanvas = document.createElement('canvas');\r\n\r\n    // todo get more reliable parent width value.\r\n    const responsiveWidth: number = canvas.parentElement\r\n      ? canvas.parentElement.clientWidth\r\n      : 0;\r\n    if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n      this.cropCanvas.width = responsiveWidth;\r\n      this.buffer.width = responsiveWidth;\r\n      canvas.width = responsiveWidth;\r\n    } else {\r\n      this.cropCanvas.width = this.cropWidth;\r\n      this.buffer.width = canvas.width;\r\n    }\r\n\r\n    this.cropCanvas.height = this.cropHeight;\r\n    this.buffer.height = canvas.height;\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public updateSettings(cropperSettings: CropperSettings) {\r\n    this.cropperSettings = cropperSettings;\r\n  }\r\n\r\n  public resizeCanvas(\r\n    width: number,\r\n    height: number,\r\n    setImage: boolean = false\r\n  ): void {\r\n    this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n    this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n    if (setImage) {\r\n      this.setImage(this.srcImage);\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.setImage(undefined);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (this.srcImage) {\r\n      ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n      let w: number = this.canvasWidth;\r\n      let h: number = this.canvasHeight;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvasWidth;\r\n        h = this.canvasWidth * sourceAspect;\r\n      } else {\r\n        h = this.canvasHeight;\r\n        w = this.canvasHeight / sourceAspect;\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      if (canvasAspect < sourceAspect) {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          this.buffer.width / 2 - w / 2,\r\n          0,\r\n          w,\r\n          h\r\n        );\r\n      } else {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          0,\r\n          this.buffer.height / 2 - h / 2,\r\n          w,\r\n          h\r\n        );\r\n      }\r\n      (this.buffer.getContext('2d') as CanvasRenderingContext2D).drawImage(\r\n        this.canvas,\r\n        0,\r\n        0,\r\n        this.canvasWidth,\r\n        this.canvasHeight\r\n      );\r\n\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\r\n\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\r\n      if (!this.cropperSettings.rounded) {\r\n        ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        ctx.drawImage(\r\n          this.buffer,\r\n          bounds.left,\r\n          bounds.top,\r\n          Math.max(bounds.width, 1),\r\n          Math.max(bounds.height, 1),\r\n          bounds.left,\r\n          bounds.top,\r\n          bounds.width,\r\n          bounds.height\r\n        );\r\n        ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n      } else {\r\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          bounds.left + bounds.width / 2,\r\n          bounds.top + bounds.height / 2,\r\n          bounds.width / 2,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.clip();\r\n        if (canvasAspect < sourceAspect) {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            this.buffer.width / 2 - w / 2,\r\n            0,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            0,\r\n            this.buffer.height / 2 - h / 2,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n        ctx.restore();\r\n      }\r\n\r\n      let marker: CornerMarker;\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        marker = this.markers[i];\r\n        marker.draw(ctx);\r\n      }\r\n      this.center.draw(ctx);\r\n    } else {\r\n      ctx.fillStyle = 'rgba(192,192,192,1)';\r\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n\r\n  public dragCenter(x: number, y: number, marker: DragMarker) {\r\n    const bounds = this.getBounds();\r\n    const left = x - bounds.width / 2;\r\n    const right = x + bounds.width / 2;\r\n    const top = y - bounds.height / 2;\r\n    const bottom = y + bounds.height / 2;\r\n    if (right >= this.maxXClamp) {\r\n      x = this.maxXClamp - bounds.width / 2;\r\n    }\r\n    if (left <= this.minXClamp) {\r\n      x = bounds.width / 2 + this.minXClamp;\r\n    }\r\n    if (top < this.minYClamp) {\r\n      y = bounds.height / 2 + this.minYClamp;\r\n    }\r\n    if (bottom >= this.maxYClamp) {\r\n      y = this.maxYClamp - bounds.height / 2;\r\n    }\r\n    this.tl.moveX(x - bounds.width / 2);\r\n    this.tl.moveY(y - bounds.height / 2);\r\n    this.tr.moveX(x + bounds.width / 2);\r\n    this.tr.moveY(y - bounds.height / 2);\r\n    this.bl.moveX(x - bounds.width / 2);\r\n    this.bl.moveY(y + bounds.height / 2);\r\n    this.br.moveX(x + bounds.width / 2);\r\n    this.br.moveY(y + bounds.height / 2);\r\n    marker.setPosition(x, y);\r\n  }\r\n\r\n  public enforceMinSize(x: number, y: number, marker: CornerMarker) {\r\n    const xLength = x - marker.getHorizontalNeighbour().position.x;\r\n    const yLength = y - marker.getVerticalNeighbour().position.y;\r\n    const xOver = this.minWidth - Math.abs(xLength);\r\n    const yOver = this.minHeight - Math.abs(yLength);\r\n\r\n    if (xLength === 0 || yLength === 0) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n\r\n      return new PointPool().instance.borrow(x, y);\r\n    }\r\n\r\n    if (this.keepAspect) {\r\n      if (xOver > 0 && yOver / this.aspectRatio > 0) {\r\n        if (xOver > yOver / this.aspectRatio) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yLength < 0) {\r\n            y -= yOver;\r\n\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          } else {\r\n            y += yOver;\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (xOver > 0) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yOver > 0) {\r\n            if (yLength < 0) {\r\n              y -= yOver;\r\n\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            } else {\r\n              y += yOver;\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (xOver > 0) {\r\n        if (xLength < 0) {\r\n          x -= xOver;\r\n        } else {\r\n          x += xOver;\r\n        }\r\n      }\r\n      if (yOver > 0) {\r\n        if (yLength < 0) {\r\n          y -= yOver;\r\n        } else {\r\n          y += yOver;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      x < this.minXClamp ||\r\n      x > this.maxXClamp ||\r\n      y < this.minYClamp ||\r\n      y > this.maxYClamp\r\n    ) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n    }\r\n\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public dragCorner(x: number, y: number, marker: CornerMarker) {\r\n    let iX = 0;\r\n    let iY = 0;\r\n    let ax = 0;\r\n    let ay = 0;\r\n    let newHeight = 0;\r\n    let newWidth = 0;\r\n    let newY = 0;\r\n    let newX = 0;\r\n    let anchorMarker: CornerMarker;\r\n    let fold = 0;\r\n\r\n    if (this.keepAspect) {\r\n      anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n      ax = anchorMarker.position.x;\r\n      ay = anchorMarker.position.y;\r\n      if (x <= anchorMarker.position.x) {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const min = this.enforceMinSize(x, y, marker);\r\n      marker.move(min.x, min.y);\r\n      new PointPool().instance.returnPoint(min);\r\n    }\r\n    this.center.recalculatePosition(this.getBounds());\r\n  }\r\n\r\n  public getSide(a: Point, b: Point, c: Point): number {\r\n    const n: number = this.sign(\r\n      (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\r\n    );\r\n\r\n    // TODO move the return of the pools to outside of this function\r\n    new PointPool().instance.returnPoint(a);\r\n    new PointPool().instance.returnPoint(c);\r\n    return n;\r\n  }\r\n\r\n  public handleRelease(newCropTouch: CropTouch) {\r\n    if (newCropTouch == null) {\r\n      return;\r\n    }\r\n    let index = 0;\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n        this.currentDragTouches[k].dragHandle.setDrag(false);\r\n        index = k;\r\n      }\r\n    }\r\n    this.currentDragTouches.splice(index, 1);\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public handleMove(newCropTouch: CropTouch) {\r\n    let matched = false;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (\r\n        newCropTouch.id === this.currentDragTouches[k].id &&\r\n        this.currentDragTouches[k].dragHandle != null\r\n      ) {\r\n        const dragTouch: CropTouch = this.currentDragTouches[k];\r\n        const clampedPositions = this.clampPosition(\r\n          newCropTouch.x - dragTouch.dragHandle.offset.x,\r\n          newCropTouch.y - dragTouch.dragHandle.offset.y\r\n        );\r\n        newCropTouch.x = clampedPositions.x;\r\n        newCropTouch.y = clampedPositions.y;\r\n        new PointPool().instance.returnPoint(clampedPositions);\r\n        if (dragTouch.dragHandle instanceof CornerMarker) {\r\n          this.dragCorner(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as CornerMarker\r\n          );\r\n        } else {\r\n          this.dragCenter(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n        this.currentlyInteracting = true;\r\n        matched = true;\r\n        this.imageCropperDataShare.setPressed(this.canvas);\r\n        break;\r\n      }\r\n    }\r\n    if (!matched) {\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = marker;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          marker.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCorner(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as CornerMarker\r\n          );\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        newCropTouch.dragHandle === null ||\r\n        typeof newCropTouch.dragHandle === 'undefined'\r\n      ) {\r\n        if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = this.center;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          newCropTouch.dragHandle.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCenter(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateClampBounds() {\r\n    const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n    const canvasAspect = this.canvas.height / this.canvas.width;\r\n    let w = this.canvas.width;\r\n    let h = this.canvas.height;\r\n    if (canvasAspect > sourceAspect) {\r\n      w = this.canvas.width;\r\n      h = this.canvas.width * sourceAspect;\r\n    } else {\r\n      h = this.canvas.height;\r\n      w = this.canvas.height / sourceAspect;\r\n    }\r\n    this.minXClamp = this.canvas.width / 2 - w / 2;\r\n    this.minYClamp = this.canvas.height / 2 - h / 2;\r\n    this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n    this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n  }\r\n\r\n  public getCropBounds() {\r\n    const bounds = this.getBounds();\r\n    bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\r\n    bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\r\n    bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n    bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n    return bounds;\r\n  }\r\n\r\n  public clampPosition(x: number, y: number) {\r\n    if (x < this.minXClamp) {\r\n      x = this.minXClamp;\r\n    }\r\n    if (x > this.maxXClamp) {\r\n      x = this.maxXClamp;\r\n    }\r\n    if (y < this.minYClamp) {\r\n      y = this.minYClamp;\r\n    }\r\n    if (y > this.maxYClamp) {\r\n      y = this.maxYClamp;\r\n    }\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public isImageSet() {\r\n    return this.imageSet;\r\n  }\r\n\r\n  public setImage(img: any) {\r\n    this.srcImage = img;\r\n    if (!img) {\r\n      this.imageSet = false;\r\n      this.draw(this.ctx);\r\n    } else {\r\n      this.imageSet = true;\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      const bufferContext = this.buffer.getContext(\r\n        '2d'\r\n      ) as CanvasRenderingContext2D;\r\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n\r\n      if (!this.cropperSettings.fileType) {\r\n        this.fileType = this.getDataUriMimeType(img.src);\r\n      }\r\n\r\n      if (this.cropperSettings.minWithRelativeToResolution) {\r\n        this.minWidth =\r\n          (this.canvas.width * this.cropperSettings.minWidth) /\r\n          this.srcImage.width;\r\n        this.minHeight =\r\n          (this.canvas.height * this.cropperSettings.minHeight) /\r\n          this.srcImage.height;\r\n      }\r\n\r\n      this.updateClampBounds();\r\n      this.canvasWidth = this.canvas.width;\r\n      this.canvasHeight = this.canvas.height;\r\n\r\n      const cropPosition: Point[] = this.getCropPositionFromMarkers();\r\n      this.setCropPosition(cropPosition);\r\n    }\r\n  }\r\n\r\n  public updateCropPosition(cropBounds: Bounds): void {\r\n    const cropPosition: Point[] = this.getCropPositionFromBounds(cropBounds);\r\n    this.setCropPosition(cropPosition);\r\n  }\r\n\r\n  private setCropPosition(cropPosition: Point[]): void {\r\n    this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n    this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n    this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n    this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n    this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n\r\n    for (const position of cropPosition) {\r\n      new PointPool().instance.returnPoint(position);\r\n    }\r\n\r\n    this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\r\n    this.draw(this.ctx);\r\n    this.croppedImage = this.getCroppedImageHelper(\r\n      false,\r\n      this.cropWidth,\r\n      this.cropHeight\r\n    );\r\n  }\r\n\r\n  private getCropPositionFromMarkers(): Point[] {\r\n    const w: number = this.canvas.width;\r\n    const h: number = this.canvas.height;\r\n    let tlPos: Point;\r\n    let trPos: Point;\r\n    let blPos: Point;\r\n    let brPos: Point;\r\n    let center: Point;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n    const cropBounds: Bounds = this.getBounds();\r\n    const cropAspect: number = cropBounds.height / cropBounds.width;\r\n    const cX: number = this.canvas.width / 2;\r\n    const cY: number = this.canvas.height / 2;\r\n\r\n    if (cropAspect > sourceAspect) {\r\n      const imageH = Math.min(w * sourceAspect, h);\r\n      const cropW = imageH / cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n    } else {\r\n      const imageW = Math.min(h / sourceAspect, w);\r\n      const cropH = imageW * cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n    }\r\n\r\n    center = new PointPool().instance.borrow(cX, cY);\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  private getCropPositionFromBounds(cropPosition: Bounds): Point[] {\r\n    let marginTop = 0;\r\n    let marginLeft = 0;\r\n    const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n\r\n    if (canvasAspect > sourceAspect) {\r\n      marginTop =\r\n        this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n    } else {\r\n      marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\r\n    }\r\n\r\n    const ratioW: number =\r\n      (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n    const ratioH: number =\r\n      (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n\r\n    let actualH: number = cropPosition.height * ratioH;\r\n    let actualW: number = cropPosition.width * ratioW;\r\n    const actualX: number = cropPosition.left * ratioW + marginLeft;\r\n    const actualY: number = cropPosition.top * ratioH + marginTop;\r\n\r\n    if (this.keepAspect) {\r\n      const scaledW: number = actualH / this.aspectRatio;\r\n      const scaledH: number = actualW * this.aspectRatio;\r\n\r\n      if (this.getCropBounds().height === cropPosition.height) {\r\n        // only width changed\r\n        actualH = scaledH;\r\n      } else if (this.getCropBounds().width === cropPosition.width) {\r\n        // only height changed\r\n        actualW = scaledW;\r\n      } else {\r\n        // height and width changed\r\n        if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n          actualW = scaledW;\r\n        } else {\r\n          actualH = scaledH;\r\n        }\r\n      }\r\n    }\r\n\r\n    const tlPos: Point = new PointPool().instance.borrow(\r\n      actualX,\r\n      actualY + actualH\r\n    );\r\n    const trPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY + actualH\r\n    );\r\n    const blPos: Point = new PointPool().instance.borrow(actualX, actualY);\r\n    const brPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY\r\n    );\r\n    const center: Point = new PointPool().instance.borrow(\r\n      actualX + actualW / 2,\r\n      actualY + actualH / 2\r\n    );\r\n\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  public getCroppedImageHelper(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    if (this.cropperSettings.cropOnResize) {\r\n      return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n    }\r\n    return this.croppedImage\r\n      ? this.croppedImage\r\n      : document.createElement('img');\r\n  }\r\n\r\n  // todo: Unused parameters?\r\n  public getCroppedImage(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (!this.srcImage) {\r\n      return document.createElement('img');\r\n    } else {\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvas.height / this.canvas.width;\r\n      let w: number = this.canvas.width;\r\n      let h: number = this.canvas.height;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvas.width;\r\n        h = this.canvas.width * sourceAspect;\r\n      } else {\r\n        if (canvasAspect < sourceAspect) {\r\n          h = this.canvas.height;\r\n          w = this.canvas.height / sourceAspect;\r\n        } else {\r\n          h = this.canvas.height;\r\n          w = this.canvas.width;\r\n        }\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      const offsetH: number = (this.buffer.height - h) / 2 / this.ratioH;\r\n      const offsetW: number = (this.buffer.width - w) / 2 / this.ratioW;\r\n\r\n      const ctx = this.cropCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n      if (this.cropperSettings.preserveSize || preserveSize) {\r\n        const width = Math.round(\r\n          bounds.right / this.ratioW - bounds.left / this.ratioW\r\n        );\r\n        const height = Math.round(\r\n          bounds.bottom / this.ratioH - bounds.top / this.ratioH\r\n        );\r\n\r\n        this.cropCanvas.width = width;\r\n        this.cropCanvas.height = height;\r\n\r\n        this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n        this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n      } else {\r\n        this.cropCanvas.width = this.cropWidth;\r\n        this.cropCanvas.height = this.cropHeight;\r\n      }\r\n\r\n      ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n      this.drawImageIOSFix(\r\n        ctx,\r\n        this.srcImage,\r\n        Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0),\r\n        Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\r\n        Math.max(Math.round(bounds.width / this.ratioW), 1),\r\n        Math.max(Math.round(bounds.height / this.ratioH), 1),\r\n        0,\r\n        0,\r\n        this.cropCanvas.width,\r\n        this.cropCanvas.height\r\n      );\r\n\r\n      if (this.cropperSettings.resampleFn) {\r\n        this.cropperSettings.resampleFn(this.cropCanvas);\r\n      }\r\n\r\n      this.croppedImage.width = this.cropCanvas.width;\r\n      this.croppedImage.height = this.cropCanvas.height;\r\n      this.croppedImage.src = this.cropCanvas.toDataURL(\r\n        this.fileType,\r\n        this.cropperSettings.compressRatio\r\n      );\r\n      return this.croppedImage;\r\n    }\r\n  }\r\n\r\n  public getBounds(): Bounds {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x < minX) {\r\n        minX = marker.position.x;\r\n      }\r\n      if (marker.position.x > maxX) {\r\n        maxX = marker.position.x;\r\n      }\r\n      if (marker.position.y < minY) {\r\n        minY = marker.position.y;\r\n      }\r\n      if (marker.position.y > maxY) {\r\n        maxY = marker.position.y;\r\n      }\r\n    }\r\n    const bounds: Bounds = new Bounds();\r\n    bounds.left = minX;\r\n    bounds.right = maxX;\r\n    bounds.top = minY;\r\n    bounds.bottom = maxY;\r\n    return bounds;\r\n  }\r\n\r\n  public setBounds(bounds: any) {\r\n    // const topLeft: CornerMarker;\r\n    // const topRight: CornerMarker;\r\n    // const bottomLeft: CornerMarker;\r\n    // const bottomRight: CornerMarker;\r\n\r\n    const currentBounds = this.getBounds();\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x === currentBounds.left) {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.left, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.left, bounds.bottom);\r\n        }\r\n      } else {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.right, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.right, bounds.bottom);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.center.recalculatePosition(bounds);\r\n    this.center.draw(this.ctx);\r\n    this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      if (event.touches.length === 1) {\r\n        if (this.isMouseDown) {\r\n          event.preventDefault();\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < event.touches.length; i++) {\r\n            const touch = event.touches[i];\r\n            const touchPosition = this.getTouchPos(this.canvas, touch);\r\n            const cropTouch = new CropTouch(\r\n              touchPosition.x,\r\n              touchPosition.y,\r\n              touch.identifier\r\n            );\r\n            new PointPool().instance.returnPoint(touchPosition);\r\n            this.move(cropTouch);\r\n          }\r\n        }\r\n      } else {\r\n        if (event.touches.length === 2) {\r\n          event.preventDefault();\r\n\r\n          const distance =\r\n            (event.touches[0].clientX - event.touches[1].clientX) *\r\n              (event.touches[0].clientX - event.touches[1].clientX) +\r\n            (event.touches[0].clientY - event.touches[1].clientY) *\r\n              (event.touches[0].clientY - event.touches[1].clientY);\r\n          if (this.previousDistance && this.previousDistance !== distance) {\r\n            const bounds = this.getBounds();\r\n\r\n            if (distance < this.previousDistance) {\r\n              bounds.top += 1;\r\n              bounds.left += 1;\r\n              bounds.right -= 1;\r\n              bounds.bottom -= 1;\r\n            }\r\n\r\n            if (distance > this.previousDistance) {\r\n              if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // none\r\n                bounds.top -= 1;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // left\r\n                bounds.top -= 1;\r\n                bounds.right += 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // right\r\n                bounds.top -= 1;\r\n                bounds.left -= 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom\r\n                bounds.top -= 2;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top left\r\n                bounds.right += 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // top right\r\n                bounds.left -= 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom left\r\n                bounds.top -= 2;\r\n                bounds.right += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // bottom right\r\n                bounds.top -= 2;\r\n                bounds.left -= 2;\r\n              }\r\n            }\r\n\r\n            if (bounds.top < this.minYClamp) {\r\n              bounds.top = this.minYClamp;\r\n            }\r\n            if (bounds.bottom > this.maxYClamp) {\r\n              bounds.bottom = this.maxYClamp;\r\n            }\r\n            if (bounds.left < this.minXClamp) {\r\n              bounds.left = this.minXClamp;\r\n            }\r\n            if (bounds.right > this.maxXClamp) {\r\n              bounds.right = this.maxXClamp;\r\n            }\r\n\r\n            this.setBounds(bounds);\r\n          }\r\n          this.previousDistance = distance;\r\n        }\r\n      }\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public onMouseMove(e: MouseEvent) {\r\n    if (this.crop.isImageSet() && this.isMouseDown) {\r\n      const mousePosition = this.getMousePos(this.canvas, e);\r\n      this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n      let dragTouch = this.getDragTouchForID(0);\r\n      if (dragTouch) {\r\n        dragTouch.x = mousePosition.x;\r\n        dragTouch.y = mousePosition.y;\r\n      } else {\r\n        dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n      }\r\n      new PointPool().instance.returnPoint(mousePosition);\r\n      this.drawCursors(dragTouch);\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public move(cropTouch: CropTouch) {\r\n    if (this.isMouseDown) {\r\n      this.handleMove(cropTouch);\r\n    }\r\n  }\r\n\r\n  public getDragTouchForID(id: any): CropTouch | undefined {\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n      if (id === this.currentDragTouches[i].id) {\r\n        return this.currentDragTouches[i];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public drawCursors(cropTouch: CropTouch) {\r\n    let cursorDrawn = false;\r\n    if (cropTouch != null) {\r\n      if (cropTouch.dragHandle === this.center) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n        cursorDrawn = true;\r\n      }\r\n      if (\r\n        cropTouch.dragHandle !== null &&\r\n        cropTouch.dragHandle instanceof CornerMarker\r\n      ) {\r\n        this.drawCornerCursor(\r\n          cropTouch.dragHandle,\r\n          cropTouch.dragHandle.position.x,\r\n          cropTouch.dragHandle.position.y\r\n        );\r\n        cursorDrawn = true;\r\n      }\r\n    }\r\n    let didDraw = false;\r\n    if (!cursorDrawn) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        didDraw =\r\n          didDraw ||\r\n          this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n      }\r\n      if (!didDraw) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'initial');\r\n      }\r\n    }\r\n    if (\r\n      !didDraw &&\r\n      !cursorDrawn &&\r\n      this.center.touchInBounds(cropTouch.x, cropTouch.y)\r\n    ) {\r\n      this.center.setOver(true);\r\n      this.imageCropperDataShare.setOver(this.canvas);\r\n      this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n    } else {\r\n      this.center.setOver(false);\r\n    }\r\n  }\r\n\r\n  public drawCornerCursor(marker: any, x: number, y: number) {\r\n    if (marker.touchInBounds(x, y)) {\r\n      marker.setOver(true);\r\n      if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        }\r\n      } else {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    marker.setOver(false);\r\n    return false;\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      const touch = event.touches[0];\r\n      const touchPosition = this.getTouchPos(this.canvas, touch);\r\n      const cropTouch = new CropTouch(\r\n        touchPosition.x,\r\n        touchPosition.y,\r\n        touch.identifier\r\n      );\r\n      new PointPool().instance.returnPoint(touchPosition);\r\n\r\n      this.isMouseDown = false;\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n          this.isMouseDown = true;\r\n        }\r\n      }\r\n      if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n        this.isMouseDown = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < event.changedTouches.length; i++) {\r\n        const touch = event.changedTouches[i];\r\n        const dragTouch = this.getDragTouchForID(touch.identifier);\r\n        if (dragTouch && dragTouch !== undefined) {\r\n          if (\r\n            dragTouch.dragHandle instanceof CornerMarker ||\r\n            dragTouch.dragHandle instanceof DragMarker\r\n          ) {\r\n            dragTouch.dragHandle.setOver(false);\r\n          }\r\n          this.handleRelease(dragTouch);\r\n        }\r\n      }\r\n\r\n      if (this.currentDragTouches.length === 0) {\r\n        this.isMouseDown = false;\r\n        this.currentlyInteracting = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n  public drawImageIOSFix(\r\n    ctx: CanvasRenderingContext2D,\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n    sx: number,\r\n    sy: number,\r\n    sw: number,\r\n    sh: number,\r\n    dx: number,\r\n    dy: number,\r\n    dw: number,\r\n    dh: number\r\n  ) {\r\n    // Works only if whole image is displayed:\r\n    // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n    // The following works correct also when only a part of the image is displayed:\r\n    // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n    // this.vertSquashRatio, dx, dy, dw, dh);\r\n    ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.isMouseDown = true;\r\n    }\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.imageCropperDataShare.setReleased(this.canvas);\r\n      this.isMouseDown = false;\r\n      this.handleRelease(new CropTouch(0, 0, 0));\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './bounds';\r\n\r\nexport class CropPosition {\r\n  public x: number;\r\n  public y: number;\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n    this.x = +x;\r\n    this.y = +y;\r\n    this.w = +w;\r\n    this.h = +h;\r\n  }\r\n\r\n  public toBounds(): Bounds {\r\n    return new Bounds(this.x, this.y, this.w, this.h);\r\n  }\r\n\r\n  public isInitialized(): boolean {\r\n    return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2,\r\n  SimpleChanges, Inject\r\n} from '@angular/core';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { ImageCropper } from './imageCropper';\r\nimport { CropPosition } from './model/cropPosition';\r\nimport { Bounds } from './model/bounds';\r\nimport { Exif } from './exif';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'img-cropper',\r\n  templateUrl: './image-cropper.component.html'\r\n})\r\nexport class ImageCropperComponent\r\n  implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('cropcanvas', { static: true })\r\n  cropcanvas: ElementRef;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  @Input() public settings: CropperSettings;\r\n  @Input() public image: any;\r\n  @Input() public inputImage: any;\r\n  @Input() public cropper: ImageCropper;\r\n  @Input() public cropPosition: CropPosition;\r\n  @Output()\r\n  public cropPositionChange: EventEmitter<CropPosition> = new EventEmitter<\r\n    CropPosition\r\n  >();\r\n\r\n  private exif = new Exif();\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() public onCrop: EventEmitter<any> = new EventEmitter();\r\n  @Output() imageSet: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public croppedWidth: number;\r\n  public croppedHeight: number;\r\n  public intervalRef: number;\r\n  public raf: number;\r\n  public renderer: Renderer2;\r\n  public windowListener: EventListenerObject;\r\n\r\n  private isCropPositionUpdateNeeded: boolean;\r\n  private dragUnsubscribers: (() => void)[] = [];\r\n\r\n  constructor(renderer: Renderer2,\r\n              @Inject(DOCUMENT) private document) {\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n\r\n    if (!this.settings) {\r\n      this.settings = new CropperSettings();\r\n    }\r\n\r\n    if (this.settings.cropperClass) {\r\n      this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n    }\r\n\r\n    if (!this.settings.dynamicSizing) {\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'width',\r\n        this.settings.canvasWidth.toString()\r\n      );\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'height',\r\n        this.settings.canvasHeight.toString()\r\n      );\r\n    } else {\r\n      this.windowListener = this.resize.bind(this);\r\n      window.addEventListener('resize', this.windowListener);\r\n    }\r\n\r\n    if (!this.cropper) {\r\n      this.cropper = new ImageCropper(this.settings);\r\n    }\r\n\r\n    this.cropper.prepare(canvas);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.isCropPositionChanged(changes)) {\r\n      this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n      if (this.cropper.isImageSet()) {\r\n        const bounds = this.cropper.getCropBounds();\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(bounds);\r\n      }\r\n      this.updateCropBounds();\r\n    }\r\n\r\n    if (changes.inputImage) {\r\n      this.setImage(changes.inputImage.currentValue);\r\n    }\r\n\r\n    if (changes.settings && this.cropper) {\r\n      this.cropper.updateSettings(this.settings);\r\n      if (this.cropper.isImageSet()) {\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(this.cropper.getCropBounds());\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.removeDragListeners();\r\n    if (this.settings.dynamicSizing && this.windowListener) {\r\n      window.removeEventListener('resize', this.windowListener);\r\n    }\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent): void {\r\n    this.cropper.onTouchMove(event);\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent): void {\r\n    this.cropper.onTouchStart(event);\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent): void {\r\n    this.cropper.onTouchEnd(event);\r\n    if (this.cropper.isImageSet()) {\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent): void {\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\r\n\r\n    this.cropper.onMouseDown(event);\r\n    // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\r\n    //   // load img\r\n    //   this.fileInput.nativeElement.click();\r\n    // }\r\n  }\r\n\r\n  private removeDragListeners() {\r\n    this.dragUnsubscribers.forEach(unsubscribe => unsubscribe());\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent): void {\r\n    this.removeDragListeners();\r\n    if (this.cropper.isImageSet()) {\r\n      this.cropper.onMouseUp(event);\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseMove(event: MouseEvent): void {\r\n    this.cropper.onMouseMove(event);\r\n  }\r\n\r\n  public fileChangeListener($event: any) {\r\n    if ($event.target.files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const file: File = $event.target.files[0];\r\n    if (this.settings.allowedFilesRegex.test(file.name)) {\r\n      const image: any = new Image();\r\n      const fileReader: FileReader = new FileReader();\r\n\r\n      fileReader.addEventListener('loadend', (loadEvent: any) => {\r\n        image.addEventListener('load', () => {\r\n          this.setImage(image);\r\n        });\r\n        image.src = loadEvent.target.result;\r\n      });\r\n\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  private resize() {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n    this.settings.canvasWidth = canvas.offsetWidth;\r\n    this.settings.canvasHeight = canvas.offsetHeight;\r\n    this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.cropper.reset();\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      this.settings.cropperClass\r\n    );\r\n    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n  }\r\n\r\n  public setImage(image: HTMLImageElement, newBounds: any = null) {\r\n    this.imageSet.emit(true);\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      `${this.settings.cropperClass} ${this.settings.croppingClass}`\r\n    );\r\n    this.raf = window.requestAnimationFrame(() => {\r\n      if (this.raf) {\r\n        window.cancelAnimationFrame(this.raf);\r\n      }\r\n      if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n        image.height = image.naturalHeight;\r\n        image.width = image.naturalWidth;\r\n\r\n        window.cancelAnimationFrame(this.raf);\r\n        this.getOrientedImage(image, (img: HTMLImageElement) => {\r\n          if (this.settings.dynamicSizing) {\r\n            const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n            this.settings.canvasWidth = canvas.offsetWidth;\r\n            this.settings.canvasHeight = canvas.offsetHeight;\r\n            this.cropper.resizeCanvas(\r\n              canvas.offsetWidth,\r\n              canvas.offsetHeight,\r\n              false\r\n            );\r\n          }\r\n\r\n          this.cropper.setImage(img);\r\n          if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n          }\r\n\r\n          this.image.original = img;\r\n          let bounds = this.cropper.getCropBounds();\r\n          this.image.image = this.cropper.getCroppedImageHelper().src;\r\n\r\n          if (!this.image) {\r\n            this.image = image;\r\n          }\r\n\r\n          if (newBounds != null) {\r\n            bounds = newBounds;\r\n            this.cropper.setBounds(bounds);\r\n            this.cropper.updateCropPosition(bounds);\r\n          }\r\n          this.onCrop.emit(bounds);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private isCropPositionChanged(changes: SimpleChanges): boolean {\r\n    if (\r\n      this.cropper &&\r\n      changes.cropPosition &&\r\n      this.isCropPositionUpdateNeeded\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.isCropPositionUpdateNeeded = true;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private updateCropBounds(): void {\r\n    const cropBound: Bounds = this.cropper.getCropBounds();\r\n    this.cropPositionChange.emit(\r\n      new CropPosition(\r\n        cropBound.left,\r\n        cropBound.top,\r\n        cropBound.width,\r\n        cropBound.height\r\n      )\r\n    );\r\n    this.isCropPositionUpdateNeeded = false;\r\n  }\r\n\r\n  private getOrientedImage(\r\n    image: HTMLImageElement,\r\n    callback: (img: HTMLImageElement) => void\r\n  ) {\r\n    let img: any;\r\n\r\n    this.exif.getData(image, () => {\r\n      const orientation = this.exif.getTag(image, 'Orientation');\r\n\r\n      if ([3, 6, 8].indexOf(orientation) > -1) {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        const ctx: CanvasRenderingContext2D = canvas.getContext(\r\n          '2d'\r\n        ) as CanvasRenderingContext2D;\r\n        let cw: number = image.width;\r\n        let ch: number = image.height;\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let deg = 0;\r\n\r\n        switch (orientation) {\r\n          case 3:\r\n            cx = -image.width;\r\n            cy = -image.height;\r\n            deg = 180;\r\n            break;\r\n          case 6:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cy = -image.height;\r\n            deg = 90;\r\n            break;\r\n          case 8:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cx = -image.width;\r\n            deg = 270;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        canvas.width = cw;\r\n        canvas.height = ch;\r\n        ctx.rotate((deg * Math.PI) / 180);\r\n        ctx.drawImage(image, cx, cy);\r\n        img = document.createElement('img');\r\n        img.width = cw;\r\n        img.height = ch;\r\n        img.addEventListener('load', () => {\r\n          callback(img);\r\n        });\r\n        img.src = canvas.toDataURL('image/png');\r\n      } else {\r\n        img = image;\r\n        callback(img);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageCropperComponent } from './image-cropper.component';\n\n@NgModule({\n  declarations: [ImageCropperComponent],\n  exports: [ImageCropperComponent],\n  imports: [CommonModule]\n})\nexport class ImageCropperModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageCropperService {\n  constructor() {}\n}\n","// looks like this CropService is never used\r\nexport class CropService {\r\n  public canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n\r\n  public init(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n}\r\n","/*\n * Public API Surface of ngx-img-cropper\n */\n\nexport * from './lib/image-cropper/cropper-draw-settings';\nexport * from './lib/image-cropper/cropper-settings';\nexport * from './lib/image-cropper/exif';\nexport * from './lib/image-cropper/image-cropper.component';\nexport * from './lib/image-cropper/image-cropper.module';\nexport * from './lib/image-cropper/image-cropper.service';\nexport * from './lib/image-cropper/imageCropper';\nexport * from './lib/image-cropper/imageCropperDataShare';\nexport * from './lib/image-cropper/model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ImageCropperModel as Éµa} from './lib/image-cropper/model/imageCropperModel';"]},"metadata":{},"sourceType":"module"}