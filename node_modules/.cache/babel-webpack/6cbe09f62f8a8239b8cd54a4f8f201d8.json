{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @constructor  module:echarts/coord/single/SingleAxis\r\n * @extends {module:echarts/coord/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\n\n\nvar SingleAxis = function SingleAxis(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\r\n   * Axis type\r\n   * - 'category'\r\n   * - 'value'\r\n   * - 'time'\r\n   * - 'log'\r\n   * @type {string}\r\n   */\n\n  this.type = axisType || 'value';\n  /**\r\n   * Axis position\r\n   *  - 'top'\r\n   *  - 'bottom'\r\n   *  - 'left'\r\n   *  - 'right'\r\n   *  @type {string}\r\n   */\n\n  this.position = position || 'bottom';\n  /**\r\n   * Axis orient\r\n   *  - 'horizontal'\r\n   *  - 'vertical'\r\n   * @type {[type]}\r\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\r\n   * Axis model\r\n   * @type {module:echarts/coord/single/AxisModel}\r\n   */\n  model: null,\n\n  /**\r\n   * Judge the orient of the axis.\r\n   * @return {boolean}\r\n   */\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\r\n   * @override\r\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\r\n   * Convert the local coord(processed by dataToCoord())\r\n   * to global coord(concrete pixel coord).\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\n  toGlobalCoord: null,\n\n  /**\r\n   * Convert the global coord to local coord.\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/single/SingleAxis.js"],"names":["zrUtil","require","Axis","SingleAxis","dim","scale","coordExtent","axisType","position","call","type","orient","prototype","constructor","model","isHorizontal","pointToData","point","clamp","coordinateSystem","toGlobalCoord","toLocalCoord","inherits","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAG,SAAbA,UAAa,CAAUC,GAAV,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuD;AACtEN,EAAAA,IAAI,CAACO,IAAL,CAAU,IAAV,EAAgBL,GAAhB,EAAqBC,KAArB,EAA4BC,WAA5B;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAKI,IAAL,GAAYH,QAAQ,IAAI,OAAxB;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAKC,QAAL,GAAgBA,QAAQ,IAAI,QAA5B;AACA;AACF;AACA;AACA;AACA;AACA;;AAEE,OAAKG,MAAL,GAAc,IAAd;AACD,CA9BD;;AAgCAR,UAAU,CAACS,SAAX,GAAuB;AACrBC,EAAAA,WAAW,EAAEV,UADQ;;AAGrB;AACF;AACA;AACA;AACEW,EAAAA,KAAK,EAAE,IAPc;;AASrB;AACF;AACA;AACA;AACEC,EAAAA,YAAY,EAAE,wBAAY;AACxB,QAAIP,QAAQ,GAAG,KAAKA,QAApB;AACA,WAAOA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAA1C;AACD,GAhBoB;;AAkBrB;AACF;AACA;AACEQ,EAAAA,WAAW,EAAE,qBAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACnC,WAAO,KAAKC,gBAAL,CAAsBH,WAAtB,CAAkCC,KAAlC,EAAyCC,KAAzC,EAAgD,CAAhD,CAAP;AACD,GAvBoB;;AAyBrB;AACF;AACA;AACA;AACA;AACA;AACEE,EAAAA,aAAa,EAAE,IA/BM;;AAiCrB;AACF;AACA;AACA;AACA;AACEC,EAAAA,YAAY,EAAE;AAtCO,CAAvB;AAwCArB,MAAM,CAACsB,QAAP,CAAgBnB,UAAhB,EAA4BD,IAA5B;AACA,IAAIqB,QAAQ,GAAGpB,UAAf;AACAqB,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @constructor  module:echarts/coord/single/SingleAxis\r\n * @extends {module:echarts/coord/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\r\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   * - 'category'\r\n   * - 'value'\r\n   * - 'time'\r\n   * - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * Axis position\r\n   *  - 'top'\r\n   *  - 'bottom'\r\n   *  - 'left'\r\n   *  - 'right'\r\n   *  @type {string}\r\n   */\r\n\r\n  this.position = position || 'bottom';\r\n  /**\r\n   * Axis orient\r\n   *  - 'horizontal'\r\n   *  - 'vertical'\r\n   * @type {[type]}\r\n   */\r\n\r\n  this.orient = null;\r\n};\r\n\r\nSingleAxis.prototype = {\r\n  constructor: SingleAxis,\r\n\r\n  /**\r\n   * Axis model\r\n   * @type {module:echarts/coord/single/AxisModel}\r\n   */\r\n  model: null,\r\n\r\n  /**\r\n   * Judge the orient of the axis.\r\n   * @return {boolean}\r\n   */\r\n  isHorizontal: function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.coordinateSystem.pointToData(point, clamp)[0];\r\n  },\r\n\r\n  /**\r\n   * Convert the local coord(processed by dataToCoord())\r\n   * to global coord(concrete pixel coord).\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\r\n  toGlobalCoord: null,\r\n\r\n  /**\r\n   * Convert the global coord to local coord.\r\n   * designated by module:echarts/coord/single/Single.\r\n   * @type {Function}\r\n   */\r\n  toLocalCoord: null\r\n};\r\nzrUtil.inherits(SingleAxis, Axis);\r\nvar _default = SingleAxis;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}