{"ast":null,"code":"module.exports = function (hljs) {\n  // Since there are numerous special names in Julia, it is too much trouble\n  // to maintain them by hand. Hence these names (i.e. keywords, literals and\n  // built-ins) are automatically generated from Julia v0.6 itself through\n  // the following scripts for each.\n  var KEYWORDS = {\n    // # keyword generator, multi-word keywords handled manually below\n    // foreach(println, [\"in\", \"isa\", \"where\"])\n    // for kw in Base.REPLCompletions.complete_keyword(\"\")\n    //     if !(contains(kw, \" \") || kw == \"struct\")\n    //         println(kw)\n    //     end\n    // end\n    keyword: 'in isa where ' + 'baremodule begin break catch ccall const continue do else elseif end export false finally for function ' + 'global if import importall let local macro module quote return true try using while ' + // legacy, to be deprecated in the next release\n    'type immutable abstract bitstype typealias ',\n    // # literal generator\n    // println(\"true\")\n    // println(\"false\")\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)\n    //             println(name)\n    //         end\n    //     end\n    // end\n    literal: 'true false ' + 'ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort ' + 'NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway ' + 'RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im ' + 'nothing pi γ π φ ',\n    // # built_in generator:\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if v isa Type || v isa TypeVar\n    //             println(name)\n    //         end\n    //     end\n    // end\n    built_in: 'ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet ' + 'AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat ' + 'AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal ' + 'BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException ' + 'CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager ' + 'Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix ' + 'ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t ' + 'Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict ' + 'DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate ' + 'ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function ' + 'Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear ' + 'IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException ' + 'InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix ' + 'MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict ' + 'OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe ' + 'PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD ' + 'ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode ' + 'RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed ' + 'SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange ' + 'StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal ' + 'Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry ' + 'TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError ' + 'UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector ' + 'VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool '\n  }; // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\n\n  var VARIABLE_NAME_RE = \"[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*\"; // placeholder for recursive self-reference\n\n  var DEFAULT = {\n    lexemes: VARIABLE_NAME_RE,\n    keywords: KEYWORDS,\n    illegal: /<\\//\n  }; // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\n\n  var NUMBER = {\n    className: 'number',\n    // supported numeric literals:\n    //  * binary literal (e.g. 0x10)\n    //  * octal literal (e.g. 0o76543210)\n    //  * hexadecimal literal (e.g. 0xfedcba876543210)\n    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n    //  * decimal literal (e.g. 9876543210, 100_000_000)\n    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n    relevance: 0\n  };\n  var CHAR = {\n    className: 'string',\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n  };\n  var INTERPOLATION = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS\n  };\n  var INTERPOLATED_VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + VARIABLE_NAME_RE\n  }; // TODO: neatly escape normal code in string literal\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    variants: [{\n      begin: /\\w*\"\"\"/,\n      end: /\"\"\"\\w*/,\n      relevance: 10\n    }, {\n      begin: /\\w*\"/,\n      end: /\"\\w*/\n    }]\n  };\n  var COMMAND = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    begin: '`',\n    end: '`'\n  };\n  var MACROCALL = {\n    className: 'meta',\n    begin: '@' + VARIABLE_NAME_RE\n  };\n  var COMMENT = {\n    className: 'comment',\n    variants: [{\n      begin: '#=',\n      end: '=#',\n      relevance: 10\n    }, {\n      begin: '#',\n      end: '$'\n    }]\n  };\n  DEFAULT.contains = [NUMBER, CHAR, STRING, COMMAND, MACROCALL, COMMENT, hljs.HASH_COMMENT_MODE, {\n    className: 'keyword',\n    begin: '\\\\b(((abstract|primitive)\\\\s+)type|(mutable\\\\s+)?struct)\\\\b'\n  }, {\n    begin: /<:/\n  } // relevance booster\n  ];\n  INTERPOLATION.contains = DEFAULT.contains;\n  return DEFAULT;\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/julia.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","VARIABLE_NAME_RE","DEFAULT","lexemes","keywords","illegal","NUMBER","className","begin","relevance","CHAR","INTERPOLATION","end","INTERPOLATED_VARIABLE","STRING","contains","BACKSLASH_ESCAPE","variants","COMMAND","MACROCALL","COMMENT","HASH_COMMENT_MODE"],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\r\n  // Since there are numerous special names in Julia, it is too much trouble\r\n  // to maintain them by hand. Hence these names (i.e. keywords, literals and\r\n  // built-ins) are automatically generated from Julia v0.6 itself through\r\n  // the following scripts for each.\r\n\r\n  var KEYWORDS = {\r\n    // # keyword generator, multi-word keywords handled manually below\r\n    // foreach(println, [\"in\", \"isa\", \"where\"])\r\n    // for kw in Base.REPLCompletions.complete_keyword(\"\")\r\n    //     if !(contains(kw, \" \") || kw == \"struct\")\r\n    //         println(kw)\r\n    //     end\r\n    // end\r\n    keyword:\r\n      'in isa where ' +\r\n      'baremodule begin break catch ccall const continue do else elseif end export false finally for function ' +\r\n      'global if import importall let local macro module quote return true try using while ' +\r\n      // legacy, to be deprecated in the next release\r\n      'type immutable abstract bitstype typealias ',\r\n\r\n    // # literal generator\r\n    // println(\"true\")\r\n    // println(\"false\")\r\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\r\n    //     try\r\n    //         v = eval(Symbol(name))\r\n    //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)\r\n    //             println(name)\r\n    //         end\r\n    //     end\r\n    // end\r\n    literal:\r\n      'true false ' +\r\n      'ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort ' +\r\n      'NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway ' +\r\n      'RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im ' +\r\n      'nothing pi γ π φ ',\r\n\r\n    // # built_in generator:\r\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\r\n    //     try\r\n    //         v = eval(Symbol(name))\r\n    //         if v isa Type || v isa TypeVar\r\n    //             println(name)\r\n    //         end\r\n    //     end\r\n    // end\r\n    built_in:\r\n      'ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet ' +\r\n      'AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat ' +\r\n      'AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal '+\r\n      'BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException ' +\r\n      'CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager ' +\r\n      'Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix ' +\r\n      'ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t ' +\r\n      'Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict ' +\r\n      'DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate ' +\r\n      'ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function ' +\r\n      'Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear ' +\r\n      'IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException ' +\r\n      'InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix ' +\r\n      'MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict ' +\r\n      'OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe ' +\r\n      'PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD ' +\r\n      'ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode ' +\r\n      'RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed ' +\r\n      'SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange ' +\r\n      'StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal ' +\r\n      'Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry ' +\r\n      'TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError ' +\r\n      'UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector ' +\r\n      'VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool '\r\n  };\r\n\r\n  // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\r\n  var VARIABLE_NAME_RE = '[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*';\r\n\r\n  // placeholder for recursive self-reference\r\n  var DEFAULT = {\r\n    lexemes: VARIABLE_NAME_RE, keywords: KEYWORDS, illegal: /<\\//\r\n  };\r\n\r\n  // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\r\n  var NUMBER = {\r\n    className: 'number',\r\n    // supported numeric literals:\r\n    //  * binary literal (e.g. 0x10)\r\n    //  * octal literal (e.g. 0o76543210)\r\n    //  * hexadecimal literal (e.g. 0xfedcba876543210)\r\n    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\r\n    //  * decimal literal (e.g. 9876543210, 100_000_000)\r\n    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\r\n    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\r\n    relevance: 0\r\n  };\r\n\r\n  var CHAR = {\r\n    className: 'string',\r\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\r\n  };\r\n\r\n  var INTERPOLATION = {\r\n    className: 'subst',\r\n    begin: /\\$\\(/, end: /\\)/,\r\n    keywords: KEYWORDS\r\n  };\r\n\r\n  var INTERPOLATED_VARIABLE = {\r\n    className: 'variable',\r\n    begin: '\\\\$' + VARIABLE_NAME_RE\r\n  };\r\n\r\n  // TODO: neatly escape normal code in string literal\r\n  var STRING = {\r\n    className: 'string',\r\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\r\n    variants: [\r\n      { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/, relevance: 10 },\r\n      { begin: /\\w*\"/, end: /\"\\w*/ }\r\n    ]\r\n  };\r\n\r\n  var COMMAND = {\r\n    className: 'string',\r\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\r\n    begin: '`', end: '`'\r\n  };\r\n\r\n  var MACROCALL = {\r\n    className: 'meta',\r\n    begin: '@' + VARIABLE_NAME_RE\r\n  };\r\n\r\n  var COMMENT = {\r\n    className: 'comment',\r\n    variants: [\r\n      { begin: '#=', end: '=#', relevance: 10 },\r\n      { begin: '#', end: '$' }\r\n    ]\r\n  };\r\n\r\n  DEFAULT.contains = [\r\n    NUMBER,\r\n    CHAR,\r\n    STRING,\r\n    COMMAND,\r\n    MACROCALL,\r\n    COMMENT,\r\n    hljs.HASH_COMMENT_MODE,\r\n    {\r\n      className: 'keyword',\r\n      begin:\r\n        '\\\\b(((abstract|primitive)\\\\s+)type|(mutable\\\\s+)?struct)\\\\b'\r\n    },\r\n    {begin: /<:/}  // relevance booster\r\n  ];\r\n  INTERPOLATION.contains = DEFAULT.contains;\r\n\r\n  return DEFAULT;\r\n};"]},"metadata":{},"sourceType":"script"}