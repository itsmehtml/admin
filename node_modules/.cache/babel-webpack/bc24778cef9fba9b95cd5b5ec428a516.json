{"ast":null,"code":"module.exports = function (hljs) {\n  var TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*',\n\n    /* no leading zeros */\n    relevance: 0\n  };\n  var TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  var TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' + 'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, TPLABEL]\n  };\n  var TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, hljs.QUOTE_STRING_MODE,\n    /* for pos section at bottom */\n    TPLABEL]\n  };\n  return {\n    keywords: {\n      keyword: 'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' + 'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' + 'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' + 'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' + 'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' + 'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\n      literal: 'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\n    },\n    contains: [TPDATA, TPIO, {\n      className: 'keyword',\n      begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n    }, {\n      /* this is for cases like ,CALL */\n      className: 'keyword',\n      begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n    }, {\n      /* this is for cases like CNT100 where the default lexemes do not\r\n       * separate the keyword and the number */\n      className: 'keyword',\n      begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n    }, {\n      /* to catch numbers that do not have a word boundary on the left */\n      className: 'number',\n      begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n      relevance: 0\n    }, hljs.COMMENT('//', '[;$]'), hljs.COMMENT('!', '[;$]'), hljs.COMMENT('--eg:', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'string',\n      begin: '\\'',\n      end: '\\''\n    }, hljs.C_NUMBER_MODE, {\n      className: 'variable',\n      begin: '\\\\$[A-Za-z0-9_]+'\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/tp.js"],"names":["module","exports","hljs","TPID","className","begin","relevance","TPLABEL","TPDATA","end","contains","TPIO","QUOTE_STRING_MODE","keywords","keyword","literal","COMMENT","C_NUMBER_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,KAAK,EAAE,aAFE;;AAEa;AACtBC,IAAAA,SAAS,EAAE;AAHF,GAAX;AAKA,MAAIC,OAAO,GAAG;AACZH,IAAAA,SAAS,EAAE,QADC;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAAd;AAIA,MAAIG,MAAM,GAAG;AACXJ,IAAAA,SAAS,EAAE,UADA;AAEXC,IAAAA,KAAK,EAAE,sEACP,yDAHW;AAGgDI,IAAAA,GAAG,EAAE,KAHrD;AAIXC,IAAAA,QAAQ,EAAE,CACR,MADQ,EAERP,IAFQ,EAGRI,OAHQ;AAJC,GAAb;AAUA,MAAII,IAAI,GAAG;AACTP,IAAAA,SAAS,EAAE,UADF;AAETC,IAAAA,KAAK,EAAE,4CAFE;AAE4CI,IAAAA,GAAG,EAAE,KAFjD;AAGTC,IAAAA,QAAQ,EAAE,CACR,MADQ,EAERP,IAFQ,EAGRD,IAAI,CAACU,iBAHG;AAGgB;AACxBL,IAAAA,OAJQ;AAHD,GAAX;AAWA,SAAO;AACLM,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,0EACA,sEADA,GAEA,qEAFA,GAGA,iEAHA,GAIA,wEAJA,GAKA,yCAPM;AAQRC,MAAAA,OAAO,EACL;AATM,KADL;AAYLL,IAAAA,QAAQ,EAAE,CACRF,MADQ,EAERG,IAFQ,EAGR;AACEP,MAAAA,SAAS,EAAE,SADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAHQ,EAOR;AACE;AACAD,MAAAA,SAAS,EAAE,SAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAPQ,EAYR;AACE;AACR;AACQD,MAAAA,SAAS,EAAE,SAHb;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAZQ,EAkBR;AACE;AACAD,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,KAAK,EAAE,4DAHT;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAlBQ,EAwBRJ,IAAI,CAACc,OAAL,CAAa,IAAb,EAAmB,MAAnB,CAxBQ,EAyBRd,IAAI,CAACc,OAAL,CAAa,GAAb,EAAkB,MAAlB,CAzBQ,EA0BRd,IAAI,CAACc,OAAL,CAAa,OAAb,EAAsB,GAAtB,CA1BQ,EA2BRd,IAAI,CAACU,iBA3BG,EA4BR;AACER,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAEeI,MAAAA,GAAG,EAAE;AAFpB,KA5BQ,EAgCRP,IAAI,CAACe,aAhCG,EAiCR;AACEb,MAAAA,SAAS,EAAE,UADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAjCQ;AAZL,GAAP;AAmDD,CAlFD","sourcesContent":["module.exports = function(hljs) {\r\n  var TPID = {\r\n    className: 'number',\r\n    begin: '[1-9][0-9]*', /* no leading zeros */\r\n    relevance: 0\r\n  };\r\n  var TPLABEL = {\r\n    className: 'symbol',\r\n    begin: ':[^\\\\]]+'\r\n  };\r\n  var TPDATA = {\r\n    className: 'built_in',\r\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\r\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[', end: '\\\\]',\r\n    contains: [\r\n      'self',\r\n      TPID,\r\n      TPLABEL\r\n    ]\r\n  };\r\n  var TPIO = {\r\n    className: 'built_in',\r\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[', end: '\\\\]',\r\n    contains: [\r\n      'self',\r\n      TPID,\r\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\r\n      TPLABEL\r\n    ]\r\n  };\r\n\r\n  return {\r\n    keywords: {\r\n      keyword:\r\n        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\r\n        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\r\n        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\r\n        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\r\n        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\r\n        'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\r\n      literal:\r\n        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\r\n    },\r\n    contains: [\r\n      TPDATA,\r\n      TPIO,\r\n      {\r\n        className: 'keyword',\r\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\r\n      },\r\n      {\r\n        /* this is for cases like ,CALL */\r\n        className: 'keyword',\r\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\r\n      },\r\n      {\r\n        /* this is for cases like CNT100 where the default lexemes do not\r\n         * separate the keyword and the number */\r\n        className: 'keyword',\r\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\r\n      },\r\n      {\r\n        /* to catch numbers that do not have a word boundary on the left */\r\n        className: 'number',\r\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\r\n        relevance: 0\r\n      },\r\n      hljs.COMMENT('//', '[;$]'),\r\n      hljs.COMMENT('!', '[;$]'),\r\n      hljs.COMMENT('--eg:', '$'),\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'string',\r\n        begin: '\\'', end: '\\''\r\n      },\r\n      hljs.C_NUMBER_MODE,\r\n      {\r\n        className: 'variable',\r\n        begin: '\\\\$[A-Za-z0-9_]+'\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}