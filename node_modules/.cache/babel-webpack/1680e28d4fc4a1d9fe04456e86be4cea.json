{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar completeDimensions = require(\"./completeDimensions\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * Substitute `completeDimensions`.\r\n * `completeDimensions` is to be deprecated.\r\n */\n\n/**\r\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\r\n * @param {Object|Array} [opt]\r\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\r\n * @param {number} [opt.dimensionsCount]\r\n * @param {string} [opt.generateCoord]\r\n * @param {string} [opt.generateCoordCount]\r\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\r\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\r\n * @param {Function} [opt.encodeDefaulter] Make default encode if user not specified.\r\n * @return {Array.<Object>} dimensionsInfo\r\n */\n\n\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    encodeDefaulter: opt.encodeDefaulter,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/data/helper/createDimensions.js"],"names":["completeDimensions","require","_default","source","opt","coordDimensions","dimsDef","dimensionsDefine","encodeDef","encodeDefine","dimCount","dimensionsCount","encodeDefaulter","generateCoord","generateCoordCount","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,GAA1B,EAA+B;AAC7BA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,SAAOJ,kBAAkB,CAACI,GAAG,CAACC,eAAJ,IAAuB,EAAxB,EAA4BF,MAA5B,EAAoC;AAC3DG,IAAAA,OAAO,EAAEF,GAAG,CAACG,gBAAJ,IAAwBJ,MAAM,CAACI,gBADmB;AAE3DC,IAAAA,SAAS,EAAEJ,GAAG,CAACK,YAAJ,IAAoBN,MAAM,CAACM,YAFqB;AAG3DC,IAAAA,QAAQ,EAAEN,GAAG,CAACO,eAH6C;AAI3DC,IAAAA,eAAe,EAAER,GAAG,CAACQ,eAJsC;AAK3DC,IAAAA,aAAa,EAAET,GAAG,CAACS,aALwC;AAM3DC,IAAAA,kBAAkB,EAAEV,GAAG,CAACU;AANmC,GAApC,CAAzB;AAQD;;AAEDC,MAAM,CAACC,OAAP,GAAiBd,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar completeDimensions = require(\"./completeDimensions\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Substitute `completeDimensions`.\r\n * `completeDimensions` is to be deprecated.\r\n */\r\n\r\n/**\r\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\r\n * @param {Object|Array} [opt]\r\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\r\n * @param {number} [opt.dimensionsCount]\r\n * @param {string} [opt.generateCoord]\r\n * @param {string} [opt.generateCoordCount]\r\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\r\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\r\n * @param {Function} [opt.encodeDefaulter] Make default encode if user not specified.\r\n * @return {Array.<Object>} dimensionsInfo\r\n */\r\nfunction _default(source, opt) {\r\n  opt = opt || {};\r\n  return completeDimensions(opt.coordDimensions || [], source, {\r\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\r\n    encodeDef: opt.encodeDefine || source.encodeDefine,\r\n    dimCount: opt.dimensionsCount,\r\n    encodeDefaulter: opt.encodeDefaulter,\r\n    generateCoord: opt.generateCoord,\r\n    generateCoordCount: opt.generateCoordCount\r\n  });\r\n}\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}