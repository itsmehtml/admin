{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * Parallel coordinate system creater.\r\n */\n\n\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/parallel/parallelCreator.js"],"names":["Parallel","require","CoordinateSystem","create","ecModel","api","coordSysList","eachComponent","parallelModel","idx","coordSys","name","resize","coordinateSystem","model","push","eachSeries","seriesModel","get","queryComponents","mainType","index","id","register"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,wBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,OAAhB,EAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,YAAY,GAAG,EAAnB;AACAF,EAAAA,OAAO,CAACG,aAAR,CAAsB,UAAtB,EAAkC,UAAUC,aAAV,EAAyBC,GAAzB,EAA8B;AAC9D,QAAIC,QAAQ,GAAG,IAAIV,QAAJ,CAAaQ,aAAb,EAA4BJ,OAA5B,EAAqCC,GAArC,CAAf;AACAK,IAAAA,QAAQ,CAACC,IAAT,GAAgB,cAAcF,GAA9B;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgBJ,aAAhB,EAA+BH,GAA/B;AACAG,IAAAA,aAAa,CAACK,gBAAd,GAAiCH,QAAjC;AACAA,IAAAA,QAAQ,CAACI,KAAT,GAAiBN,aAAjB;AACAF,IAAAA,YAAY,CAACS,IAAb,CAAkBL,QAAlB;AACD,GAPD,EAF4B,CASxB;;AAEJN,EAAAA,OAAO,CAACY,UAAR,CAAmB,UAAUC,WAAV,EAAuB;AACxC,QAAIA,WAAW,CAACC,GAAZ,CAAgB,kBAAhB,MAAwC,UAA5C,EAAwD;AACtD,UAAIV,aAAa,GAAGJ,OAAO,CAACe,eAAR,CAAwB;AAC1CC,QAAAA,QAAQ,EAAE,UADgC;AAE1CC,QAAAA,KAAK,EAAEJ,WAAW,CAACC,GAAZ,CAAgB,eAAhB,CAFmC;AAG1CI,QAAAA,EAAE,EAAEL,WAAW,CAACC,GAAZ,CAAgB,YAAhB;AAHsC,OAAxB,EAIjB,CAJiB,CAApB;AAKAD,MAAAA,WAAW,CAACJ,gBAAZ,GAA+BL,aAAa,CAACK,gBAA7C;AACD;AACF,GATD;AAUA,SAAOP,YAAP;AACD;;AAEDJ,gBAAgB,CAACqB,QAAjB,CAA0B,UAA1B,EAAsC;AACpCpB,EAAAA,MAAM,EAAEA;AAD4B,CAAtC","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Parallel = require(\"./Parallel\");\r\n\r\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parallel coordinate system creater.\r\n */\r\nfunction create(ecModel, api) {\r\n  var coordSysList = [];\r\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\r\n    var coordSys = new Parallel(parallelModel, ecModel, api);\r\n    coordSys.name = 'parallel_' + idx;\r\n    coordSys.resize(parallelModel, api);\r\n    parallelModel.coordinateSystem = coordSys;\r\n    coordSys.model = parallelModel;\r\n    coordSysList.push(coordSys);\r\n  }); // Inject the coordinateSystems into seriesModel\r\n\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\r\n      var parallelModel = ecModel.queryComponents({\r\n        mainType: 'parallel',\r\n        index: seriesModel.get('parallelIndex'),\r\n        id: seriesModel.get('parallelId')\r\n      })[0];\r\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\r\n    }\r\n  });\r\n  return coordSysList;\r\n}\r\n\r\nCoordinateSystem.register('parallel', {\r\n  create: create\r\n});"]},"metadata":{},"sourceType":"script"}