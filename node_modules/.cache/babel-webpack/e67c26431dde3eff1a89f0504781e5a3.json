{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nfunction getNodeGlobalScale(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys.type !== 'view') {\n    return 1;\n  }\n\n  var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\n  var groupScale = coordSys.scale;\n  var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n  var roamZoom = coordSys.getZoom();\n  var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n  return nodeScale / groupZoom;\n}\n\nfunction getSymbolSize(node) {\n  var symbolSize = node.getVisual('symbolSize');\n\n  if (symbolSize instanceof Array) {\n    symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n  }\n\n  return +symbolSize;\n}\n\nexports.getNodeGlobalScale = getNodeGlobalScale;\nexports.getSymbolSize = getSymbolSize;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/graph/graphHelper.js"],"names":["getNodeGlobalScale","seriesModel","coordSys","coordinateSystem","type","nodeScaleRatio","option","groupScale","scale","groupZoom","roamZoom","getZoom","nodeScale","getSymbolSize","node","symbolSize","getVisual","Array","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,CAA4BC,WAA5B,EAAyC;AACvC,MAAIC,QAAQ,GAAGD,WAAW,CAACE,gBAA3B;;AAEA,MAAID,QAAQ,CAACE,IAAT,KAAkB,MAAtB,EAA8B;AAC5B,WAAO,CAAP;AACD;;AAED,MAAIC,cAAc,GAAGJ,WAAW,CAACK,MAAZ,CAAmBD,cAAxC;AACA,MAAIE,UAAU,GAAGL,QAAQ,CAACM,KAA1B;AACA,MAAIC,SAAS,GAAGF,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAxB,IAA+B,CAA/C,CATuC,CASW;;AAElD,MAAIG,QAAQ,GAAGR,QAAQ,CAACS,OAAT,EAAf;AACA,MAAIC,SAAS,GAAG,CAACF,QAAQ,GAAG,CAAZ,IAAiBL,cAAjB,GAAkC,CAAlD;AACA,SAAOO,SAAS,GAAGH,SAAnB;AACD;;AAED,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,UAAU,GAAGD,IAAI,CAACE,SAAL,CAAe,YAAf,CAAjB;;AAEA,MAAID,UAAU,YAAYE,KAA1B,EAAiC;AAC/BF,IAAAA,UAAU,GAAG,CAACA,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA3B,IAAkC,CAA/C;AACD;;AAED,SAAO,CAACA,UAAR;AACD;;AAEDG,OAAO,CAAClB,kBAAR,GAA6BA,kBAA7B;AACAkB,OAAO,CAACL,aAAR,GAAwBA,aAAxB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction getNodeGlobalScale(seriesModel) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys.type !== 'view') {\r\n    return 1;\r\n  }\r\n\r\n  var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\r\n  var groupScale = coordSys.scale;\r\n  var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\r\n\r\n  var roamZoom = coordSys.getZoom();\r\n  var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n  return nodeScale / groupZoom;\r\n}\r\n\r\nfunction getSymbolSize(node) {\r\n  var symbolSize = node.getVisual('symbolSize');\r\n\r\n  if (symbolSize instanceof Array) {\r\n    symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\r\n  }\r\n\r\n  return +symbolSize;\r\n}\r\n\r\nexports.getNodeGlobalScale = getNodeGlobalScale;\r\nexports.getSymbolSize = getSymbolSize;"]},"metadata":{},"sourceType":"script"}