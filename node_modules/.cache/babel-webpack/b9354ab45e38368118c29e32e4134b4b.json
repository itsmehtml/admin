{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * Provide effect for line\r\n * @module echarts/chart/helper/EffectLine\r\n */\n\n/**\r\n * @constructor\r\n * @extends {module:echarts/chart/helper/EffectLine}\r\n * @alias {module:echarts/chart/helper/Polyline}\r\n */\n\n\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/helper/EffectPolyline.js"],"names":["Polyline","require","zrUtil","EffectLine","vec2","EffectPolyline","lineData","idx","seriesScope","call","_lastFrame","_lastFramePercent","effectPolylineProto","prototype","createLine","updateAnimationPoints","symbol","points","_points","accLenArr","len","i","length","p1","p2","dist","push","_offsets","_length","getLineLength","updateSymbolPosition","t","__t","offsets","lastFrame","frame","start","Math","min","lerp","position","tx","ty","rotation","atan2","PI","ignore","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar Polyline = require(\"./Polyline\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar EffectLine = require(\"./EffectLine\");\r\n\r\nvar vec2 = require(\"zrender/lib/core/vector\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Provide effect for line\r\n * @module echarts/chart/helper/EffectLine\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @extends {module:echarts/chart/helper/EffectLine}\r\n * @alias {module:echarts/chart/helper/Polyline}\r\n */\r\nfunction EffectPolyline(lineData, idx, seriesScope) {\r\n  EffectLine.call(this, lineData, idx, seriesScope);\r\n  this._lastFrame = 0;\r\n  this._lastFramePercent = 0;\r\n}\r\n\r\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\r\n\r\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\r\n  return new Polyline(lineData, idx, seriesScope);\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\r\n  this._points = points;\r\n  var accLenArr = [0];\r\n  var len = 0;\r\n\r\n  for (var i = 1; i < points.length; i++) {\r\n    var p1 = points[i - 1];\r\n    var p2 = points[i];\r\n    len += vec2.dist(p1, p2);\r\n    accLenArr.push(len);\r\n  }\r\n\r\n  if (len === 0) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < accLenArr.length; i++) {\r\n    accLenArr[i] /= len;\r\n  }\r\n\r\n  this._offsets = accLenArr;\r\n  this._length = len;\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.getLineLength = function (symbol) {\r\n  return this._length;\r\n}; // Overwrite\r\n\r\n\r\neffectPolylineProto.updateSymbolPosition = function (symbol) {\r\n  var t = symbol.__t;\r\n  var points = this._points;\r\n  var offsets = this._offsets;\r\n  var len = points.length;\r\n\r\n  if (!offsets) {\r\n    // Has length 0\r\n    return;\r\n  }\r\n\r\n  var lastFrame = this._lastFrame;\r\n  var frame;\r\n\r\n  if (t < this._lastFramePercent) {\r\n    // Start from the next frame\r\n    // PENDING start from lastFrame ?\r\n    var start = Math.min(lastFrame + 1, len - 1);\r\n\r\n    for (frame = start; frame >= 0; frame--) {\r\n      if (offsets[frame] <= t) {\r\n        break;\r\n      }\r\n    } // PENDING really need to do this ?\r\n\r\n\r\n    frame = Math.min(frame, len - 2);\r\n  } else {\r\n    for (var frame = lastFrame; frame < len; frame++) {\r\n      if (offsets[frame] > t) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    frame = Math.min(frame - 1, len - 2);\r\n  }\r\n\r\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\r\n  var tx = points[frame + 1][0] - points[frame][0];\r\n  var ty = points[frame + 1][1] - points[frame][1];\r\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\r\n  this._lastFrame = frame;\r\n  this._lastFramePercent = t;\r\n  symbol.ignore = false;\r\n};\r\n\r\nzrUtil.inherits(EffectPolyline, EffectLine);\r\nvar _default = EffectPolyline;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}