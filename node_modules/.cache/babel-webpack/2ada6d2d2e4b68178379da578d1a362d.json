{"ast":null,"code":"module.exports = function (hljs) {\n  var BUILT_INS = {\n    'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'\n  };\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\n  };\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n    keywords: BUILT_INS,\n    starts: {\n      // helper params\n      endsWithParent: true,\n      relevance: 0,\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n        relevance: 0\n      })]\n    }\n  });\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    className: 'name'\n  });\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    // relevance 0 for backward compatibility concerning auto-detection\n    relevance: 0\n  });\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\{\\{/,\n    skip: true\n  };\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\\\(?=\\{\\{)/,\n    skip: true\n  };\n  return {\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH, PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH, hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/), hljs.COMMENT(/\\{\\{!/, /\\}\\}/), {\n      // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n      className: 'template-tag',\n      begin: /\\{\\{\\{\\{(?!\\/)/,\n      end: /\\}\\}\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS],\n      starts: {\n        end: /\\{\\{\\{\\{\\//,\n        returnEnd: true,\n        subLanguage: 'xml'\n      }\n    }, {\n      // close raw block\n      className: 'template-tag',\n      begin: /\\{\\{\\{\\{\\//,\n      end: /\\}\\}\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS]\n    }, {\n      // open block statement\n      className: 'template-tag',\n      begin: /\\{\\{[#\\/]/,\n      end: /\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS]\n    }, {\n      // template variable or helper-call that is NOT html-escaped\n      className: 'template-variable',\n      begin: /\\{\\{\\{/,\n      end: /\\}\\}\\}/,\n      keywords: BUILT_INS,\n      contains: [BASIC_MUSTACHE_CONTENTS]\n    }, {\n      // template variable or helper-call that is html-escaped\n      className: 'template-variable',\n      begin: /\\{\\{/,\n      end: /\\}\\}/,\n      keywords: BUILT_INS,\n      contains: [BASIC_MUSTACHE_CONTENTS]\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/handlebars.js"],"names":["module","exports","hljs","BUILT_INS","IDENTIFIER_PLAIN_OR_QUOTED","begin","EXPRESSION_OR_HELPER_CALL","inherit","keywords","starts","endsWithParent","relevance","contains","BLOCK_MUSTACHE_CONTENTS","className","BASIC_MUSTACHE_CONTENTS","ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH","skip","PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH","aliases","case_insensitive","subLanguage","COMMENT","end","returnEnd"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAIC,SAAS,GAAG;AAAC,oBAAgB;AAAjB,GAAhB;AAEA,MAAIC,0BAA0B,GAAG;AAC/BC,IAAAA,KAAK,EAAE;AADwB,GAAjC;AAIA,MAAIC,yBAAyB,GAAGJ,IAAI,CAACK,OAAL,CAAaH,0BAAb,EAAyC;AACvEI,IAAAA,QAAQ,EAAEL,SAD6D;AAEvEM,IAAAA,MAAM,EAAE;AACN;AACAC,MAAAA,cAAc,EAAE,IAFV;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACK,OAAL,CAAaH,0BAAb,EAAyC;AAACO,QAAAA,SAAS,EAAE;AAAZ,OAAzC,CAAD;AAJJ;AAF+D,GAAzC,CAAhC;AAUA,MAAIE,uBAAuB,GAAGX,IAAI,CAACK,OAAL,CAAaD,yBAAb,EAAwC;AACpEQ,IAAAA,SAAS,EAAE;AADyD,GAAxC,CAA9B;AAIA,MAAIC,uBAAuB,GAAGb,IAAI,CAACK,OAAL,CAAaD,yBAAb,EAAwC;AACpE;AACAK,IAAAA,SAAS,EAAE;AAFyD,GAAxC,CAA9B;AAKA,MAAIK,yCAAyC,GAAG;AAACX,IAAAA,KAAK,EAAE,QAAR;AAAkBY,IAAAA,IAAI,EAAE;AAAxB,GAAhD;AACA,MAAIC,gDAAgD,GAAG;AAACb,IAAAA,KAAK,EAAE,cAAR;AAAwBY,IAAAA,IAAI,EAAE;AAA9B,GAAvD;AAEA,SAAO;AACLE,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,UAAR,EAAoB,iBAApB,CADJ;AAELC,IAAAA,gBAAgB,EAAE,IAFb;AAGLC,IAAAA,WAAW,EAAE,KAHR;AAILT,IAAAA,QAAQ,EAAE,CACRI,yCADQ,EAERE,gDAFQ,EAGRhB,IAAI,CAACoB,OAAL,CAAa,SAAb,EAAwB,QAAxB,CAHQ,EAIRpB,IAAI,CAACoB,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAJQ,EAKR;AACE;AACAR,MAAAA,SAAS,EAAE,cAFb;AAGET,MAAAA,KAAK,EAAE,gBAHT;AAG2BkB,MAAAA,GAAG,EAAE,UAHhC;AAIEX,MAAAA,QAAQ,EAAE,CAACC,uBAAD,CAJZ;AAKEJ,MAAAA,MAAM,EAAE;AAACc,QAAAA,GAAG,EAAE,YAAN;AAAoBC,QAAAA,SAAS,EAAE,IAA/B;AAAqCH,QAAAA,WAAW,EAAE;AAAlD;AALV,KALQ,EAYR;AACE;AACAP,MAAAA,SAAS,EAAE,cAFb;AAGET,MAAAA,KAAK,EAAE,YAHT;AAGuBkB,MAAAA,GAAG,EAAE,UAH5B;AAIEX,MAAAA,QAAQ,EAAE,CAACC,uBAAD;AAJZ,KAZQ,EAkBR;AACE;AACAC,MAAAA,SAAS,EAAE,cAFb;AAGET,MAAAA,KAAK,EAAE,WAHT;AAGsBkB,MAAAA,GAAG,EAAE,MAH3B;AAIEX,MAAAA,QAAQ,EAAE,CAACC,uBAAD;AAJZ,KAlBQ,EAwBR;AACE;AACAC,MAAAA,SAAS,EAAE,mBAFb;AAGET,MAAAA,KAAK,EAAE,QAHT;AAGmBkB,MAAAA,GAAG,EAAE,QAHxB;AAIEf,MAAAA,QAAQ,EAAEL,SAJZ;AAKES,MAAAA,QAAQ,EAAE,CAACG,uBAAD;AALZ,KAxBQ,EA+BR;AACE;AACAD,MAAAA,SAAS,EAAE,mBAFb;AAGET,MAAAA,KAAK,EAAE,MAHT;AAGiBkB,MAAAA,GAAG,EAAE,MAHtB;AAIEf,MAAAA,QAAQ,EAAEL,SAJZ;AAKES,MAAAA,QAAQ,EAAE,CAACG,uBAAD;AALZ,KA/BQ;AAJL,GAAP;AA4CD,CAzED","sourcesContent":["module.exports = function (hljs) {\r\n  var BUILT_INS = {'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'};\r\n\r\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\r\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\r\n  };\r\n\r\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\r\n    keywords: BUILT_INS,\r\n    starts: {\r\n      // helper params\r\n      endsWithParent: true,\r\n      relevance: 0,\r\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {relevance: 0})]\r\n    }\r\n  });\r\n\r\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\r\n    className: 'name'\r\n  });\r\n\r\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\r\n    // relevance 0 for backward compatibility concerning auto-detection\r\n    relevance: 0\r\n  });\r\n\r\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {begin: /\\\\\\{\\{/, skip: true};\r\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {begin: /\\\\\\\\(?=\\{\\{)/, skip: true};\r\n\r\n  return {\r\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\r\n    case_insensitive: true,\r\n    subLanguage: 'xml',\r\n    contains: [\r\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\r\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\r\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\r\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\r\n      {\r\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\r\n        className: 'template-tag',\r\n        begin: /\\{\\{\\{\\{(?!\\/)/, end: /\\}\\}\\}\\}/,\r\n        contains: [BLOCK_MUSTACHE_CONTENTS],\r\n        starts: {end: /\\{\\{\\{\\{\\//, returnEnd: true, subLanguage: 'xml'}\r\n      },\r\n      {\r\n        // close raw block\r\n        className: 'template-tag',\r\n        begin: /\\{\\{\\{\\{\\//, end: /\\}\\}\\}\\}/,\r\n        contains: [BLOCK_MUSTACHE_CONTENTS]\r\n      },\r\n      {\r\n        // open block statement\r\n        className: 'template-tag',\r\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\r\n        contains: [BLOCK_MUSTACHE_CONTENTS],\r\n      },\r\n      {\r\n        // template variable or helper-call that is NOT html-escaped\r\n        className: 'template-variable',\r\n        begin: /\\{\\{\\{/, end: /\\}\\}\\}/,\r\n        keywords: BUILT_INS,\r\n        contains: [BASIC_MUSTACHE_CONTENTS]\r\n      },\r\n      {\r\n        // template variable or helper-call that is html-escaped\r\n        className: 'template-variable',\r\n        begin: /\\{\\{/, end: /\\}\\}/,\r\n        keywords: BUILT_INS,\r\n        contains: [BASIC_MUSTACHE_CONTENTS]\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}