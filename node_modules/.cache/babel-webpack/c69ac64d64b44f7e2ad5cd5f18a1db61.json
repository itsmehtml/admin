{"ast":null,"code":"////// For apps with both Http and HttpClient ////\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { NgModule } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\n\nvar InMemoryWebApiModule =\n/** @class */\nfunction () {\n  function InMemoryWebApiModule() {}\n\n  InMemoryWebApiModule_1 = InMemoryWebApiModule;\n  /**\r\n  *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n  *  to in-memory data store that implements `InMemoryDbService`.\r\n  *  with class that implements InMemoryDbService and creates an in-memory database.\r\n  *\r\n  *  Usually imported in the root application module.\r\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n  *\r\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n  * @param {InMemoryBackendConfigArgs} [options]\r\n  *\r\n  * @example\r\n  * InMemoryWebApiModule.forRoot(dbCreator);\r\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n  */\n\n  InMemoryWebApiModule.forRoot = function (dbCreator, options) {\n    return {\n      ngModule: InMemoryWebApiModule_1,\n      providers: [{\n        provide: InMemoryDbService,\n        useClass: dbCreator\n      }, {\n        provide: InMemoryBackendConfig,\n        useValue: options\n      }, {\n        provide: HttpBackend,\n        useFactory: httpClientInMemBackendServiceFactory,\n        deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]\n      }]\n    };\n  };\n  /**\r\n   *\r\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n   * Same as `forRoot`.\r\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n   */\n\n\n  InMemoryWebApiModule.forFeature = function (dbCreator, options) {\n    return InMemoryWebApiModule_1.forRoot(dbCreator, options);\n  };\n\n  var InMemoryWebApiModule_1;\n  InMemoryWebApiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: InMemoryWebApiModule\n  });\n  InMemoryWebApiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function InMemoryWebApiModule_Factory(t) {\n      return new (t || InMemoryWebApiModule)();\n    }\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(InMemoryWebApiModule, [{\n      type: NgModule,\n      args: [{}]\n    }], function () {\n      return [];\n    }, null);\n  })();\n\n  return InMemoryWebApiModule;\n}();\n\nexport { InMemoryWebApiModule };","map":{"version":3,"sources":["in-memory-web-api.module.ts"],"names":[],"mappings":"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","sourcesContent":["////// For apps with both Http and HttpClient ////\n\nimport { Injector, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\n\nimport {\n  InMemoryBackendConfigArgs,\n  InMemoryBackendConfig,\n  InMemoryDbService\n} from './interfaces';\n\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\n\n@NgModule({})\nexport class InMemoryWebApiModule {\n  /**\n  *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\n  *  to in-memory data store that implements `InMemoryDbService`.\n  *  with class that implements InMemoryDbService and creates an in-memory database.\n  *\n  *  Usually imported in the root application module.\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n  *\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n  * @param {InMemoryBackendConfigArgs} [options]\n  *\n  * @example\n  * InMemoryWebApiModule.forRoot(dbCreator);\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n  */\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule> {\n    return {\n      ngModule: InMemoryWebApiModule,\n      providers: [\n        { provide: InMemoryDbService,  useClass: dbCreator },\n        { provide: InMemoryBackendConfig, useValue: options },\n\n\n        { provide: HttpBackend,\n          useFactory: httpClientInMemBackendServiceFactory,\n          deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]}\n      ]\n    };\n  }\n\n  /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n  static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule> {\n    return InMemoryWebApiModule.forRoot(dbCreator, options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}