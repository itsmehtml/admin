{"ast":null,"code":"var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar logError = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\r\n * SVG Painter\r\n * @module zrender/svg/Painter\r\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n} // function append(parent, child) {\n//     if (checkParentAvailable(parent, child)) {\n//         parent.appendChild(child);\n//     }\n// }\n\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\r\n * @alias module:zrender/svg/Painter\r\n * @constructor\r\n * @param {HTMLElement} root 绘图容器\r\n * @param {module:zrender/Storage} storage\r\n * @param {Object} opts\r\n */\n\n\nvar SVGPainter = function SVGPainter(root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function getType() {\n    return 'svg';\n  },\n  getViewportRoot: function getViewportRoot() {\n    return this._viewport;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function refresh() {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function _paintList(list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\n\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n\n          if (textSvgElement) {\n            // Insert text.\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          }\n\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function _getDefs(isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function resize(width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\r\n   * 获取绘图区域宽度\r\n   */\n  getWidth: function getWidth() {\n    return this._width;\n  },\n\n  /**\r\n   * 获取绘图区域高度\r\n   */\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  _getSize: function _getSize(whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function clear() {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function pathToDataUrl() {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/zrender/lib/svg/Painter.js"],"names":["_core","require","createElement","util","logError","Path","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","ShadowManager","_graphic","svgPath","path","svgImage","image","svgText","text","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","remove","removeChild","getTextSvgElement","displayable","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","storage","opts","zrId","_opts","extend","svgRoot","setAttribute","style","cssText","gradientManager","clipPathManager","shadowManager","viewport","document","_svgRoot","_viewport","resize","width","height","_visibleList","prototype","constructor","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","background","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgProxy","svgElement","invisible","__dirty","brush","update","fill","stroke","push","diff","prevSvgElement","item","removed","k","count","indices","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","contains","children","display","_getSize","_width","_height","viewportStyle","getWidth","getHeight","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","pathToDataUrl","html","outerHTML","createMethodNotSupport","method","each","name","_default","module","exports"],"mappings":"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","sourcesContent":["var _core = require(\"./core\");\r\n\r\nvar createElement = _core.createElement;\r\n\r\nvar util = require(\"../core/util\");\r\n\r\nvar logError = require(\"../core/log\");\r\n\r\nvar Path = require(\"../graphic/Path\");\r\n\r\nvar ZImage = require(\"../graphic/Image\");\r\n\r\nvar ZText = require(\"../graphic/Text\");\r\n\r\nvar arrayDiff = require(\"../core/arrayDiff2\");\r\n\r\nvar GradientManager = require(\"./helper/GradientManager\");\r\n\r\nvar ClippathManager = require(\"./helper/ClippathManager\");\r\n\r\nvar ShadowManager = require(\"./helper/ShadowManager\");\r\n\r\nvar _graphic = require(\"./graphic\");\r\n\r\nvar svgPath = _graphic.path;\r\nvar svgImage = _graphic.image;\r\nvar svgText = _graphic.text;\r\n\r\n/**\r\n * SVG Painter\r\n * @module zrender/svg/Painter\r\n */\r\nfunction parseInt10(val) {\r\n  return parseInt(val, 10);\r\n}\r\n\r\nfunction getSvgProxy(el) {\r\n  if (el instanceof Path) {\r\n    return svgPath;\r\n  } else if (el instanceof ZImage) {\r\n    return svgImage;\r\n  } else if (el instanceof ZText) {\r\n    return svgText;\r\n  } else {\r\n    return svgPath;\r\n  }\r\n}\r\n\r\nfunction checkParentAvailable(parent, child) {\r\n  return child && parent && child.parentNode !== parent;\r\n}\r\n\r\nfunction insertAfter(parent, child, prevSibling) {\r\n  if (checkParentAvailable(parent, child) && prevSibling) {\r\n    var nextSibling = prevSibling.nextSibling;\r\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\r\n  }\r\n}\r\n\r\nfunction prepend(parent, child) {\r\n  if (checkParentAvailable(parent, child)) {\r\n    var firstChild = parent.firstChild;\r\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\r\n  }\r\n} // function append(parent, child) {\r\n//     if (checkParentAvailable(parent, child)) {\r\n//         parent.appendChild(child);\r\n//     }\r\n// }\r\n\r\n\r\nfunction remove(parent, child) {\r\n  if (child && parent && child.parentNode === parent) {\r\n    parent.removeChild(child);\r\n  }\r\n}\r\n\r\nfunction getTextSvgElement(displayable) {\r\n  return displayable.__textSvgEl;\r\n}\r\n\r\nfunction getSvgElement(displayable) {\r\n  return displayable.__svgEl;\r\n}\r\n/**\r\n * @alias module:zrender/svg/Painter\r\n * @constructor\r\n * @param {HTMLElement} root 绘图容器\r\n * @param {module:zrender/Storage} storage\r\n * @param {Object} opts\r\n */\r\n\r\n\r\nvar SVGPainter = function (root, storage, opts, zrId) {\r\n  this.root = root;\r\n  this.storage = storage;\r\n  this._opts = opts = util.extend({}, opts || {});\r\n  var svgRoot = createElement('svg');\r\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n  svgRoot.setAttribute('version', '1.1');\r\n  svgRoot.setAttribute('baseProfile', 'full');\r\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\r\n  this.gradientManager = new GradientManager(zrId, svgRoot);\r\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\r\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\r\n  var viewport = document.createElement('div');\r\n  viewport.style.cssText = 'overflow:hidden;position:relative';\r\n  this._svgRoot = svgRoot;\r\n  this._viewport = viewport;\r\n  root.appendChild(viewport);\r\n  viewport.appendChild(svgRoot);\r\n  this.resize(opts.width, opts.height);\r\n  this._visibleList = [];\r\n};\r\n\r\nSVGPainter.prototype = {\r\n  constructor: SVGPainter,\r\n  getType: function () {\r\n    return 'svg';\r\n  },\r\n  getViewportRoot: function () {\r\n    return this._viewport;\r\n  },\r\n  getViewportRootOffset: function () {\r\n    var viewportRoot = this.getViewportRoot();\r\n\r\n    if (viewportRoot) {\r\n      return {\r\n        offsetLeft: viewportRoot.offsetLeft || 0,\r\n        offsetTop: viewportRoot.offsetTop || 0\r\n      };\r\n    }\r\n  },\r\n  refresh: function () {\r\n    var list = this.storage.getDisplayList(true);\r\n\r\n    this._paintList(list);\r\n  },\r\n  setBackgroundColor: function (backgroundColor) {\r\n    // TODO gradient\r\n    this._viewport.style.background = backgroundColor;\r\n  },\r\n  _paintList: function (list) {\r\n    this.gradientManager.markAllUnused();\r\n    this.clipPathManager.markAllUnused();\r\n    this.shadowManager.markAllUnused();\r\n    var svgRoot = this._svgRoot;\r\n    var visibleList = this._visibleList;\r\n    var listLen = list.length;\r\n    var newVisibleList = [];\r\n    var i;\r\n\r\n    for (i = 0; i < listLen; i++) {\r\n      var displayable = list[i];\r\n      var svgProxy = getSvgProxy(displayable);\r\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\r\n\r\n      if (!displayable.invisible) {\r\n        if (displayable.__dirty) {\r\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\r\n\r\n          this.clipPathManager.update(displayable); // Update gradient and shadow\r\n\r\n          if (displayable.style) {\r\n            this.gradientManager.update(displayable.style.fill);\r\n            this.gradientManager.update(displayable.style.stroke);\r\n            this.shadowManager.update(svgElement, displayable);\r\n          }\r\n\r\n          displayable.__dirty = false;\r\n        }\r\n\r\n        newVisibleList.push(displayable);\r\n      }\r\n    }\r\n\r\n    var diff = arrayDiff(visibleList, newVisibleList);\r\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\r\n    // after add\r\n\r\n    for (i = 0; i < diff.length; i++) {\r\n      var item = diff[i];\r\n\r\n      if (item.removed) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = visibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          remove(svgRoot, svgElement);\r\n          remove(svgRoot, textSvgElement);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < diff.length; i++) {\r\n      var item = diff[i];\r\n\r\n      if (item.added) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = newVisibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\r\n\r\n          if (svgElement) {\r\n            insertAfter(svgRoot, textSvgElement, svgElement);\r\n          } else if (prevSvgElement) {\r\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\r\n          } else {\r\n            prepend(svgRoot, textSvgElement);\r\n          } // Insert text\r\n\r\n\r\n          insertAfter(svgRoot, textSvgElement, svgElement);\r\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\r\n\r\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.clipPathManager.markUsed(displayable);\r\n        }\r\n      } else if (!item.removed) {\r\n        for (var k = 0; k < item.count; k++) {\r\n          var displayable = newVisibleList[item.indices[k]];\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          var svgElement = getSvgElement(displayable);\r\n          var textSvgElement = getTextSvgElement(displayable);\r\n          this.gradientManager.markUsed(displayable);\r\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.shadowManager.markUsed(displayable);\r\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\r\n          this.clipPathManager.markUsed(displayable);\r\n\r\n          if (textSvgElement) {\r\n            // Insert text.\r\n            insertAfter(svgRoot, textSvgElement, svgElement);\r\n          }\r\n\r\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.gradientManager.removeUnused();\r\n    this.clipPathManager.removeUnused();\r\n    this.shadowManager.removeUnused();\r\n    this._visibleList = newVisibleList;\r\n  },\r\n  _getDefs: function (isForceCreating) {\r\n    var svgRoot = this._svgRoot;\r\n\r\n    var defs = this._svgRoot.getElementsByTagName('defs');\r\n\r\n    if (defs.length === 0) {\r\n      // Not exist\r\n      if (isForceCreating) {\r\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\r\n        svgRoot.firstChild // Insert in the front of svg\r\n        );\r\n\r\n        if (!defs.contains) {\r\n          // IE doesn't support contains method\r\n          defs.contains = function (el) {\r\n            var children = defs.children;\r\n\r\n            if (!children) {\r\n              return false;\r\n            }\r\n\r\n            for (var i = children.length - 1; i >= 0; --i) {\r\n              if (children[i] === el) {\r\n                return true;\r\n              }\r\n            }\r\n\r\n            return false;\r\n          };\r\n        }\r\n\r\n        return defs;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return defs[0];\r\n    }\r\n  },\r\n  resize: function (width, height) {\r\n    var viewport = this._viewport; // FIXME Why ?\r\n\r\n    viewport.style.display = 'none'; // Save input w/h\r\n\r\n    var opts = this._opts;\r\n    width != null && (opts.width = width);\r\n    height != null && (opts.height = height);\r\n    width = this._getSize(0);\r\n    height = this._getSize(1);\r\n    viewport.style.display = '';\r\n\r\n    if (this._width !== width || this._height !== height) {\r\n      this._width = width;\r\n      this._height = height;\r\n      var viewportStyle = viewport.style;\r\n      viewportStyle.width = width + 'px';\r\n      viewportStyle.height = height + 'px';\r\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\r\n\r\n      svgRoot.setAttribute('width', width);\r\n      svgRoot.setAttribute('height', height);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域宽度\r\n   */\r\n  getWidth: function () {\r\n    return this._width;\r\n  },\r\n\r\n  /**\r\n   * 获取绘图区域高度\r\n   */\r\n  getHeight: function () {\r\n    return this._height;\r\n  },\r\n  _getSize: function (whIdx) {\r\n    var opts = this._opts;\r\n    var wh = ['width', 'height'][whIdx];\r\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\r\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\r\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\r\n\r\n    if (opts[wh] != null && opts[wh] !== 'auto') {\r\n      return parseFloat(opts[wh]);\r\n    }\r\n\r\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\r\n\r\n    var stl = document.defaultView.getComputedStyle(root);\r\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\r\n  },\r\n  dispose: function () {\r\n    this.root.innerHTML = '';\r\n    this._svgRoot = this._viewport = this.storage = null;\r\n  },\r\n  clear: function () {\r\n    if (this._viewport) {\r\n      this.root.removeChild(this._viewport);\r\n    }\r\n  },\r\n  pathToDataUrl: function () {\r\n    this.refresh();\r\n    var html = this._svgRoot.outerHTML;\r\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\r\n  }\r\n}; // Not supported methods\r\n\r\nfunction createMethodNotSupport(method) {\r\n  return function () {\r\n    logError('In SVG mode painter not support method \"' + method + '\"');\r\n  };\r\n} // Unsuppoted methods\r\n\r\n\r\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\r\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\r\n});\r\nvar _default = SVGPainter;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}