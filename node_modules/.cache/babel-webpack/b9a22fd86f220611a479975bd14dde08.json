{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar ComponentView = require(\"../../view/Component\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\r\n   * Find the first target coordinate system.\r\n   *\r\n   * @protected\r\n   * @return {Object} {\r\n   *                   grid: [\r\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\r\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // cartesians must not be null/undefined.\r\n   *                   polar: [\r\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // polars must not be null/undefined.\r\n   *                   singleAxis: [\r\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\r\n   *                   ]\r\n   */\n  getTargetCoordInfo: function getTargetCoordInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/dataZoom/DataZoomView.js"],"names":["ComponentView","require","_default","extend","type","render","dataZoomModel","ecModel","api","payload","getTargetCoordInfo","coordSysLists","eachTargetAxis","dimNames","axisIndex","axisModel","getComponent","axis","coordModel","getCoordSysModel","save","mainType","componentIndex","store","coordIndex","item","i","length","model","push","axisModels","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,QAAQ,GAAGF,aAAa,CAACG,MAAd,CAAqB;AAClCC,EAAAA,IAAI,EAAE,UAD4B;AAElCC,EAAAA,MAAM,EAAE,gBAAUC,aAAV,EAAyBC,OAAzB,EAAkCC,GAAlC,EAAuCC,OAAvC,EAAgD;AACtD,SAAKH,aAAL,GAAqBA,aAArB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD,GANiC;;AAQlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,kBAAkB,EAAE,8BAAY;AAC9B,QAAIJ,aAAa,GAAG,KAAKA,aAAzB;AACA,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAII,aAAa,GAAG,EAApB;AACAL,IAAAA,aAAa,CAACM,cAAd,CAA6B,UAAUC,QAAV,EAAoBC,SAApB,EAA+B;AAC1D,UAAIC,SAAS,GAAGR,OAAO,CAACS,YAAR,CAAqBH,QAAQ,CAACI,IAA9B,EAAoCH,SAApC,CAAhB;;AAEA,UAAIC,SAAJ,EAAe;AACb,YAAIG,UAAU,GAAGH,SAAS,CAACI,gBAAV,EAAjB;AACAD,QAAAA,UAAU,IAAIE,IAAI,CAACF,UAAD,EAAaH,SAAb,EAAwBJ,aAAa,CAACO,UAAU,CAACG,QAAZ,CAAb,KAAuCV,aAAa,CAACO,UAAU,CAACG,QAAZ,CAAb,GAAqC,EAA5E,CAAxB,EAAyGH,UAAU,CAACI,cAApH,CAAlB;AACD;AACF,KAPD,EAOG,IAPH;;AASA,aAASF,IAAT,CAAcF,UAAd,EAA0BH,SAA1B,EAAqCQ,KAArC,EAA4CC,UAA5C,EAAwD;AACtD,UAAIC,IAAJ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIH,KAAK,CAACG,CAAD,CAAL,CAASE,KAAT,KAAmBV,UAAvB,EAAmC;AACjCO,UAAAA,IAAI,GAAGF,KAAK,CAACG,CAAD,CAAZ;AACA;AACD;AACF;;AAED,UAAI,CAACD,IAAL,EAAW;AACTF,QAAAA,KAAK,CAACM,IAAN,CAAWJ,IAAI,GAAG;AAChBG,UAAAA,KAAK,EAAEV,UADS;AAEhBY,UAAAA,UAAU,EAAE,EAFI;AAGhBN,UAAAA,UAAU,EAAEA;AAHI,SAAlB;AAKD;;AAEDC,MAAAA,IAAI,CAACK,UAAL,CAAgBD,IAAhB,CAAqBd,SAArB;AACD;;AAED,WAAOJ,aAAP;AACD;AA7DiC,CAArB,CAAf;;AAgEAoB,MAAM,CAACC,OAAP,GAAiB9B,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar ComponentView = require(\"../../view/Component\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar _default = ComponentView.extend({\r\n  type: 'dataZoom',\r\n  render: function (dataZoomModel, ecModel, api, payload) {\r\n    this.dataZoomModel = dataZoomModel;\r\n    this.ecModel = ecModel;\r\n    this.api = api;\r\n  },\r\n\r\n  /**\r\n   * Find the first target coordinate system.\r\n   *\r\n   * @protected\r\n   * @return {Object} {\r\n   *                   grid: [\r\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\r\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // cartesians must not be null/undefined.\r\n   *                   polar: [\r\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\r\n   *                       ...\r\n   *                   ],  // polars must not be null/undefined.\r\n   *                   singleAxis: [\r\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\r\n   *                   ]\r\n   */\r\n  getTargetCoordInfo: function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var ecModel = this.ecModel;\r\n    var coordSysLists = {};\r\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\r\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\r\n\r\n      if (axisModel) {\r\n        var coordModel = axisModel.getCoordSysModel();\r\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\r\n      }\r\n    }, this);\r\n\r\n    function save(coordModel, axisModel, store, coordIndex) {\r\n      var item;\r\n\r\n      for (var i = 0; i < store.length; i++) {\r\n        if (store[i].model === coordModel) {\r\n          item = store[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!item) {\r\n        store.push(item = {\r\n          model: coordModel,\r\n          axisModels: [],\r\n          coordIndex: coordIndex\r\n        });\r\n      }\r\n\r\n      item.axisModels.push(axisModel);\r\n    }\r\n\r\n    return coordSysLists;\r\n  }\r\n});\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}