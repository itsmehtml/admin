{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\r\n   * @type {module:echarts/coord/geo/Geo}\r\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function init(option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // If svg used, aspectScale is 1 by default.\n    // aspectScale: 0.75,\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\n  getRegionModel: function getRegionModel(name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\r\n   * Format label\r\n   * @param {string} name Region name\r\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n   * @return {string}\r\n   */\n  getFormattedLabel: function getFormattedLabel(name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label' + (status === 'normal' ? '.' : status + '.') + 'formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/geo/GeoModel.js"],"names":["zrUtil","require","modelUtil","ComponentModel","Model","selectableMixin","geoCreator","GeoModel","extend","type","coordinateSystem","layoutMode","init","option","prototype","apply","arguments","defaultEmphasis","optionUpdated","self","regions","getFilledRegions","map","nameMap","_optionModelMap","reduce","optionModelMap","regionOpt","name","set","createHashMap","updateSelectedMap","defaultOption","zlevel","z","show","left","top","aspectScale","silent","boundingCoords","center","zoom","scaleLimit","label","color","itemStyle","borderWidth","borderColor","emphasis","getRegionModel","get","ecModel","getFormattedLabel","status","regionModel","formatter","params","replace","setZoom","setCenter","mixin","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar ComponentModel = require(\"../../model/Component\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\r\n\r\nvar geoCreator = require(\"./geoCreator\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar GeoModel = ComponentModel.extend({\r\n  type: 'geo',\r\n\r\n  /**\r\n   * @type {module:echarts/coord/geo/Geo}\r\n   */\r\n  coordinateSystem: null,\r\n  layoutMode: 'box',\r\n  init: function (option) {\r\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\r\n\r\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\r\n  },\r\n  optionUpdated: function () {\r\n    var option = this.option;\r\n    var self = this;\r\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\r\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\r\n      if (regionOpt.name) {\r\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\r\n      }\r\n\r\n      return optionModelMap;\r\n    }, zrUtil.createHashMap());\r\n    this.updateSelectedMap(option.regions);\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    show: true,\r\n    left: 'center',\r\n    top: 'center',\r\n    // width:,\r\n    // height:,\r\n    // right\r\n    // bottom\r\n    // Aspect is width / height. Inited to be geoJson bbox aspect\r\n    // This parameter is used for scale this aspect\r\n    // If svg used, aspectScale is 1 by default.\r\n    // aspectScale: 0.75,\r\n    aspectScale: null,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    silent: false,\r\n    // Map type\r\n    map: '',\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ]\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    // selectedMode: false\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    itemStyle: {\r\n      // color: 各异,\r\n      borderWidth: 0.5,\r\n      borderColor: '#444',\r\n      color: '#eee'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        color: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    regions: []\r\n  },\r\n\r\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getRegionModel: function (name) {\r\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\r\n  },\r\n\r\n  /**\r\n   * Format label\r\n   * @param {string} name Region name\r\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n   * @return {string}\r\n   */\r\n  getFormattedLabel: function (name, status) {\r\n    var regionModel = this.getRegionModel(name);\r\n    var formatter = regionModel.get('label' + (status === 'normal' ? '.' : status + '.') + 'formatter');\r\n    var params = {\r\n      name: name\r\n    };\r\n\r\n    if (typeof formatter === 'function') {\r\n      params.status = status;\r\n      return formatter(params);\r\n    } else if (typeof formatter === 'string') {\r\n      return formatter.replace('{a}', name != null ? name : '');\r\n    }\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  }\r\n});\r\nzrUtil.mixin(GeoModel, selectableMixin);\r\nvar _default = GeoModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}