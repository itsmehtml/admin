{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/Desktop/Admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __param } from 'tslib';\nimport { Inject, Injectable, TemplateRef, Directive, EventEmitter, ElementRef, NgZone, HostBinding, Output, Input, Renderer2, HostListener, KeyValueDiffers, ContentChildren, Component, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, ViewChild, SkipSelf, Optional, ViewEncapsulation, ViewContainerRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction DataTableBodyComponent_datatable_progress_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-progress\");\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-summary-row\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"rowHeight\", ctx_r4.summaryHeight)(\"offsetX\", ctx_r4.offsetX)(\"innerWidth\", ctx_r4.innerWidth)(\"rows\", ctx_r4.rows)(\"columns\", ctx_r4.columns);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-row\", 13);\n    ɵngcc0.ɵɵlistener(\"treeAction\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_treeAction_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var group_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r12.onTreeAction(group_r7);\n    })(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_activate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var i_r8 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      return _r1.onActivate($event, ctx_r15.indexes.first + i_r8);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var group_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r1 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"isSelected\", _r1.getRowSelected(group_r7))(\"innerWidth\", ctx_r9.innerWidth)(\"offsetX\", ctx_r9.offsetX)(\"columns\", ctx_r9.columns)(\"rowHeight\", ctx_r9.getRowHeight(group_r7))(\"row\", group_r7)(\"rowIndex\", ctx_r9.getRowIndex(group_r7))(\"expanded\", ctx_r9.getRowExpanded(group_r7))(\"rowClass\", ctx_r9.rowClass)(\"displayCheck\", ctx_r9.displayCheck)(\"treeStatus\", group_r7 && group_r7.treeStatus);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-row\", 15);\n    ɵngcc0.ɵɵlistener(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template_datatable_body_row_activate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var i_r20 = ctx.index;\n      ɵngcc0.ɵɵnextContext(4);\n\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      return _r1.onActivate($event, i_r20);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r19 = ctx.$implicit;\n    var group_r7 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r1 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"isSelected\", _r1.getRowSelected(row_r19))(\"innerWidth\", ctx_r18.innerWidth)(\"offsetX\", ctx_r18.offsetX)(\"columns\", ctx_r18.columns)(\"rowHeight\", ctx_r18.getRowHeight(row_r19))(\"row\", row_r19)(\"group\", group_r7.value)(\"rowIndex\", ctx_r18.getRowIndex(row_r19))(\"expanded\", ctx_r18.getRowExpanded(row_r19))(\"rowClass\", ctx_r18.rowClass);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template, 1, 10, \"datatable-body-row\", 14);\n  }\n\n  if (rf & 2) {\n    var group_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", group_r7.value)(\"ngForTrackBy\", ctx_r11.rowTrackingFn);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-row-wrapper\", 10);\n    ɵngcc0.ɵɵlistener(\"rowContextmenu\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template_datatable_row_wrapper_rowContextmenu_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r25.rowContextmenu.emit($event);\n    });\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template, 1, 11, \"datatable-body-row\", 11);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template, 1, 2, \"ng-template\", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var group_r7 = ctx.$implicit;\n    var i_r8 = ctx.index;\n\n    var _r10 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"groupedRows\", ctx_r5.groupedRows)(\"innerWidth\", ctx_r5.innerWidth)(\"ngStyle\", ctx_r5.getRowsStyles(group_r7))(\"rowDetail\", ctx_r5.rowDetail)(\"groupHeader\", ctx_r5.groupHeader)(\"offsetX\", ctx_r5.offsetX)(\"detailRowHeight\", ctx_r5.getDetailRowHeight(group_r7 && group_r7[i_r8], i_r8))(\"row\", group_r7)(\"expanded\", ctx_r5.getRowExpanded(group_r7))(\"rowIndex\", ctx_r5.getRowIndex(group_r7 && group_r7[i_r8]));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.groupedRows)(\"ngIfElse\", _r10);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-summary-row\", 16);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r6.getBottomSummaryRowStyles())(\"rowHeight\", ctx_r6.summaryHeight)(\"offsetX\", ctx_r6.offsetX)(\"innerWidth\", ctx_r6.innerWidth)(\"rows\", ctx_r6.rows)(\"columns\", ctx_r6.columns);\n  }\n}\n\nfunction DataTableBodyComponent_datatable_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-scroller\", 5);\n    ɵngcc0.ɵɵlistener(\"scroll\", function DataTableBodyComponent_datatable_scroller_3_Template_datatable_scroller_scroll_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.onBodyScroll($event);\n    });\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template, 1, 5, \"datatable-summary-row\", 6);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template, 4, 12, \"datatable-row-wrapper\", 7);\n    ɵngcc0.ɵɵtemplate(3, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template, 1, 6, \"datatable-summary-row\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"scrollbarV\", ctx_r2.scrollbarV)(\"scrollbarH\", ctx_r2.scrollbarH)(\"scrollHeight\", ctx_r2.scrollHeight)(\"scrollWidth\", ctx_r2.columnGroupWidths == null ? null : ctx_r2.columnGroupWidths.total);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"top\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.temp)(\"ngForTrackBy\", ctx_r2.rowTrackingFn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"bottom\");\n  }\n}\n\nfunction DataTableBodyComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r3.emptyMessage, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction DataTableHeaderComponent_div_1_datatable_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-header-cell\", 4);\n    ɵngcc0.ɵɵlistener(\"resize\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_resize_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var column_r3 = ctx.$implicit;\n      var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r4.onColumnResized($event, column_r3);\n    })(\"longPressStart\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressStart_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.onLongPressStart($event);\n    })(\"longPressEnd\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressEnd_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.onLongPressEnd($event);\n    })(\"sort\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_sort_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.onSort($event);\n    })(\"select\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.select.emit($event);\n    })(\"columnContextmenu\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_columnContextmenu_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.columnContextmenu.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r3 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"resizeEnabled\", column_r3.resizeable)(\"pressModel\", column_r3)(\"pressEnabled\", ctx_r2.reorderable && column_r3.draggable)(\"dragX\", ctx_r2.reorderable && column_r3.draggable && column_r3.dragging)(\"dragY\", false)(\"dragModel\", column_r3)(\"dragEventTarget\", ctx_r2.dragEventTarget)(\"headerHeight\", ctx_r2.headerHeight)(\"isTarget\", column_r3.isTarget)(\"targetMarkerTemplate\", ctx_r2.targetMarkerTemplate)(\"targetMarkerContext\", column_r3.targetMarkerContext)(\"column\", column_r3)(\"sortType\", ctx_r2.sortType)(\"sorts\", ctx_r2.sorts)(\"selectionType\", ctx_r2.selectionType)(\"sortAscendingIcon\", ctx_r2.sortAscendingIcon)(\"sortDescendingIcon\", ctx_r2.sortDescendingIcon)(\"sortUnsetIcon\", ctx_r2.sortUnsetIcon)(\"allRowsSelected\", ctx_r2.allRowsSelected);\n  }\n}\n\nfunction DataTableHeaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_datatable_header_cell_1_Template, 1, 19, \"datatable-header-cell\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var colGroup_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(\"datatable-row-\" + colGroup_r1.type);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0._styleByGroup[colGroup_r1.type]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", colGroup_r1.columns)(\"ngForTrackBy\", ctx_r0.columnTrackingFn);\n  }\n}\n\nfunction DatatableComponent_datatable_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-header\", 4);\n    ɵngcc0.ɵɵlistener(\"sort\", function DatatableComponent_datatable_header_1_Template_datatable_header_sort_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onColumnSort($event);\n    })(\"resize\", function DatatableComponent_datatable_header_1_Template_datatable_header_resize_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onColumnResize($event);\n    })(\"reorder\", function DatatableComponent_datatable_header_1_Template_datatable_header_reorder_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onColumnReorder($event);\n    })(\"select\", function DatatableComponent_datatable_header_1_Template_datatable_header_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onHeaderSelect($event);\n    })(\"columnContextmenu\", function DatatableComponent_datatable_header_1_Template_datatable_header_columnContextmenu_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onColumnContextmenu($event);\n    });\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"sorts\", ctx_r0.sorts)(\"sortType\", ctx_r0.sortType)(\"scrollbarH\", ctx_r0.scrollbarH)(\"innerWidth\", ctx_r0._innerWidth)(\"offsetX\", ɵngcc0.ɵɵpipeBind1(1, 15, ctx_r0._offsetX))(\"dealsWithGroup\", ctx_r0.groupedRows !== undefined)(\"columns\", ctx_r0._internalColumns)(\"headerHeight\", ctx_r0.headerHeight)(\"reorderable\", ctx_r0.reorderable)(\"targetMarkerTemplate\", ctx_r0.targetMarkerTemplate)(\"sortAscendingIcon\", ctx_r0.cssClasses.sortAscending)(\"sortDescendingIcon\", ctx_r0.cssClasses.sortDescending)(\"sortUnsetIcon\", ctx_r0.cssClasses.sortUnset)(\"allRowsSelected\", ctx_r0.allRowsSelected)(\"selectionType\", ctx_r0.selectionType);\n  }\n}\n\nfunction DatatableComponent_datatable_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-footer\", 5);\n    ɵngcc0.ɵɵlistener(\"page\", function DatatableComponent_datatable_footer_4_Template_datatable_footer_page_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onFooterPage($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"rowCount\", ctx_r1.rowCount)(\"pageSize\", ctx_r1.pageSize)(\"offset\", ctx_r1.offset)(\"footerHeight\", ctx_r1.footerHeight)(\"footerTemplate\", ctx_r1.footer)(\"totalMessage\", ctx_r1.messages.totalMessage)(\"pagerLeftArrowIcon\", ctx_r1.cssClasses.pagerLeftArrow)(\"pagerRightArrowIcon\", ctx_r1.cssClasses.pagerRightArrow)(\"pagerPreviousIcon\", ctx_r1.cssClasses.pagerPrevious)(\"selectedCount\", ctx_r1.selected.length)(\"selectedMessage\", !!ctx_r1.selectionType && ctx_r1.messages.selectedMessage)(\"pagerNextIcon\", ctx_r1.cssClasses.pagerNext);\n  }\n}\n\nfunction DataTableHeaderCellComponent_1_ng_template_0_Template(rf, ctx) {}\n\nfunction DataTableHeaderCellComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableHeaderCellComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.targetMarkerTemplate)(\"ngTemplateOutletContext\", ctx_r0.targetMarkerContext);\n  }\n}\n\nfunction DataTableHeaderCellComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 7);\n    ɵngcc0.ɵɵlistener(\"change\", function DataTableHeaderCellComponent_label_2_Template_input_change_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.select.emit(!ctx_r5.allRowsSelected);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r1.allRowsSelected);\n  }\n}\n\nfunction DataTableHeaderCellComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_span_3_Template_span_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onSort();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.name, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction DataTableHeaderCellComponent_4_ng_template_0_Template(rf, ctx) {}\n\nfunction DataTableHeaderCellComponent_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableHeaderCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.headerTemplate)(\"ngTemplateOutletContext\", ctx_r3.cellContext);\n  }\n}\n\nfunction DataTableFooterComponent_1_ng_template_0_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0, a1, a2, a3, a4) {\n  return {\n    rowCount: a0,\n    pageSize: a1,\n    selectedCount: a2,\n    curPage: a3,\n    offset: a4\n  };\n};\n\nfunction DataTableFooterComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableFooterComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.footerTemplate.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction5(2, _c1, ctx_r0.rowCount, ctx_r0.pageSize, ctx_r0.selectedCount, ctx_r0.curPage, ctx_r0.offset));\n  }\n}\n\nfunction DataTableFooterComponent_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.selectedCount == null ? null : ctx_r4.selectedCount.toLocaleString(), \" \", ctx_r4.selectedMessage, \" / \");\n  }\n}\n\nfunction DataTableFooterComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(1, DataTableFooterComponent_div_2_span_1_Template, 2, 2, \"span\", 1);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedMessage);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r1.rowCount == null ? null : ctx_r1.rowCount.toLocaleString(), \" \", ctx_r1.totalMessage, \" \");\n  }\n}\n\nfunction DataTableFooterComponent_datatable_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-pager\", 6);\n    ɵngcc0.ɵɵlistener(\"change\", function DataTableFooterComponent_datatable_pager_3_Template_datatable_pager_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.page.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"pagerLeftArrowIcon\", ctx_r2.pagerLeftArrowIcon)(\"pagerRightArrowIcon\", ctx_r2.pagerRightArrowIcon)(\"pagerPreviousIcon\", ctx_r2.pagerPreviousIcon)(\"pagerNextIcon\", ctx_r2.pagerNextIcon)(\"page\", ctx_r2.curPage)(\"size\", ctx_r2.pageSize)(\"count\", ctx_r2.rowCount)(\"hidden\", !ctx_r2.isVisible);\n  }\n}\n\nvar _c2 = function _c2(a0) {\n  return {\n    \"selected-count\": a0\n  };\n};\n\nfunction DataTablePagerComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_li_7_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var pg_r1 = ctx.$implicit;\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.selectPage(pg_r1.number);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pg_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r1.number === ctx_r0.page);\n    ɵngcc0.ɵɵattribute(\"aria-label\", \"page \" + pg_r1.number);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pg_r1.text, \" \");\n  }\n}\n\nfunction DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-cell\", 3);\n    ɵngcc0.ɵɵlistener(\"activate\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_activate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ii_r5 = ctx.index;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.onActivate($event, ii_r5);\n    })(\"treeAction\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_treeAction_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.onTreeAction();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"row\", ctx_r3.row)(\"group\", ctx_r3.group)(\"expanded\", ctx_r3.expanded)(\"isSelected\", ctx_r3.isSelected)(\"rowIndex\", ctx_r3.rowIndex)(\"column\", column_r4)(\"rowHeight\", ctx_r3.rowHeight)(\"displayCheck\", ctx_r3.displayCheck)(\"treeStatus\", ctx_r3.treeStatus);\n  }\n}\n\nfunction DataTableBodyRowComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template, 1, 9, \"datatable-body-cell\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var colGroup_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"datatable-row-\", colGroup_r1.type, \" datatable-row-group\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0._groupStyles[colGroup_r1.type]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", colGroup_r1.columns)(\"ngForTrackBy\", ctx_r0.columnTrackingFn);\n  }\n}\n\nfunction DataTableRowWrapperComponent_div_0_1_ng_template_0_Template(rf, ctx) {}\n\nfunction DataTableRowWrapperComponent_div_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.groupHeader.template)(\"ngTemplateOutletContext\", ctx_r3.groupContext);\n  }\n}\n\nfunction DataTableRowWrapperComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_0_1_Template, 1, 2, undefined, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.getGroupHeaderStyle());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.groupHeader && ctx_r0.groupHeader.template);\n  }\n}\n\nfunction DataTableRowWrapperComponent_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\"]);\n  }\n}\n\nfunction DataTableRowWrapperComponent_div_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction DataTableRowWrapperComponent_div_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.rowDetail.template)(\"ngTemplateOutletContext\", ctx_r5.rowContext);\n  }\n}\n\nfunction DataTableRowWrapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_2_1_Template, 1, 2, undefined, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r2.detailRowHeight, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.rowDetail && ctx_r2.rowDetail.template);\n  }\n}\n\nvar _c3 = [\"cellTemplate\"];\n\nfunction DataTableBodyCellComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_label_1_Template_input_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onCheckboxChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.isSelected);\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 11);\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 12);\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_ng_container_2_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onTreeAction();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template, 1, 0, \"i\", 8);\n    ɵngcc0.ɵɵtemplate(3, DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template, 1, 0, \"i\", 9);\n    ɵngcc0.ɵɵtemplate(4, DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template, 1, 0, \"i\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r6.treeStatus === \"disabled\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"loading\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"collapsed\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"expanded\" || ctx_r6.treeStatus === \"disabled\");\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\n\nvar _c4 = function _c4(a0) {\n  return {\n    cellContext: a0\n  };\n};\n\nfunction DataTableBodyCellComponent_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.column.treeToggleTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r7.cellContext));\n  }\n}\n\nfunction DataTableBodyCellComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyCellComponent_ng_container_2_button_1_Template, 5, 4, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_2_Template, 1, 4, undefined, 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.column.treeToggleTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.treeToggleTemplate);\n  }\n}\n\nfunction DataTableBodyCellComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r2.sanitizedValue)(\"innerHTML\", ctx_r2.value, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction DataTableBodyCellComponent_4_ng_template_0_Template(rf, ctx) {}\n\nfunction DataTableBodyCellComponent_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 14, 16, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.cellTemplate)(\"ngTemplateOutletContext\", ctx_r3.cellContext);\n  }\n}\n\nfunction DataTableSummaryRowComponent_datatable_body_row_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-body-row\", 1);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerWidth\", ctx_r0.innerWidth)(\"offsetX\", ctx_r0.offsetX)(\"columns\", ctx_r0._internalColumns)(\"rowHeight\", ctx_r0.rowHeight)(\"row\", ctx_r0.summaryRow)(\"rowIndex\", -1);\n  }\n}\n\nvar ScrollbarHelper = /*#__PURE__*/function () {\n  function ScrollbarHelper(document) {\n    _classCallCheck(this, ScrollbarHelper);\n\n    this.document = document;\n    this.width = this.getWidth();\n  }\n\n  _createClass(ScrollbarHelper, [{\n    key: \"getWidth\",\n    value: function getWidth() {\n      var outer = this.document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100px';\n      outer.style.msOverflowStyle = 'scrollbar';\n      this.document.body.appendChild(outer);\n      var widthNoScroll = outer.offsetWidth;\n      outer.style.overflow = 'scroll';\n      var inner = this.document.createElement('div');\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n      var widthWithScroll = inner.offsetWidth;\n      outer.parentNode.removeChild(outer);\n      return widthNoScroll - widthWithScroll;\n    }\n  }]);\n\n  return ScrollbarHelper;\n}();\n\nScrollbarHelper.ɵfac = function ScrollbarHelper_Factory(t) {\n  return new (t || ScrollbarHelper)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nScrollbarHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScrollbarHelper,\n  factory: function factory(t) {\n    return ScrollbarHelper.ɵfac(t);\n  }\n});\n\nScrollbarHelper.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nScrollbarHelper = __decorate([__param(0, Inject(DOCUMENT))], ScrollbarHelper);\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n\nvar DimensionsHelper = /*#__PURE__*/function () {\n  function DimensionsHelper() {\n    _classCallCheck(this, DimensionsHelper);\n  }\n\n  _createClass(DimensionsHelper, [{\n    key: \"getDimensions\",\n    value: function getDimensions(element) {\n      return element.getBoundingClientRect();\n    }\n  }]);\n\n  return DimensionsHelper;\n}();\n\nDimensionsHelper.ɵfac = function DimensionsHelper_Factory(t) {\n  return new (t || DimensionsHelper)();\n};\n\nDimensionsHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DimensionsHelper,\n  factory: function factory(t) {\n    return DimensionsHelper.ɵfac(t);\n  }\n});\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n\nvar ColumnChangesService = /*#__PURE__*/function () {\n  function ColumnChangesService() {\n    _classCallCheck(this, ColumnChangesService);\n\n    this.columnInputChanges = new Subject();\n  }\n\n  _createClass(ColumnChangesService, [{\n    key: \"columnInputChanges$\",\n    get: function get() {\n      return this.columnInputChanges.asObservable();\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange() {\n      this.columnInputChanges.next();\n    }\n  }]);\n\n  return ColumnChangesService;\n}();\n\nColumnChangesService.ɵfac = function ColumnChangesService_Factory(t) {\n  return new (t || ColumnChangesService)();\n};\n\nColumnChangesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ColumnChangesService,\n  factory: function factory(t) {\n    return ColumnChangesService.ɵfac(t);\n  }\n});\n\nvar DataTableFooterTemplateDirective = function DataTableFooterTemplateDirective(template) {\n  _classCallCheck(this, DataTableFooterTemplateDirective);\n\n  this.template = template;\n};\n\nDataTableFooterTemplateDirective.ɵfac = function DataTableFooterTemplateDirective_Factory(t) {\n  return new (t || DataTableFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDataTableFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataTableFooterTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-footer-template\", \"\"]]\n});\n\nDataTableFooterTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n\n\nvar VisibilityDirective = /*#__PURE__*/function () {\n  function VisibilityDirective(element, zone) {\n    _classCallCheck(this, VisibilityDirective);\n\n    this.element = element;\n    this.zone = zone;\n    this.isVisible = false;\n    this.visible = new EventEmitter();\n  }\n\n  _createClass(VisibilityDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.runCheck();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"onVisibilityChange\",\n    value: function onVisibilityChange() {\n      var _this = this;\n\n      // trigger zone recalc for columns\n      this.zone.run(function () {\n        _this.isVisible = true;\n\n        _this.visible.emit(true);\n      });\n    }\n  }, {\n    key: \"runCheck\",\n    value: function runCheck() {\n      var _this2 = this;\n\n      var check = function check() {\n        // https://davidwalsh.name/offsetheight-visibility\n        var _this2$element$native = _this2.element.nativeElement,\n            offsetHeight = _this2$element$native.offsetHeight,\n            offsetWidth = _this2$element$native.offsetWidth;\n\n        if (offsetHeight && offsetWidth) {\n          clearTimeout(_this2.timeout);\n\n          _this2.onVisibilityChange();\n        } else {\n          clearTimeout(_this2.timeout);\n\n          _this2.zone.runOutsideAngular(function () {\n            _this2.timeout = setTimeout(function () {\n              return check();\n            }, 50);\n          });\n        }\n      };\n\n      this.timeout = setTimeout(function () {\n        return check();\n      });\n    }\n  }]);\n\n  return VisibilityDirective;\n}();\n\nVisibilityDirective.ɵfac = function VisibilityDirective_Factory(t) {\n  return new (t || VisibilityDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nVisibilityDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: VisibilityDirective,\n  selectors: [[\"\", \"visibilityObserver\", \"\"]],\n  hostVars: 2,\n  hostBindings: function VisibilityDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"visible\", ctx.isVisible);\n    }\n  },\n  outputs: {\n    visible: \"visible\"\n  }\n});\n\nVisibilityDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\n__decorate([HostBinding('class.visible')], VisibilityDirective.prototype, \"isVisible\", void 0);\n\n__decorate([Output()], VisibilityDirective.prototype, \"visible\", void 0);\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n\n\nvar DraggableDirective = /*#__PURE__*/function () {\n  function DraggableDirective(element) {\n    _classCallCheck(this, DraggableDirective);\n\n    this.dragX = true;\n    this.dragY = true;\n    this.dragStart = new EventEmitter();\n    this.dragging = new EventEmitter();\n    this.dragEnd = new EventEmitter();\n    this.isDragging = false;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(DraggableDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n        this.onMousedown(changes['dragEventTarget'].currentValue);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroySubscription();\n    }\n  }, {\n    key: \"onMouseup\",\n    value: function onMouseup(event) {\n      if (!this.isDragging) return;\n      this.isDragging = false;\n      this.element.classList.remove('dragging');\n\n      if (this.subscription) {\n        this._destroySubscription();\n\n        this.dragEnd.emit({\n          event: event,\n          element: this.element,\n          model: this.dragModel\n        });\n      }\n    }\n  }, {\n    key: \"onMousedown\",\n    value: function onMousedown(event) {\n      var _this3 = this;\n\n      // we only want to drag the inner header text\n      var isDragElm = event.target.classList.contains('draggable');\n\n      if (isDragElm && (this.dragX || this.dragY)) {\n        event.preventDefault();\n        this.isDragging = true;\n        var mouseDownPos = {\n          x: event.clientX,\n          y: event.clientY\n        };\n        var mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe(function (ev) {\n          return _this3.onMouseup(ev);\n        });\n        var mouseMoveSub = fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(function (ev) {\n          return _this3.move(ev, mouseDownPos);\n        });\n        this.subscription.add(mouseMoveSub);\n        this.dragStart.emit({\n          event: event,\n          element: this.element,\n          model: this.dragModel\n        });\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(event, mouseDownPos) {\n      if (!this.isDragging) return;\n      var x = event.clientX - mouseDownPos.x;\n      var y = event.clientY - mouseDownPos.y;\n      if (this.dragX) this.element.style.left = \"\".concat(x, \"px\");\n      if (this.dragY) this.element.style.top = \"\".concat(y, \"px\");\n      this.element.classList.add('dragging');\n      this.dragging.emit({\n        event: event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }, {\n    key: \"_destroySubscription\",\n    value: function _destroySubscription() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = undefined;\n      }\n    }\n  }]);\n\n  return DraggableDirective;\n}();\n\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) {\n  return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDraggableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DraggableDirective,\n  selectors: [[\"\", \"draggable\", \"\"]],\n  inputs: {\n    dragX: \"dragX\",\n    dragY: \"dragY\",\n    dragEventTarget: \"dragEventTarget\",\n    dragModel: \"dragModel\"\n  },\n  outputs: {\n    dragStart: \"dragStart\",\n    dragging: \"dragging\",\n    dragEnd: \"dragEnd\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nDraggableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], DraggableDirective.prototype, \"dragEventTarget\", void 0);\n\n__decorate([Input()], DraggableDirective.prototype, \"dragModel\", void 0);\n\n__decorate([Input()], DraggableDirective.prototype, \"dragX\", void 0);\n\n__decorate([Input()], DraggableDirective.prototype, \"dragY\", void 0);\n\n__decorate([Output()], DraggableDirective.prototype, \"dragStart\", void 0);\n\n__decorate([Output()], DraggableDirective.prototype, \"dragging\", void 0);\n\n__decorate([Output()], DraggableDirective.prototype, \"dragEnd\", void 0);\n\nvar ResizeableDirective = /*#__PURE__*/function () {\n  function ResizeableDirective(element, renderer) {\n    _classCallCheck(this, ResizeableDirective);\n\n    this.renderer = renderer;\n    this.resizeEnabled = true;\n    this.resize = new EventEmitter();\n    this.resizing = false;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(ResizeableDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var renderer2 = this.renderer;\n      this.resizeHandle = renderer2.createElement('span');\n\n      if (this.resizeEnabled) {\n        renderer2.addClass(this.resizeHandle, 'resize-handle');\n      } else {\n        renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n      }\n\n      renderer2.appendChild(this.element, this.resizeHandle);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroySubscription();\n\n      if (this.renderer.destroyNode) {\n        this.renderer.destroyNode(this.resizeHandle);\n      } else if (this.resizeHandle) {\n        this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n      }\n    }\n  }, {\n    key: \"onMouseup\",\n    value: function onMouseup() {\n      this.resizing = false;\n\n      if (this.subscription && !this.subscription.closed) {\n        this._destroySubscription();\n\n        this.resize.emit(this.element.clientWidth);\n      }\n    }\n  }, {\n    key: \"onMousedown\",\n    value: function onMousedown(event) {\n      var _this4 = this;\n\n      var isHandle = event.target.classList.contains('resize-handle');\n      var initialWidth = this.element.clientWidth;\n      var mouseDownScreenX = event.screenX;\n\n      if (isHandle) {\n        event.stopPropagation();\n        this.resizing = true;\n        var mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe(function (ev) {\n          return _this4.onMouseup();\n        });\n        var mouseMoveSub = fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(function (e) {\n          return _this4.move(e, initialWidth, mouseDownScreenX);\n        });\n        this.subscription.add(mouseMoveSub);\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(event, initialWidth, mouseDownScreenX) {\n      var movementX = event.screenX - mouseDownScreenX;\n      var newWidth = initialWidth + movementX;\n      var overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n      var underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n      if (overMinWidth && underMaxWidth) {\n        this.element.style.width = \"\".concat(newWidth, \"px\");\n      }\n    }\n  }, {\n    key: \"_destroySubscription\",\n    value: function _destroySubscription() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = undefined;\n      }\n    }\n  }]);\n\n  return ResizeableDirective;\n}();\n\nResizeableDirective.ɵfac = function ResizeableDirective_Factory(t) {\n  return new (t || ResizeableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nResizeableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ResizeableDirective,\n  selectors: [[\"\", \"resizeable\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ResizeableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function ResizeableDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"resizeable\", ctx.resizeEnabled);\n    }\n  },\n  inputs: {\n    resizeEnabled: \"resizeEnabled\",\n    minWidth: \"minWidth\",\n    maxWidth: \"maxWidth\"\n  },\n  outputs: {\n    resize: \"resize\"\n  }\n});\n\nResizeableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input()], ResizeableDirective.prototype, \"resizeEnabled\", void 0);\n\n__decorate([Input()], ResizeableDirective.prototype, \"minWidth\", void 0);\n\n__decorate([Input()], ResizeableDirective.prototype, \"maxWidth\", void 0);\n\n__decorate([Output()], ResizeableDirective.prototype, \"resize\", void 0);\n\n__decorate([HostListener('mousedown', ['$event'])], ResizeableDirective.prototype, \"onMousedown\", null);\n\nvar OrderableDirective = /*#__PURE__*/function () {\n  function OrderableDirective(differs, document) {\n    _classCallCheck(this, OrderableDirective);\n\n    this.document = document;\n    this.reorder = new EventEmitter();\n    this.targetChanged = new EventEmitter();\n    this.differ = differs.find({}).create();\n  }\n\n  _createClass(OrderableDirective, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      // HACK: Investigate Better Way\n      this.updateSubscriptions();\n      this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.draggables.forEach(function (d) {\n        d.dragStart.unsubscribe();\n        d.dragging.unsubscribe();\n        d.dragEnd.unsubscribe();\n      });\n    }\n  }, {\n    key: \"updateSubscriptions\",\n    value: function updateSubscriptions() {\n      var _this5 = this;\n\n      var diffs = this.differ.diff(this.createMapDiffs());\n\n      if (diffs) {\n        var subscribe = function subscribe(_ref) {\n          var currentValue = _ref.currentValue,\n              previousValue = _ref.previousValue;\n          unsubscribe({\n            previousValue: previousValue\n          });\n\n          if (currentValue) {\n            currentValue.dragStart.subscribe(_this5.onDragStart.bind(_this5));\n            currentValue.dragging.subscribe(_this5.onDragging.bind(_this5));\n            currentValue.dragEnd.subscribe(_this5.onDragEnd.bind(_this5));\n          }\n        };\n\n        var unsubscribe = function unsubscribe(_ref2) {\n          var previousValue = _ref2.previousValue;\n\n          if (previousValue) {\n            previousValue.dragStart.unsubscribe();\n            previousValue.dragging.unsubscribe();\n            previousValue.dragEnd.unsubscribe();\n          }\n        };\n\n        diffs.forEachAddedItem(subscribe); // diffs.forEachChangedItem(subscribe.bind(this));\n\n        diffs.forEachRemovedItem(unsubscribe);\n      }\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart() {\n      this.positions = {};\n      var i = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.draggables.toArray()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dragger = _step.value;\n          var elm = dragger.element;\n          var left = parseInt(elm.offsetLeft.toString(), 0);\n          this.positions[dragger.dragModel.prop] = {\n            left: left,\n            right: left + parseInt(elm.offsetWidth.toString(), 0),\n            index: i++,\n            element: elm\n          };\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"onDragging\",\n    value: function onDragging(_ref3) {\n      var element = _ref3.element,\n          model = _ref3.model,\n          event = _ref3.event;\n      var prevPos = this.positions[model.prop];\n      var target = this.isTarget(model, event);\n\n      if (target) {\n        if (this.lastDraggingIndex !== target.i) {\n          this.targetChanged.emit({\n            prevIndex: this.lastDraggingIndex,\n            newIndex: target.i,\n            initialIndex: prevPos.index\n          });\n          this.lastDraggingIndex = target.i;\n        }\n      } else if (this.lastDraggingIndex !== prevPos.index) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = prevPos.index;\n      }\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(_ref4) {\n      var element = _ref4.element,\n          model = _ref4.model,\n          event = _ref4.event;\n      var prevPos = this.positions[model.prop];\n      var target = this.isTarget(model, event);\n\n      if (target) {\n        this.reorder.emit({\n          prevIndex: prevPos.index,\n          newIndex: target.i,\n          model: model\n        });\n      }\n\n      this.lastDraggingIndex = undefined;\n      element.style.left = 'auto';\n    }\n  }, {\n    key: \"isTarget\",\n    value: function isTarget(model, event) {\n      var _this6 = this;\n\n      var i = 0;\n      var x = event.x || event.clientX;\n      var y = event.y || event.clientY;\n      var targets = this.document.elementsFromPoint(x, y);\n\n      var _loop = function _loop(prop) {\n        // current column position which throws event.\n        var pos = _this6.positions[prop]; // since we drag the inner span, we need to find it in the elements at the cursor\n\n        if (model.prop !== prop && targets.find(function (el) {\n          return el === pos.element;\n        })) {\n          return {\n            v: {\n              pos: pos,\n              i: i\n            }\n          };\n        }\n\n        i++;\n      };\n\n      for (var prop in this.positions) {\n        var _ret = _loop(prop);\n\n        if (typeof _ret === \"object\") return _ret.v;\n      }\n    }\n  }, {\n    key: \"createMapDiffs\",\n    value: function createMapDiffs() {\n      return this.draggables.toArray().reduce(function (acc, curr) {\n        acc[curr.dragModel.$$id] = curr;\n        return acc;\n      }, {});\n    }\n  }]);\n\n  return OrderableDirective;\n}();\n\nOrderableDirective.ɵfac = function OrderableDirective_Factory(t) {\n  return new (t || OrderableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nOrderableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: OrderableDirective,\n  selectors: [[\"\", \"orderable\", \"\"]],\n  contentQueries: function OrderableDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DraggableDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.draggables = _t);\n    }\n  },\n  outputs: {\n    reorder: \"reorder\",\n    targetChanged: \"targetChanged\"\n  }\n});\n\nOrderableDirective.ctorParameters = function () {\n  return [{\n    type: KeyValueDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n__decorate([Output()], OrderableDirective.prototype, \"reorder\", void 0);\n\n__decorate([Output()], OrderableDirective.prototype, \"targetChanged\", void 0);\n\n__decorate([ContentChildren(DraggableDirective, {\n  descendants: true\n})], OrderableDirective.prototype, \"draggables\", void 0);\n\nOrderableDirective = __decorate([__param(1, Inject(DOCUMENT))], OrderableDirective);\n\nvar LongPressDirective = /*#__PURE__*/function () {\n  function LongPressDirective() {\n    _classCallCheck(this, LongPressDirective);\n\n    this.pressEnabled = true;\n    this.duration = 500;\n    this.longPressStart = new EventEmitter();\n    this.longPressing = new EventEmitter();\n    this.longPressEnd = new EventEmitter();\n    this.mouseX = 0;\n    this.mouseY = 0;\n  }\n\n  _createClass(LongPressDirective, [{\n    key: \"press\",\n    get: function get() {\n      return this.pressing;\n    }\n  }, {\n    key: \"isLongPress\",\n    get: function get() {\n      return this.isLongPressing;\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      var _this7 = this;\n\n      // don't do right/middle clicks\n      if (event.which !== 1 || !this.pressEnabled) return; // don't start drag if its on resize handle\n\n      var target = event.target;\n      if (target.classList.contains('resize-handle')) return;\n      this.mouseX = event.clientX;\n      this.mouseY = event.clientY;\n      this.pressing = true;\n      this.isLongPressing = false;\n      var mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe(function (ev) {\n        return _this7.onMouseup();\n      });\n      this.timeout = setTimeout(function () {\n        _this7.isLongPressing = true;\n\n        _this7.longPressStart.emit({\n          event: event,\n          model: _this7.pressModel\n        });\n\n        _this7.subscription.add(fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(function (mouseEvent) {\n          return _this7.onMouseMove(mouseEvent);\n        }));\n\n        _this7.loop(event);\n      }, this.duration);\n      this.loop(event);\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (this.pressing && !this.isLongPressing) {\n        var xThres = Math.abs(event.clientX - this.mouseX) > 10;\n        var yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n        if (xThres || yThres) {\n          this.endPress();\n        }\n      }\n    }\n  }, {\n    key: \"loop\",\n    value: function loop(event) {\n      var _this8 = this;\n\n      if (this.isLongPressing) {\n        this.timeout = setTimeout(function () {\n          _this8.longPressing.emit({\n            event: event,\n            model: _this8.pressModel\n          });\n\n          _this8.loop(event);\n        }, 50);\n      }\n    }\n  }, {\n    key: \"endPress\",\n    value: function endPress() {\n      clearTimeout(this.timeout);\n      this.isLongPressing = false;\n      this.pressing = false;\n\n      this._destroySubscription();\n\n      this.longPressEnd.emit({\n        model: this.pressModel\n      });\n    }\n  }, {\n    key: \"onMouseup\",\n    value: function onMouseup() {\n      this.endPress();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroySubscription();\n    }\n  }, {\n    key: \"_destroySubscription\",\n    value: function _destroySubscription() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = undefined;\n      }\n    }\n  }]);\n\n  return LongPressDirective;\n}();\n\nLongPressDirective.ɵfac = function LongPressDirective_Factory(t) {\n  return new (t || LongPressDirective)();\n};\n\nLongPressDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LongPressDirective,\n  selectors: [[\"\", \"long-press\", \"\"]],\n  hostVars: 4,\n  hostBindings: function LongPressDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function LongPressDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"press\", ctx.press)(\"longpress\", ctx.isLongPress);\n    }\n  },\n  inputs: {\n    pressEnabled: \"pressEnabled\",\n    duration: \"duration\",\n    pressModel: \"pressModel\"\n  },\n  outputs: {\n    longPressStart: \"longPressStart\",\n    longPressing: \"longPressing\",\n    longPressEnd: \"longPressEnd\"\n  }\n});\n\n__decorate([Input()], LongPressDirective.prototype, \"pressEnabled\", void 0);\n\n__decorate([Input()], LongPressDirective.prototype, \"pressModel\", void 0);\n\n__decorate([Input()], LongPressDirective.prototype, \"duration\", void 0);\n\n__decorate([Output()], LongPressDirective.prototype, \"longPressStart\", void 0);\n\n__decorate([Output()], LongPressDirective.prototype, \"longPressing\", void 0);\n\n__decorate([Output()], LongPressDirective.prototype, \"longPressEnd\", void 0);\n\n__decorate([HostBinding('class.press')], LongPressDirective.prototype, \"press\", null);\n\n__decorate([HostBinding('class.longpress')], LongPressDirective.prototype, \"isLongPress\", null);\n\n__decorate([HostListener('mousedown', ['$event'])], LongPressDirective.prototype, \"onMouseDown\", null);\n\nvar ScrollerComponent = /*#__PURE__*/function () {\n  function ScrollerComponent(ngZone, element, renderer) {\n    _classCallCheck(this, ScrollerComponent);\n\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.scrollbarV = false;\n    this.scrollbarH = false;\n    this.scroll = new EventEmitter();\n    this.scrollYPos = 0;\n    this.scrollXPos = 0;\n    this.prevScrollYPos = 0;\n    this.prevScrollXPos = 0;\n    this._scrollEventListener = null;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(ScrollerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // manual bind so we don't always listen\n      if (this.scrollbarV || this.scrollbarH) {\n        var renderer = this.renderer;\n        this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n        this._scrollEventListener = this.onScrolled.bind(this);\n        this.parentElement.addEventListener('scroll', this._scrollEventListener);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._scrollEventListener) {\n        this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n        this._scrollEventListener = null;\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offsetY) {\n      if (this.parentElement) {\n        this.parentElement.scrollTop = offsetY;\n      }\n    }\n  }, {\n    key: \"onScrolled\",\n    value: function onScrolled(event) {\n      var _this9 = this;\n\n      var dom = event.currentTarget;\n      requestAnimationFrame(function () {\n        _this9.scrollYPos = dom.scrollTop;\n        _this9.scrollXPos = dom.scrollLeft;\n\n        _this9.updateOffset();\n      });\n    }\n  }, {\n    key: \"updateOffset\",\n    value: function updateOffset() {\n      var direction;\n\n      if (this.scrollYPos < this.prevScrollYPos) {\n        direction = 'down';\n      } else if (this.scrollYPos > this.prevScrollYPos) {\n        direction = 'up';\n      }\n\n      this.scroll.emit({\n        direction: direction,\n        scrollYPos: this.scrollYPos,\n        scrollXPos: this.scrollXPos\n      });\n      this.prevScrollYPos = this.scrollYPos;\n      this.prevScrollXPos = this.scrollXPos;\n    }\n  }]);\n\n  return ScrollerComponent;\n}();\n\nScrollerComponent.ɵfac = function ScrollerComponent_Factory(t) {\n  return new (t || ScrollerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nScrollerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ScrollerComponent,\n  selectors: [[\"datatable-scroller\"]],\n  hostAttrs: [1, \"datatable-scroll\"],\n  hostVars: 4,\n  hostBindings: function ScrollerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.scrollHeight, \"px\")(\"width\", ctx.scrollWidth, \"px\");\n    }\n  },\n  inputs: {\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    scrollHeight: \"scrollHeight\",\n    scrollWidth: \"scrollWidth\"\n  },\n  outputs: {\n    scroll: \"scroll\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ScrollerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nScrollerComponent.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input()], ScrollerComponent.prototype, \"scrollbarV\", void 0);\n\n__decorate([Input()], ScrollerComponent.prototype, \"scrollbarH\", void 0);\n\n__decorate([HostBinding('style.height.px'), Input()], ScrollerComponent.prototype, \"scrollHeight\", void 0);\n\n__decorate([HostBinding('style.width.px'), Input()], ScrollerComponent.prototype, \"scrollWidth\", void 0);\n\n__decorate([Output()], ScrollerComponent.prototype, \"scroll\", void 0);\n\nvar DatatableGroupHeaderTemplateDirective = function DatatableGroupHeaderTemplateDirective(template) {\n  _classCallCheck(this, DatatableGroupHeaderTemplateDirective);\n\n  this.template = template;\n};\n\nDatatableGroupHeaderTemplateDirective.ɵfac = function DatatableGroupHeaderTemplateDirective_Factory(t) {\n  return new (t || DatatableGroupHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDatatableGroupHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatatableGroupHeaderTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-group-header-template\", \"\"]]\n});\n\nDatatableGroupHeaderTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nvar DatatableGroupHeaderDirective = /*#__PURE__*/function () {\n  function DatatableGroupHeaderDirective() {\n    _classCallCheck(this, DatatableGroupHeaderDirective);\n\n    /**\n     * Row height is required when virtual scroll is enabled.\n     */\n    this.rowHeight = 0;\n    /**\n     * Track toggling of group visibility\n     */\n\n    this.toggle = new EventEmitter();\n  }\n\n  _createClass(DatatableGroupHeaderDirective, [{\n    key: \"template\",\n    get: function get() {\n      return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of a group\n     */\n\n  }, {\n    key: \"toggleExpandGroup\",\n    value: function toggleExpandGroup(group) {\n      this.toggle.emit({\n        type: 'group',\n        value: group\n      });\n    }\n    /**\n     * Expand all groups\n     */\n\n  }, {\n    key: \"expandAllGroups\",\n    value: function expandAllGroups() {\n      this.toggle.emit({\n        type: 'all',\n        value: true\n      });\n    }\n    /**\n     * Collapse all groups\n     */\n\n  }, {\n    key: \"collapseAllGroups\",\n    value: function collapseAllGroups() {\n      this.toggle.emit({\n        type: 'all',\n        value: false\n      });\n    }\n  }]);\n\n  return DatatableGroupHeaderDirective;\n}();\n\nDatatableGroupHeaderDirective.ɵfac = function DatatableGroupHeaderDirective_Factory(t) {\n  return new (t || DatatableGroupHeaderDirective)();\n};\n\nDatatableGroupHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatatableGroupHeaderDirective,\n  selectors: [[\"ngx-datatable-group-header\"]],\n  contentQueries: function DatatableGroupHeaderDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DatatableGroupHeaderTemplateDirective, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    rowHeight: \"rowHeight\",\n    _templateInput: [\"template\", \"_templateInput\"]\n  },\n  outputs: {\n    toggle: \"toggle\"\n  }\n});\n\n__decorate([Input()], DatatableGroupHeaderDirective.prototype, \"rowHeight\", void 0);\n\n__decorate([Input('template')], DatatableGroupHeaderDirective.prototype, \"_templateInput\", void 0);\n\n__decorate([ContentChild(DatatableGroupHeaderTemplateDirective, {\n  read: TemplateRef,\n  static: true\n})], DatatableGroupHeaderDirective.prototype, \"_templateQuery\", void 0);\n\n__decorate([Output()], DatatableGroupHeaderDirective.prototype, \"toggle\", void 0);\n/**\n * Always returns the empty string ''\n */\n\n\nfunction emptyStringGetter() {\n  return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\n\n\nfunction getterForProp(prop) {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\n\n\nfunction numericIndexGetter(row, index) {\n  if (row == null) {\n    return '';\n  } // mimic behavior of deepValueGetter\n\n\n  if (!row || index == null) {\n    return row;\n  }\n\n  var value = row[index];\n\n  if (value == null) {\n    return '';\n  }\n\n  return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\n\n\nfunction shallowValueGetter(obj, fieldName) {\n  if (obj == null) {\n    return '';\n  }\n\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  var value = obj[fieldName];\n\n  if (value == null) {\n    return '';\n  }\n\n  return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\n\n\nfunction deepValueGetter(obj, path) {\n  if (obj == null) {\n    return '';\n  }\n\n  if (!obj || !path) {\n    return obj;\n  } // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n\n\n  var current = obj[path];\n\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  var split = path.split('.');\n\n  if (split.length) {\n    for (var i = 0; i < split.length; i++) {\n      current = current[split[i]]; // if found undefined, return empty string\n\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction optionalGetterForProp(prop) {\n  return prop && function (row) {\n    return getterForProp(prop)(row, prop);\n  };\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\n\n\nfunction groupRowsByParents(rows, from, to) {\n  if (from && to) {\n    var nodeById = {};\n    var l = rows.length;\n    var node = null;\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    var uniqIDs = rows.reduce(function (arr, item) {\n      var toValue = to(item);\n\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n\n      return arr;\n    }, []);\n\n    for (var i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (var _i = 0; _i < l; _i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[_i])];\n      var parent = 0;\n      var fromValue = from(node.row);\n\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    var resolvedRows = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [].concat(_toConsumableArray(resolvedRows), [this.row]);\n    }, true);\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nvar TreeNode = /*#__PURE__*/function () {\n  function TreeNode() {\n    var row = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, TreeNode);\n\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  _createClass(TreeNode, [{\n    key: \"flatten\",\n    value: function flatten(f, recursive) {\n      if (this.row['treeStatus'] === 'expanded') {\n        for (var i = 0, l = this.children.length; i < l; i++) {\n          var child = this.children[i];\n          f.apply(child, Array.prototype.slice.call(arguments, 2));\n          if (recursive) child.flatten.apply(child, arguments);\n        }\n      }\n    }\n  }]);\n\n  return TreeNode;\n}();\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\n\n\nfunction camelCase(str) {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' '); // put a space before an uppercase letter\n\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 '); // Lower case first character and some other stuff\n\n  str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase(); // uppercase characters preceded by a space or number\n\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n  return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\n\n\nfunction deCamelCase(str) {\n  return str.replace(/([A-Z])/g, function (match) {\n    return \" \".concat(match);\n  }).replace(/^./, function (match) {\n    return match.toUpperCase();\n  });\n}\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\n\n\nfunction id() {\n  return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n}\n/**\n * Sets the column defaults\n */\n\n\nfunction setColumnDefaults(columns) {\n  if (!columns) return; // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n\n  var treeColumnFound = false;\n\n  var _iterator2 = _createForOfIteratorHelper(columns),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var column = _step2.value;\n\n      if (!column.$$id) {\n        column.$$id = id();\n      } // prop can be numeric; zero is valid not a missing prop\n      // translate name => prop\n\n\n      if (isNullOrUndefined(column.prop) && column.name) {\n        column.prop = camelCase(column.name);\n      }\n\n      if (!column.$$valueGetter) {\n        column.$$valueGetter = getterForProp(column.prop);\n      } // format props if no name passed\n\n\n      if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n        column.name = deCamelCase(String(column.prop));\n      }\n\n      if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n        column.name = ''; // Fixes IE and Edge displaying `null`\n      }\n\n      if (!column.hasOwnProperty('resizeable')) {\n        column.resizeable = true;\n      }\n\n      if (!column.hasOwnProperty('sortable')) {\n        column.sortable = true;\n      }\n\n      if (!column.hasOwnProperty('draggable')) {\n        column.draggable = true;\n      }\n\n      if (!column.hasOwnProperty('canAutoResize')) {\n        column.canAutoResize = true;\n      }\n\n      if (!column.hasOwnProperty('width')) {\n        column.width = 150;\n      }\n\n      if (!column.hasOwnProperty('isTreeColumn')) {\n        column.isTreeColumn = false;\n      } else {\n        if (column.isTreeColumn && !treeColumnFound) {\n          // If the first column with isTreeColumn is true found\n          // we mark that treeCoulmn is found\n          treeColumnFound = true;\n        } else {\n          // After that isTreeColumn property for any other column\n          // will be set as false\n          column.isTreeColumn = false;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\nfunction isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n */\n\n\nfunction translateTemplates(templates) {\n  var result = [];\n\n  var _iterator3 = _createForOfIteratorHelper(templates),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var temp = _step3.value;\n      var col = {};\n      var props = Object.getOwnPropertyNames(temp);\n\n      var _iterator4 = _createForOfIteratorHelper(props),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var prop = _step4.value;\n          col[prop] = temp[prop];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (temp.headerTemplate) {\n        col.headerTemplate = temp.headerTemplate;\n      }\n\n      if (temp.cellTemplate) {\n        col.cellTemplate = temp.cellTemplate;\n      }\n\n      if (temp.summaryFunc) {\n        col.summaryFunc = temp.summaryFunc;\n      }\n\n      if (temp.summaryTemplate) {\n        col.summaryTemplate = temp.summaryTemplate;\n      }\n\n      result.push(col);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return result;\n}\n\nvar ColumnMode;\n\n(function (ColumnMode) {\n  ColumnMode[\"standard\"] = \"standard\";\n  ColumnMode[\"flex\"] = \"flex\";\n  ColumnMode[\"force\"] = \"force\";\n})(ColumnMode || (ColumnMode = {}));\n\nvar SelectionType;\n\n(function (SelectionType) {\n  SelectionType[\"single\"] = \"single\";\n  SelectionType[\"multi\"] = \"multi\";\n  SelectionType[\"multiClick\"] = \"multiClick\";\n  SelectionType[\"cell\"] = \"cell\";\n  SelectionType[\"checkbox\"] = \"checkbox\";\n})(SelectionType || (SelectionType = {}));\n\nvar SortType;\n\n(function (SortType) {\n  SortType[\"single\"] = \"single\";\n  SortType[\"multi\"] = \"multi\";\n})(SortType || (SortType = {}));\n\nvar ContextmenuType;\n\n(function (ContextmenuType) {\n  ContextmenuType[\"header\"] = \"header\";\n  ContextmenuType[\"body\"] = \"body\";\n})(ContextmenuType || (ContextmenuType = {}));\n\nvar DataTableColumnHeaderDirective = function DataTableColumnHeaderDirective(template) {\n  _classCallCheck(this, DataTableColumnHeaderDirective);\n\n  this.template = template;\n};\n\nDataTableColumnHeaderDirective.ɵfac = function DataTableColumnHeaderDirective_Factory(t) {\n  return new (t || DataTableColumnHeaderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDataTableColumnHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataTableColumnHeaderDirective,\n  selectors: [[\"\", \"ngx-datatable-header-template\", \"\"]]\n});\n\nDataTableColumnHeaderDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nvar DataTableColumnCellDirective = function DataTableColumnCellDirective(template) {\n  _classCallCheck(this, DataTableColumnCellDirective);\n\n  this.template = template;\n};\n\nDataTableColumnCellDirective.ɵfac = function DataTableColumnCellDirective_Factory(t) {\n  return new (t || DataTableColumnCellDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDataTableColumnCellDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataTableColumnCellDirective,\n  selectors: [[\"\", \"ngx-datatable-cell-template\", \"\"]]\n});\n\nDataTableColumnCellDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nvar DataTableColumnCellTreeToggle = function DataTableColumnCellTreeToggle(template) {\n  _classCallCheck(this, DataTableColumnCellTreeToggle);\n\n  this.template = template;\n};\n\nDataTableColumnCellTreeToggle.ɵfac = function DataTableColumnCellTreeToggle_Factory(t) {\n  return new (t || DataTableColumnCellTreeToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDataTableColumnCellTreeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataTableColumnCellTreeToggle,\n  selectors: [[\"\", \"ngx-datatable-tree-toggle\", \"\"]]\n});\n\nDataTableColumnCellTreeToggle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nvar DataTableColumnDirective = /*#__PURE__*/function () {\n  function DataTableColumnDirective(columnChangesService) {\n    _classCallCheck(this, DataTableColumnDirective);\n\n    this.columnChangesService = columnChangesService;\n    this.isFirstChange = true;\n  }\n\n  _createClass(DataTableColumnDirective, [{\n    key: \"cellTemplate\",\n    get: function get() {\n      return this._cellTemplateInput || this._cellTemplateQuery;\n    }\n  }, {\n    key: \"headerTemplate\",\n    get: function get() {\n      return this._headerTemplateInput || this._headerTemplateQuery;\n    }\n  }, {\n    key: \"treeToggleTemplate\",\n    get: function get() {\n      return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      if (this.isFirstChange) {\n        this.isFirstChange = false;\n      } else {\n        this.columnChangesService.onInputChange();\n      }\n    }\n  }]);\n\n  return DataTableColumnDirective;\n}();\n\nDataTableColumnDirective.ɵfac = function DataTableColumnDirective_Factory(t) {\n  return new (t || DataTableColumnDirective)(ɵngcc0.ɵɵdirectiveInject(ColumnChangesService));\n};\n\nDataTableColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataTableColumnDirective,\n  selectors: [[\"ngx-datatable-column\"]],\n  contentQueries: function DataTableColumnDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnCellDirective, true, TemplateRef);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnHeaderDirective, true, TemplateRef);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnCellTreeToggle, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._cellTemplateQuery = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerTemplateQuery = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._treeToggleTemplateQuery = _t.first);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    prop: \"prop\",\n    frozenLeft: \"frozenLeft\",\n    frozenRight: \"frozenRight\",\n    flexGrow: \"flexGrow\",\n    resizeable: \"resizeable\",\n    comparator: \"comparator\",\n    pipe: \"pipe\",\n    sortable: \"sortable\",\n    draggable: \"draggable\",\n    canAutoResize: \"canAutoResize\",\n    minWidth: \"minWidth\",\n    width: \"width\",\n    maxWidth: \"maxWidth\",\n    checkboxable: \"checkboxable\",\n    headerCheckboxable: \"headerCheckboxable\",\n    headerClass: \"headerClass\",\n    cellClass: \"cellClass\",\n    isTreeColumn: \"isTreeColumn\",\n    treeLevelIndent: \"treeLevelIndent\",\n    summaryFunc: \"summaryFunc\",\n    summaryTemplate: \"summaryTemplate\",\n    _cellTemplateInput: [\"cellTemplate\", \"_cellTemplateInput\"],\n    _headerTemplateInput: [\"headerTemplate\", \"_headerTemplateInput\"],\n    _treeToggleTemplateInput: [\"treeToggleTemplate\", \"_treeToggleTemplateInput\"]\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nDataTableColumnDirective.ctorParameters = function () {\n  return [{\n    type: ColumnChangesService\n  }];\n};\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"name\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"prop\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"frozenLeft\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"frozenRight\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"flexGrow\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"resizeable\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"comparator\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"pipe\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"sortable\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"draggable\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"canAutoResize\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"minWidth\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"width\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"maxWidth\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"checkboxable\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"headerCheckboxable\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"headerClass\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"cellClass\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"isTreeColumn\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"treeLevelIndent\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"summaryFunc\", void 0);\n\n__decorate([Input()], DataTableColumnDirective.prototype, \"summaryTemplate\", void 0);\n\n__decorate([Input('cellTemplate')], DataTableColumnDirective.prototype, \"_cellTemplateInput\", void 0);\n\n__decorate([ContentChild(DataTableColumnCellDirective, {\n  read: TemplateRef,\n  static: true\n})], DataTableColumnDirective.prototype, \"_cellTemplateQuery\", void 0);\n\n__decorate([Input('headerTemplate')], DataTableColumnDirective.prototype, \"_headerTemplateInput\", void 0);\n\n__decorate([ContentChild(DataTableColumnHeaderDirective, {\n  read: TemplateRef,\n  static: true\n})], DataTableColumnDirective.prototype, \"_headerTemplateQuery\", void 0);\n\n__decorate([Input('treeToggleTemplate')], DataTableColumnDirective.prototype, \"_treeToggleTemplateInput\", void 0);\n\n__decorate([ContentChild(DataTableColumnCellTreeToggle, {\n  read: TemplateRef,\n  static: true\n})], DataTableColumnDirective.prototype, \"_treeToggleTemplateQuery\", void 0);\n\nvar DatatableRowDetailTemplateDirective = function DatatableRowDetailTemplateDirective(template) {\n  _classCallCheck(this, DatatableRowDetailTemplateDirective);\n\n  this.template = template;\n};\n\nDatatableRowDetailTemplateDirective.ɵfac = function DatatableRowDetailTemplateDirective_Factory(t) {\n  return new (t || DatatableRowDetailTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nDatatableRowDetailTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatatableRowDetailTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-row-detail-template\", \"\"]]\n});\n\nDatatableRowDetailTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nvar DatatableRowDetailDirective = /*#__PURE__*/function () {\n  function DatatableRowDetailDirective() {\n    _classCallCheck(this, DatatableRowDetailDirective);\n\n    /**\n     * The detail row height is required especially\n     * when virtual scroll is enabled.\n     */\n    this.rowHeight = 0;\n    /**\n     * Row detail row visbility was toggled.\n     */\n\n    this.toggle = new EventEmitter();\n  }\n\n  _createClass(DatatableRowDetailDirective, [{\n    key: \"template\",\n    get: function get() {\n      return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of the row\n     */\n\n  }, {\n    key: \"toggleExpandRow\",\n    value: function toggleExpandRow(row) {\n      this.toggle.emit({\n        type: 'row',\n        value: row\n      });\n    }\n    /**\n     * API method to expand all the rows.\n     */\n\n  }, {\n    key: \"expandAllRows\",\n    value: function expandAllRows() {\n      this.toggle.emit({\n        type: 'all',\n        value: true\n      });\n    }\n    /**\n     * API method to collapse all the rows.\n     */\n\n  }, {\n    key: \"collapseAllRows\",\n    value: function collapseAllRows() {\n      this.toggle.emit({\n        type: 'all',\n        value: false\n      });\n    }\n  }]);\n\n  return DatatableRowDetailDirective;\n}();\n\nDatatableRowDetailDirective.ɵfac = function DatatableRowDetailDirective_Factory(t) {\n  return new (t || DatatableRowDetailDirective)();\n};\n\nDatatableRowDetailDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatatableRowDetailDirective,\n  selectors: [[\"ngx-datatable-row-detail\"]],\n  contentQueries: function DatatableRowDetailDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DatatableRowDetailTemplateDirective, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    rowHeight: \"rowHeight\",\n    _templateInput: [\"template\", \"_templateInput\"]\n  },\n  outputs: {\n    toggle: \"toggle\"\n  }\n});\n\n__decorate([Input()], DatatableRowDetailDirective.prototype, \"rowHeight\", void 0);\n\n__decorate([Input('template')], DatatableRowDetailDirective.prototype, \"_templateInput\", void 0);\n\n__decorate([ContentChild(DatatableRowDetailTemplateDirective, {\n  read: TemplateRef,\n  static: true\n})], DatatableRowDetailDirective.prototype, \"_templateQuery\", void 0);\n\n__decorate([Output()], DatatableRowDetailDirective.prototype, \"toggle\", void 0);\n\nvar DatatableFooterDirective = /*#__PURE__*/function () {\n  function DatatableFooterDirective() {\n    _classCallCheck(this, DatatableFooterDirective);\n  }\n\n  _createClass(DatatableFooterDirective, [{\n    key: \"template\",\n    get: function get() {\n      return this._templateInput || this._templateQuery;\n    }\n  }]);\n\n  return DatatableFooterDirective;\n}();\n\nDatatableFooterDirective.ɵfac = function DatatableFooterDirective_Factory(t) {\n  return new (t || DatatableFooterDirective)();\n};\n\nDatatableFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatatableFooterDirective,\n  selectors: [[\"ngx-datatable-footer\"]],\n  contentQueries: function DatatableFooterDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DataTableFooterTemplateDirective, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    footerHeight: \"footerHeight\",\n    totalMessage: \"totalMessage\",\n    selectedMessage: \"selectedMessage\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    _templateInput: [\"template\", \"_templateInput\"]\n  }\n});\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"footerHeight\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"totalMessage\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"selectedMessage\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"pagerLeftArrowIcon\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"pagerRightArrowIcon\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"pagerPreviousIcon\", void 0);\n\n__decorate([Input()], DatatableFooterDirective.prototype, \"pagerNextIcon\", void 0);\n\n__decorate([Input('template')], DatatableFooterDirective.prototype, \"_templateInput\", void 0);\n\n__decorate([ContentChild(DataTableFooterTemplateDirective, {\n  read: TemplateRef\n})], DatatableFooterDirective.prototype, \"_templateQuery\", void 0);\n/**\n * Returns the columns by pin.\n */\n\n\nfunction columnsByPin(cols) {\n  var ret = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    var _iterator5 = _createForOfIteratorHelper(cols),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var col = _step5.value;\n\n        if (col.frozenLeft) {\n          ret.left.push(col);\n        } else if (col.frozenRight) {\n          ret.right.push(col);\n        } else {\n          ret.center.push(col);\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n\n  return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n */\n\n\nfunction columnGroupWidths(groups, all) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n/**\n * Calculates the total width of all columns and their groups\n */\n\n\nfunction columnTotalWidth(columns, prop) {\n  var totalWidth = 0;\n\n  if (columns) {\n    var _iterator6 = _createForOfIteratorHelper(columns),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var c = _step6.value;\n        var has = prop && c[prop];\n        var width = has ? c[prop] : c.width;\n        totalWidth = totalWidth + parseFloat(width);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n  }\n\n  return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n */\n\n\nfunction columnsTotalWidth(columns, prop) {\n  var totalWidth = 0;\n\n  var _iterator7 = _createForOfIteratorHelper(columns),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var column = _step7.value;\n      var has = prop && column[prop];\n      totalWidth = totalWidth + (has ? column[prop] : column.width);\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return totalWidth;\n}\n\nfunction columnsByPinArr(val) {\n  var colsByPinArr = [];\n  var colsByPin = columnsByPin(val);\n  colsByPinArr.push({\n    type: 'left',\n    columns: colsByPin['left']\n  });\n  colsByPinArr.push({\n    type: 'center',\n    columns: colsByPin['center']\n  });\n  colsByPinArr.push({\n    type: 'right',\n    columns: colsByPin['right']\n  });\n  return colsByPinArr;\n}\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\n\n\nvar RowHeightCache = /*#__PURE__*/function () {\n  function RowHeightCache() {\n    _classCallCheck(this, RowHeightCache);\n\n    /**\n     * Tree Array stores the cumulative information of the row heights to perform efficient\n     * range queries and updates.  Currently the tree is initialized to the base row\n     * height instead of the detail row height.\n     */\n    this.treeArray = [];\n  }\n  /**\n   * Clear the Tree array.\n   */\n\n\n  _createClass(RowHeightCache, [{\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.treeArray = [];\n    }\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param rows The array of rows which contain the expanded status.\n     * @param rowHeight The row height.\n     * @param detailRowHeight The detail row height.\n     */\n\n  }, {\n    key: \"initCache\",\n    value: function initCache(details) {\n      var rows = details.rows,\n          rowHeight = details.rowHeight,\n          detailRowHeight = details.detailRowHeight,\n          externalVirtual = details.externalVirtual,\n          rowCount = details.rowCount,\n          rowIndexes = details.rowIndexes,\n          rowExpansions = details.rowExpansions;\n      var isFn = typeof rowHeight === 'function';\n      var isDetailFn = typeof detailRowHeight === 'function';\n\n      if (!isFn && isNaN(rowHeight)) {\n        throw new Error(\"Row Height cache initialization failed. Please ensure that 'rowHeight' is a\\n        valid number or function value: (\".concat(rowHeight, \") when 'scrollbarV' is enabled.\"));\n      } // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n\n\n      if (!isDetailFn && isNaN(detailRowHeight)) {\n        throw new Error(\"Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\\n        valid number or function value: (\".concat(detailRowHeight, \") when 'scrollbarV' is enabled.\"));\n      }\n\n      var n = externalVirtual ? rowCount : rows.length;\n      this.treeArray = new Array(n);\n\n      for (var i = 0; i < n; ++i) {\n        this.treeArray[i] = 0;\n      }\n\n      for (var _i2 = 0; _i2 < n; ++_i2) {\n        var row = rows[_i2];\n        var currentRowHeight = rowHeight;\n\n        if (isFn) {\n          currentRowHeight = rowHeight(row);\n        } // Add the detail row height to the already expanded rows.\n        // This is useful for the table that goes through a filter or sort.\n\n\n        var expanded = rowExpansions.has(row);\n\n        if (row && expanded) {\n          if (isDetailFn) {\n            var index = rowIndexes.get(row);\n            currentRowHeight += detailRowHeight(row, index);\n          } else {\n            currentRowHeight += detailRowHeight;\n          }\n        }\n\n        this.update(_i2, currentRowHeight);\n      }\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     */\n\n  }, {\n    key: \"getRowIndex\",\n    value: function getRowIndex(scrollY) {\n      if (scrollY === 0) return 0;\n      return this.calcRowIndex(scrollY);\n    }\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(atRowIndex, byRowHeight) {\n      if (!this.treeArray.length) {\n        throw new Error(\"Update at index \".concat(atRowIndex, \" with value \").concat(byRowHeight, \" failed:\\n        Row Height cache not initialized.\"));\n      }\n\n      var n = this.treeArray.length;\n      atRowIndex |= 0;\n\n      while (atRowIndex < n) {\n        this.treeArray[atRowIndex] += byRowHeight;\n        atRowIndex |= atRowIndex + 1;\n      }\n    }\n    /**\n     * Range Sum query from 1 to the rowIndex\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(atIndex) {\n      if (!this.treeArray.length) {\n        throw new Error(\"query at index \".concat(atIndex, \" failed: Fenwick tree array not initialized.\"));\n      }\n\n      var sum = 0;\n      atIndex |= 0;\n\n      while (atIndex >= 0) {\n        sum += this.treeArray[atIndex];\n        atIndex = (atIndex & atIndex + 1) - 1;\n      }\n\n      return sum;\n    }\n    /**\n     * Find the total height between 2 row indexes\n     */\n\n  }, {\n    key: \"queryBetween\",\n    value: function queryBetween(atIndexA, atIndexB) {\n      return this.query(atIndexB) - this.query(atIndexA - 1);\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     */\n\n  }, {\n    key: \"calcRowIndex\",\n    value: function calcRowIndex(sum) {\n      if (!this.treeArray.length) return 0;\n      var pos = -1;\n      var dataLength = this.treeArray.length; // Get the highest bit for the block size.\n\n      var highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n      for (var blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n        var nextPos = pos + blockSize;\n\n        if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n          sum -= this.treeArray[nextPos];\n          pos = nextPos;\n        }\n      }\n\n      return pos + 1;\n    }\n  }]);\n\n  return RowHeightCache;\n}();\n\nvar cache = {};\nvar testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\nvar ɵ0 = function ɵ0() {\n  var styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  var match = typeof styles !== 'undefined' ? Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) : null;\n  var pre = match !== null ? match[1] : undefined; // tslint:disable-next-line: tsr-detect-non-literal-regexp\n\n  var dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n  return dom ? {\n    dom: dom,\n    lowercase: pre,\n    css: \"-\".concat(pre, \"-\"),\n    js: pre[0].toUpperCase() + pre.substr(1)\n  } : undefined;\n}; // Get Prefix\n// http://davidwalsh.name/vendor-prefix\n\n\nvar prefix = ɵ0();\n\nfunction getVendorPrefixedName(property) {\n  var name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n} // browser detection and prefixing tools\n\n\nvar transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nvar backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nvar hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nvar hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nvar ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nvar isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nfunction translateXY(styles, x, y) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0)\");\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n    }\n  } else {\n    styles.top = \"\".concat(y, \"px\");\n    styles.left = \"\".concat(x, \"px\");\n  }\n}\n\nvar DataTableBodyComponent = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  function DataTableBodyComponent(cd) {\n    var _this10 = this;\n\n    _classCallCheck(this, DataTableBodyComponent);\n\n    this.cd = cd;\n    this.selected = [];\n    this.scroll = new EventEmitter();\n    this.page = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.select = new EventEmitter();\n    this.detailToggle = new EventEmitter();\n    this.rowContextmenu = new EventEmitter(false);\n    this.treeAction = new EventEmitter();\n    this.rowHeightsCache = new RowHeightCache();\n    this.temp = [];\n    this.offsetY = 0;\n    this.indexes = {};\n    this.rowIndexes = new WeakMap();\n    this.rowExpansions = [];\n    /**\n     * Get the height of the detail row.\n     */\n\n    this.getDetailRowHeight = function (row, index) {\n      if (!_this10.rowDetail) {\n        return 0;\n      }\n\n      var rowHeight = _this10.rowDetail.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight(row, index) : rowHeight;\n    }; // declare fn here so we can get access to the `this` property\n\n\n    this.rowTrackingFn = function (index, row) {\n      var idx = _this10.getRowIndex(row);\n\n      if (_this10.trackByProp) {\n        return row[_this10.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  _createClass(DataTableBodyComponent, [{\n    key: \"pageSize\",\n    get: function get() {\n      return this._pageSize;\n    },\n    set: function set(val) {\n      this._pageSize = val;\n      this.recalcLayout();\n    }\n  }, {\n    key: \"rows\",\n    get: function get() {\n      return this._rows;\n    },\n    set: function set(val) {\n      this._rows = val;\n      this.recalcLayout();\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return this._columns;\n    },\n    set: function set(val) {\n      this._columns = val;\n      var colsByPin = columnsByPin(val);\n      this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n    }\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return this._offset;\n    },\n    set: function set(val) {\n      this._offset = val;\n      if (!this.scrollbarV || this.scrollbarV && !this.virtualization) this.recalcLayout();\n    }\n  }, {\n    key: \"rowCount\",\n    get: function get() {\n      return this._rowCount;\n    },\n    set: function set(val) {\n      this._rowCount = val;\n      this.recalcLayout();\n    }\n  }, {\n    key: \"bodyWidth\",\n    get: function get() {\n      if (this.scrollbarH) {\n        return this.innerWidth + 'px';\n      } else {\n        return '100%';\n      }\n    }\n  }, {\n    key: \"bodyHeight\",\n    get: function get() {\n      return this._bodyHeight;\n    }\n    /**\n     * Returns if selection is enabled.\n     */\n    ,\n    set: function set(val) {\n      if (this.scrollbarV) {\n        this._bodyHeight = val + 'px';\n      } else {\n        this._bodyHeight = 'auto';\n      }\n\n      this.recalcLayout();\n    }\n  }, {\n    key: \"selectEnabled\",\n    get: function get() {\n      return !!this.selectionType;\n    }\n    /**\n     * Property that would calculate the height of scroll bar\n     * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n     * calculate scroll height automatically (as height will be undefined).\n     */\n\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      if (this.scrollbarV && this.virtualization && this.rowCount) {\n        return this.rowHeightsCache.query(this.rowCount - 1);\n      } // avoid TS7030: Not all code paths return a value.\n\n\n      return undefined;\n    }\n    /**\n     * Called after the constructor, initializing input properties\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this11 = this;\n\n      if (this.rowDetail) {\n        this.listener = this.rowDetail.toggle.subscribe(function (_ref5) {\n          var type = _ref5.type,\n              value = _ref5.value;\n\n          if (type === 'row') {\n            _this11.toggleRowExpansion(value);\n          }\n\n          if (type === 'all') {\n            _this11.toggleAllRows(value);\n          } // Refresh rows after toggle\n          // Fixes #883\n\n\n          _this11.updateIndexes();\n\n          _this11.updateRows();\n\n          _this11.cd.markForCheck();\n        });\n      }\n\n      if (this.groupHeader) {\n        this.listener = this.groupHeader.toggle.subscribe(function (_ref6) {\n          var type = _ref6.type,\n              value = _ref6.value;\n\n          if (type === 'group') {\n            _this11.toggleRowExpansion(value);\n          }\n\n          if (type === 'all') {\n            _this11.toggleAllRows(value);\n          } // Refresh rows after toggle\n          // Fixes #883\n\n\n          _this11.updateIndexes();\n\n          _this11.updateRows();\n\n          _this11.cd.markForCheck();\n        });\n      }\n    }\n    /**\n     * Called once, before the instance is destroyed.\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.rowDetail || this.groupHeader) {\n        this.listener.unsubscribe();\n      }\n    }\n    /**\n     * Updates the Y offset given a new offset.\n     */\n\n  }, {\n    key: \"updateOffsetY\",\n    value: function updateOffsetY(offset) {\n      // scroller is missing on empty table\n      if (!this.scroller) {\n        return;\n      }\n\n      if (this.scrollbarV && this.virtualization && offset) {\n        // First get the row Index that we need to move to.\n        var rowIndex = this.pageSize * offset;\n        offset = this.rowHeightsCache.query(rowIndex - 1);\n      } else if (this.scrollbarV && !this.virtualization) {\n        offset = 0;\n      }\n\n      this.scroller.setOffset(offset || 0);\n    }\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     */\n\n  }, {\n    key: \"onBodyScroll\",\n    value: function onBodyScroll(event) {\n      var scrollYPos = event.scrollYPos;\n      var scrollXPos = event.scrollXPos; // if scroll change, trigger update\n      // this is mainly used for header cell positions\n\n      if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n        this.scroll.emit({\n          offsetY: scrollYPos,\n          offsetX: scrollXPos\n        });\n      }\n\n      this.offsetY = scrollYPos;\n      this.offsetX = scrollXPos;\n      this.updateIndexes();\n      this.updatePage(event.direction);\n      this.updateRows();\n    }\n    /**\n     * Updates the page given a direction.\n     */\n\n  }, {\n    key: \"updatePage\",\n    value: function updatePage(direction) {\n      var offset = this.indexes.first / this.pageSize;\n\n      if (direction === 'up') {\n        offset = Math.ceil(offset);\n      } else if (direction === 'down') {\n        offset = Math.floor(offset);\n      }\n\n      if (direction !== undefined && !isNaN(offset)) {\n        this.page.emit({\n          offset: offset\n        });\n      }\n    }\n    /**\n     * Updates the rows in the view port\n     */\n\n  }, {\n    key: \"updateRows\",\n    value: function updateRows() {\n      var _this12 = this;\n\n      var _this$indexes = this.indexes,\n          first = _this$indexes.first,\n          last = _this$indexes.last;\n      var rowIndex = first;\n      var idx = 0;\n      var temp = []; // if grouprowsby has been specified treat row paging\n      // parameters as group paging parameters ie if limit 10 has been\n      // specified treat it as 10 groups rather than 10 rows\n\n      if (this.groupedRows) {\n        var maxRowsPerGroup = 3; // if there is only one group set the maximum number of\n        // rows per group the same as the total number of rows\n\n        if (this.groupedRows.length === 1) {\n          maxRowsPerGroup = this.groupedRows[0].value.length;\n        }\n\n        while (rowIndex < last && rowIndex < this.groupedRows.length) {\n          // Add the groups into this page\n          var group = this.groupedRows[rowIndex];\n          this.rowIndexes.set(group, rowIndex);\n\n          if (group.value) {\n            // add indexes for each group item\n            group.value.forEach(function (g, i) {\n              var _idx = \"\".concat(rowIndex, \"-\").concat(i);\n\n              _this12.rowIndexes.set(g, _idx);\n            });\n          }\n\n          temp[idx] = group;\n          idx++; // Group index in this context\n\n          rowIndex++;\n        }\n      } else {\n        while (rowIndex < last && rowIndex < this.rowCount) {\n          var row = this.rows[rowIndex];\n\n          if (row) {\n            // add indexes for each row\n            this.rowIndexes.set(row, rowIndex);\n            temp[idx] = row;\n          }\n\n          idx++;\n          rowIndex++;\n        }\n      }\n\n      this.temp = temp;\n    }\n    /**\n     * Get the row height\n     */\n\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      // if its a function return it\n      if (typeof this.rowHeight === 'function') {\n        return this.rowHeight(row);\n      }\n\n      return this.rowHeight;\n    }\n    /**\n     * @param group the group with all rows\n     */\n\n  }, {\n    key: \"getGroupHeight\",\n    value: function getGroupHeight(group) {\n      var rowHeight = 0;\n\n      if (group.value) {\n        for (var index = 0; index < group.value.length; index++) {\n          rowHeight += this.getRowAndDetailHeight(group.value[index]);\n        }\n      }\n\n      return rowHeight;\n    }\n    /**\n     * Calculate row height based on the expanded state of the row.\n     */\n\n  }, {\n    key: \"getRowAndDetailHeight\",\n    value: function getRowAndDetailHeight(row) {\n      var rowHeight = this.getRowHeight(row);\n      var expanded = this.getRowExpanded(row); // Adding detail row height if its expanded.\n\n      if (expanded) {\n        rowHeight += this.getDetailRowHeight(row);\n      }\n\n      return rowHeight;\n    }\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * @param rows the row that needs to be placed in the 2D space.\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n\n  }, {\n    key: \"getRowsStyles\",\n    value: function getRowsStyles(rows) {\n      var styles = {}; // only add styles for the group if there is a group\n\n      if (this.groupedRows) {\n        styles.width = this.columnGroupWidths.total;\n      }\n\n      if (this.scrollbarV && this.virtualization) {\n        var idx = 0;\n\n        if (this.groupedRows) {\n          // Get the latest row rowindex in a group\n          var row = rows[rows.length - 1];\n          idx = row ? this.getRowIndex(row) : 0;\n        } else {\n          idx = this.getRowIndex(rows);\n        } // const pos = idx * rowHeight;\n        // The position of this row would be the sum of all row heights\n        // until the previous row position.\n\n\n        var pos = this.rowHeightsCache.query(idx - 1);\n        translateXY(styles, 0, pos);\n      }\n\n      return styles;\n    }\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n\n  }, {\n    key: \"getBottomSummaryRowStyles\",\n    value: function getBottomSummaryRowStyles() {\n      if (!this.scrollbarV || !this.rows || !this.rows.length) {\n        return null;\n      }\n\n      var styles = {\n        position: 'absolute'\n      };\n      var pos = this.rowHeightsCache.query(this.rows.length - 1);\n      translateXY(styles, 0, pos);\n      return styles;\n    }\n    /**\n     * Hides the loading indicator\n     */\n\n  }, {\n    key: \"hideIndicator\",\n    value: function hideIndicator() {\n      var _this13 = this;\n\n      setTimeout(function () {\n        return _this13.loadingIndicator = false;\n      }, 500);\n    }\n    /**\n     * Updates the index of the rows in the viewport\n     */\n\n  }, {\n    key: \"updateIndexes\",\n    value: function updateIndexes() {\n      var first = 0;\n      var last = 0;\n\n      if (this.scrollbarV) {\n        if (this.virtualization) {\n          // Calculation of the first and last indexes will be based on where the\n          // scrollY position would be at.  The last index would be the one\n          // that shows up inside the view port the last.\n          var height = parseInt(this.bodyHeight, 0);\n          first = this.rowHeightsCache.getRowIndex(this.offsetY);\n          last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n        } else {\n          // If virtual rows are not needed\n          // We render all in one go\n          first = 0;\n          last = this.rowCount;\n        }\n      } else {\n        // The server is handling paging and will pass an array that begins with the\n        // element at a specified offset.  first should always be 0 with external paging.\n        if (!this.externalPaging) {\n          first = Math.max(this.offset * this.pageSize, 0);\n        }\n\n        last = Math.min(first + this.pageSize, this.rowCount);\n      }\n\n      this.indexes = {\n        first: first,\n        last: last\n      };\n    }\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     */\n\n  }, {\n    key: \"refreshRowHeightCache\",\n    value: function refreshRowHeightCache() {\n      if (!this.scrollbarV || this.scrollbarV && !this.virtualization) {\n        return;\n      } // clear the previous row height cache if already present.\n      // this is useful during sorts, filters where the state of the\n      // rows array is changed.\n\n\n      this.rowHeightsCache.clearCache(); // Initialize the tree only if there are rows inside the tree.\n\n      if (this.rows && this.rows.length) {\n        var rowExpansions = new Set();\n\n        var _iterator8 = _createForOfIteratorHelper(this.rows),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var row = _step8.value;\n\n            if (this.getRowExpanded(row)) {\n              rowExpansions.add(row);\n            }\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        this.rowHeightsCache.initCache({\n          rows: this.rows,\n          rowHeight: this.rowHeight,\n          detailRowHeight: this.getDetailRowHeight,\n          externalVirtual: this.scrollbarV && this.externalPaging,\n          rowCount: this.rowCount,\n          rowIndexes: this.rowIndexes,\n          rowExpansions: rowExpansions\n        });\n      }\n    }\n    /**\n     * Gets the index for the view port\n     */\n\n  }, {\n    key: \"getAdjustedViewPortIndex\",\n    value: function getAdjustedViewPortIndex() {\n      // Capture the row index of the first row that is visible on the viewport.\n      // If the scroll bar is just below the row which is highlighted then make that as the\n      // first index.\n      var viewPortFirstRowIndex = this.indexes.first;\n\n      if (this.scrollbarV && this.virtualization) {\n        var offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n        return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n      }\n\n      return viewPortFirstRowIndex;\n    }\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     */\n\n  }, {\n    key: \"toggleRowExpansion\",\n    value: function toggleRowExpansion(row) {\n      // Capture the row index of the first row that is visible on the viewport.\n      var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n      var rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n      var expanded = rowExpandedIdx > -1; // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n\n      if (this.scrollbarV && this.virtualization) {\n        var detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1); // const idx = this.rowIndexes.get(row) || 0;\n\n        var idx = this.getRowIndex(row);\n        this.rowHeightsCache.update(idx, detailRowHeight);\n      } // Update the toggled row and update thive nevere heights in the cache.\n\n\n      if (expanded) {\n        this.rowExpansions.splice(rowExpandedIdx, 1);\n      } else {\n        this.rowExpansions.push(row);\n      }\n\n      this.detailToggle.emit({\n        rows: [row],\n        currentIndex: viewPortFirstRowIndex\n      });\n    }\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     */\n\n  }, {\n    key: \"toggleAllRows\",\n    value: function toggleAllRows(expanded) {\n      // clear prev expansions\n      this.rowExpansions = []; // Capture the row index of the first row that is visible on the viewport.\n\n      var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n      if (expanded) {\n        var _iterator9 = _createForOfIteratorHelper(this.rows),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var row = _step9.value;\n            this.rowExpansions.push(row);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n\n      if (this.scrollbarV) {\n        // Refresh the full row heights cache since every row was affected.\n        this.recalcLayout();\n      } // Emit all rows that have been expanded.\n\n\n      this.detailToggle.emit({\n        rows: this.rows,\n        currentIndex: viewPortFirstRowIndex\n      });\n    }\n    /**\n     * Recalculates the table\n     */\n\n  }, {\n    key: \"recalcLayout\",\n    value: function recalcLayout() {\n      this.refreshRowHeightCache();\n      this.updateIndexes();\n      this.updateRows();\n    }\n    /**\n     * Tracks the column\n     */\n\n  }, {\n    key: \"columnTrackingFn\",\n    value: function columnTrackingFn(index, column) {\n      return column.$$id;\n    }\n    /**\n     * Gets the row pinning group styles\n     */\n\n  }, {\n    key: \"stylesByGroup\",\n    value: function stylesByGroup(group) {\n      var widths = this.columnGroupWidths;\n      var offsetX = this.offsetX;\n      var styles = {\n        width: \"\".concat(widths[group], \"px\")\n      };\n\n      if (group === 'left') {\n        translateXY(styles, offsetX, 0);\n      } else if (group === 'right') {\n        var bodyWidth = parseInt(this.innerWidth + '', 0);\n        var totalDiff = widths.total - bodyWidth;\n        var offsetDiff = totalDiff - offsetX;\n        var offset = offsetDiff * -1;\n        translateXY(styles, offset, 0);\n      }\n\n      return styles;\n    }\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     */\n\n  }, {\n    key: \"getRowExpanded\",\n    value: function getRowExpanded(row) {\n      if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n        var _iterator10 = _createForOfIteratorHelper(this.groupedRows),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var group = _step10.value;\n            this.rowExpansions.push(group);\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n\n      return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n    }\n  }, {\n    key: \"getRowExpandedIdx\",\n    value: function getRowExpandedIdx(row, expanded) {\n      var _this14 = this;\n\n      if (!expanded || !expanded.length) return -1;\n      var rowId = this.rowIdentity(row);\n      return expanded.findIndex(function (r) {\n        var id = _this14.rowIdentity(r);\n\n        return id === rowId;\n      });\n    }\n    /**\n     * Gets the row index given a row\n     */\n\n  }, {\n    key: \"getRowIndex\",\n    value: function getRowIndex(row) {\n      return this.rowIndexes.get(row) || 0;\n    }\n  }, {\n    key: \"onTreeAction\",\n    value: function onTreeAction(row) {\n      this.treeAction.emit({\n        row: row\n      });\n    }\n  }]);\n\n  return DataTableBodyComponent;\n}();\n\nDataTableBodyComponent.ɵfac = function DataTableBodyComponent_Factory(t) {\n  return new (t || DataTableBodyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nDataTableBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableBodyComponent,\n  selectors: [[\"datatable-body\"]],\n  viewQuery: function DataTableBodyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(ScrollerComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    }\n  },\n  hostAttrs: [1, \"datatable-body\"],\n  hostVars: 4,\n  hostBindings: function DataTableBodyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.bodyWidth)(\"height\", ctx.bodyHeight);\n    }\n  },\n  inputs: {\n    selected: \"selected\",\n    pageSize: \"pageSize\",\n    rows: \"rows\",\n    columns: \"columns\",\n    offset: \"offset\",\n    rowCount: \"rowCount\",\n    bodyHeight: \"bodyHeight\",\n    offsetX: \"offsetX\",\n    loadingIndicator: \"loadingIndicator\",\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    externalPaging: \"externalPaging\",\n    rowHeight: \"rowHeight\",\n    emptyMessage: \"emptyMessage\",\n    selectionType: \"selectionType\",\n    rowIdentity: \"rowIdentity\",\n    rowDetail: \"rowDetail\",\n    groupHeader: \"groupHeader\",\n    selectCheck: \"selectCheck\",\n    displayCheck: \"displayCheck\",\n    trackByProp: \"trackByProp\",\n    rowClass: \"rowClass\",\n    groupedRows: \"groupedRows\",\n    groupExpansionDefault: \"groupExpansionDefault\",\n    innerWidth: \"innerWidth\",\n    groupRowsBy: \"groupRowsBy\",\n    virtualization: \"virtualization\",\n    summaryRow: \"summaryRow\",\n    summaryPosition: \"summaryPosition\",\n    summaryHeight: \"summaryHeight\"\n  },\n  outputs: {\n    scroll: \"scroll\",\n    page: \"page\",\n    activate: \"activate\",\n    select: \"select\",\n    detailToggle: \"detailToggle\",\n    rowContextmenu: \"rowContextmenu\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 9,\n  consts: [[4, \"ngIf\"], [3, \"selected\", \"rows\", \"selectCheck\", \"selectEnabled\", \"selectionType\", \"rowIdentity\", \"select\", \"activate\"], [\"selector\", \"\"], [3, \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\", \"scroll\", 4, \"ngIf\"], [\"class\", \"empty-row\", 3, \"innerHTML\", 4, \"ngIf\"], [3, \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\", \"scroll\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\", \"rowContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [3, \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\", \"rowContextmenu\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\", \"treeAction\", \"activate\", 4, \"ngIf\", \"ngIfElse\"], [\"groupedRowsTemplate\", \"\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\", \"treeAction\", \"activate\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\", \"activate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\", \"activate\"], [3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [1, \"empty-row\", 3, \"innerHTML\"]],\n  template: function DataTableBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, DataTableBodyComponent_datatable_progress_0_Template, 1, 0, \"datatable-progress\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"datatable-selection\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"select\", function DataTableBodyComponent_Template_datatable_selection_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function DataTableBodyComponent_Template_datatable_selection_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      });\n      ɵngcc0.ɵɵtemplate(3, DataTableBodyComponent_datatable_scroller_3_Template, 4, 8, \"datatable-scroller\", 3);\n      ɵngcc0.ɵɵtemplate(4, DataTableBodyComponent_div_4_Template, 1, 1, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loadingIndicator);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"selected\", ctx.selected)(\"rows\", ctx.rows)(\"selectCheck\", ctx.selectCheck)(\"selectEnabled\", ctx.selectEnabled)(\"selectionType\", ctx.selectionType)(\"rowIdentity\", ctx.rowIdentity);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.rows == null ? null : ctx.rows.length);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.rows == null ? null : ctx.rows.length) && !ctx.loadingIndicator);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, DataTableSelectionComponent, ProgressBarComponent, ScrollerComponent, ɵngcc1.NgForOf, DataTableSummaryRowComponent, DataTableRowWrapperComponent, ɵngcc1.NgStyle, DataTableBodyRowComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableBodyComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"scrollbarV\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"scrollbarH\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"loadingIndicator\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"externalPaging\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rowHeight\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"offsetX\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"emptyMessage\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"selectionType\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"selected\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rowIdentity\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rowDetail\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"groupHeader\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"selectCheck\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"displayCheck\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"trackByProp\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rowClass\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"groupedRows\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"groupExpansionDefault\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"innerWidth\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"groupRowsBy\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"virtualization\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"summaryRow\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"summaryPosition\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"summaryHeight\", void 0);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"pageSize\", null);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rows\", null);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"columns\", null);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"offset\", null);\n\n__decorate([Input()], DataTableBodyComponent.prototype, \"rowCount\", null);\n\n__decorate([HostBinding('style.width')], DataTableBodyComponent.prototype, \"bodyWidth\", null);\n\n__decorate([Input(), HostBinding('style.height')], DataTableBodyComponent.prototype, \"bodyHeight\", null);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"scroll\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"page\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"activate\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"select\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"detailToggle\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"rowContextmenu\", void 0);\n\n__decorate([Output()], DataTableBodyComponent.prototype, \"treeAction\", void 0);\n\n__decorate([ViewChild(ScrollerComponent)], DataTableBodyComponent.prototype, \"scroller\", void 0);\n\nvar DataTableHeaderComponent = /*#__PURE__*/function () {\n  function DataTableHeaderComponent(cd) {\n    _classCallCheck(this, DataTableHeaderComponent);\n\n    this.cd = cd;\n    this.sort = new EventEmitter();\n    this.reorder = new EventEmitter();\n    this.resize = new EventEmitter();\n    this.select = new EventEmitter();\n    this.columnContextmenu = new EventEmitter(false);\n    this._columnGroupWidths = {\n      total: 100\n    };\n    this._styleByGroup = {\n      left: {},\n      center: {},\n      right: {}\n    };\n    this.destroyed = false;\n  }\n\n  _createClass(DataTableHeaderComponent, [{\n    key: \"innerWidth\",\n    get: function get() {\n      return this._innerWidth;\n    },\n    set: function set(val) {\n      var _this15 = this;\n\n      this._innerWidth = val;\n      setTimeout(function () {\n        if (_this15._columns) {\n          var colByPin = columnsByPin(_this15._columns);\n          _this15._columnGroupWidths = columnGroupWidths(colByPin, _this15._columns);\n\n          _this15.setStylesByGroup();\n        }\n      });\n    }\n  }, {\n    key: \"headerHeight\",\n    get: function get() {\n      return this._headerHeight;\n    },\n    set: function set(val) {\n      if (val !== 'auto') {\n        this._headerHeight = \"\".concat(val, \"px\");\n      } else {\n        this._headerHeight = val;\n      }\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return this._columns;\n    },\n    set: function set(val) {\n      var _this16 = this;\n\n      this._columns = val;\n      var colsByPin = columnsByPin(val);\n      this._columnsByPin = columnsByPinArr(val);\n      setTimeout(function () {\n        _this16._columnGroupWidths = columnGroupWidths(colsByPin, val);\n\n        _this16.setStylesByGroup();\n      });\n    }\n  }, {\n    key: \"offsetX\",\n    get: function get() {\n      return this._offsetX;\n    },\n    set: function set(val) {\n      this._offsetX = val;\n      this.setStylesByGroup();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyed = true;\n    }\n  }, {\n    key: \"onLongPressStart\",\n    value: function onLongPressStart(_ref7) {\n      var event = _ref7.event,\n          model = _ref7.model;\n      model.dragging = true;\n      this.dragEventTarget = event;\n    }\n  }, {\n    key: \"onLongPressEnd\",\n    value: function onLongPressEnd(_ref8) {\n      var _this17 = this;\n\n      var event = _ref8.event,\n          model = _ref8.model;\n      this.dragEventTarget = event; // delay resetting so sort can be\n      // prevented if we were dragging\n\n      setTimeout(function () {\n        // datatable component creates copies from columns on reorder\n        // set dragging to false on new objects\n        var column = _this17._columns.find(function (c) {\n          return c.$$id === model.$$id;\n        });\n\n        if (column) {\n          column.dragging = false;\n        }\n      }, 5);\n    }\n  }, {\n    key: \"headerWidth\",\n    get: function get() {\n      if (this.scrollbarH) {\n        return this.innerWidth + 'px';\n      }\n\n      return '100%';\n    }\n  }, {\n    key: \"trackByGroups\",\n    value: function trackByGroups(index, colGroup) {\n      return colGroup.type;\n    }\n  }, {\n    key: \"columnTrackingFn\",\n    value: function columnTrackingFn(index, column) {\n      return column.$$id;\n    }\n  }, {\n    key: \"onColumnResized\",\n    value: function onColumnResized(width, column) {\n      if (width <= column.minWidth) {\n        width = column.minWidth;\n      } else if (width >= column.maxWidth) {\n        width = column.maxWidth;\n      }\n\n      this.resize.emit({\n        column: column,\n        prevValue: column.width,\n        newValue: width\n      });\n    }\n  }, {\n    key: \"onColumnReordered\",\n    value: function onColumnReordered(_ref9) {\n      var prevIndex = _ref9.prevIndex,\n          newIndex = _ref9.newIndex,\n          model = _ref9.model;\n      var column = this.getColumn(newIndex);\n      column.isTarget = false;\n      column.targetMarkerContext = undefined;\n      this.reorder.emit({\n        column: model,\n        prevValue: prevIndex,\n        newValue: newIndex\n      });\n    }\n  }, {\n    key: \"onTargetChanged\",\n    value: function onTargetChanged(_ref10) {\n      var prevIndex = _ref10.prevIndex,\n          newIndex = _ref10.newIndex,\n          initialIndex = _ref10.initialIndex;\n\n      if (prevIndex || prevIndex === 0) {\n        var oldColumn = this.getColumn(prevIndex);\n        oldColumn.isTarget = false;\n        oldColumn.targetMarkerContext = undefined;\n      }\n\n      if (newIndex || newIndex === 0) {\n        var newColumn = this.getColumn(newIndex);\n        newColumn.isTarget = true;\n\n        if (initialIndex !== newIndex) {\n          newColumn.targetMarkerContext = {\n            class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n          };\n        }\n      }\n    }\n  }, {\n    key: \"getColumn\",\n    value: function getColumn(index) {\n      var leftColumnCount = this._columnsByPin[0].columns.length;\n\n      if (index < leftColumnCount) {\n        return this._columnsByPin[0].columns[index];\n      }\n\n      var centerColumnCount = this._columnsByPin[1].columns.length;\n\n      if (index < leftColumnCount + centerColumnCount) {\n        return this._columnsByPin[1].columns[index - leftColumnCount];\n      }\n\n      return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n    }\n  }, {\n    key: \"onSort\",\n    value: function onSort(_ref11) {\n      var column = _ref11.column,\n          prevValue = _ref11.prevValue,\n          newValue = _ref11.newValue;\n\n      // if we are dragging don't sort!\n      if (column.dragging) {\n        return;\n      }\n\n      var sorts = this.calcNewSorts(column, prevValue, newValue);\n      this.sort.emit({\n        sorts: sorts,\n        column: column,\n        prevValue: prevValue,\n        newValue: newValue\n      });\n    }\n  }, {\n    key: \"calcNewSorts\",\n    value: function calcNewSorts(column, prevValue, newValue) {\n      var idx = 0;\n\n      if (!this.sorts) {\n        this.sorts = [];\n      }\n\n      var sorts = this.sorts.map(function (s, i) {\n        s = Object.assign({}, s);\n\n        if (s.prop === column.prop) {\n          idx = i;\n        }\n\n        return s;\n      });\n\n      if (newValue === undefined) {\n        sorts.splice(idx, 1);\n      } else if (prevValue) {\n        sorts[idx].dir = newValue;\n      } else {\n        if (this.sortType === SortType.single) {\n          sorts.splice(0, this.sorts.length);\n        }\n\n        sorts.push({\n          dir: newValue,\n          prop: column.prop\n        });\n      }\n\n      return sorts;\n    }\n  }, {\n    key: \"setStylesByGroup\",\n    value: function setStylesByGroup() {\n      this._styleByGroup.left = this.calcStylesByGroup('left');\n      this._styleByGroup.center = this.calcStylesByGroup('center');\n      this._styleByGroup.right = this.calcStylesByGroup('right');\n\n      if (!this.destroyed) {\n        this.cd.detectChanges();\n      }\n    }\n  }, {\n    key: \"calcStylesByGroup\",\n    value: function calcStylesByGroup(group) {\n      var widths = this._columnGroupWidths;\n      var offsetX = this.offsetX;\n      var styles = {\n        width: \"\".concat(widths[group], \"px\")\n      };\n\n      if (group === 'center') {\n        translateXY(styles, offsetX * -1, 0);\n      } else if (group === 'right') {\n        var totalDiff = widths.total - this.innerWidth;\n        var offset = totalDiff * -1;\n        translateXY(styles, offset, 0);\n      }\n\n      return styles;\n    }\n  }]);\n\n  return DataTableHeaderComponent;\n}();\n\nDataTableHeaderComponent.ɵfac = function DataTableHeaderComponent_Factory(t) {\n  return new (t || DataTableHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nDataTableHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableHeaderComponent,\n  selectors: [[\"datatable-header\"]],\n  hostAttrs: [1, \"datatable-header\"],\n  hostVars: 4,\n  hostBindings: function DataTableHeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.headerHeight)(\"width\", ctx.headerWidth);\n    }\n  },\n  inputs: {\n    innerWidth: \"innerWidth\",\n    headerHeight: \"headerHeight\",\n    columns: \"columns\",\n    offsetX: \"offsetX\",\n    sorts: \"sorts\",\n    sortAscendingIcon: \"sortAscendingIcon\",\n    sortDescendingIcon: \"sortDescendingIcon\",\n    sortUnsetIcon: \"sortUnsetIcon\",\n    scrollbarH: \"scrollbarH\",\n    dealsWithGroup: \"dealsWithGroup\",\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    sortType: \"sortType\",\n    allRowsSelected: \"allRowsSelected\",\n    selectionType: \"selectionType\",\n    reorderable: \"reorderable\"\n  },\n  outputs: {\n    sort: \"sort\",\n    reorder: \"reorder\",\n    resize: \"resize\",\n    select: \"select\",\n    columnContextmenu: \"columnContextmenu\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[\"orderable\", \"\", 1, \"datatable-header-inner\", 3, \"reorder\", \"targetChanged\"], [3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\"]],\n  template: function DataTableHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"reorder\", function DataTableHeaderComponent_Template_div_reorder_0_listener($event) {\n        return ctx.onColumnReordered($event);\n      })(\"targetChanged\", function DataTableHeaderComponent_Template_div_targetChanged_0_listener($event) {\n        return ctx.onTargetChanged($event);\n      });\n      ɵngcc0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_Template, 2, 5, \"div\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx._columnGroupWidths.total, \"px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    }\n  },\n  directives: function directives() {\n    return [OrderableDirective, ɵngcc1.NgForOf, ɵngcc1.NgStyle, DataTableHeaderCellComponent, ResizeableDirective, LongPressDirective, DraggableDirective];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableHeaderComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"sortAscendingIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"sortDescendingIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"sortUnsetIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"scrollbarH\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"dealsWithGroup\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"targetMarkerTemplate\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"innerWidth\", null);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"sorts\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"sortType\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"allRowsSelected\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"selectionType\", void 0);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"reorderable\", void 0);\n\n__decorate([HostBinding('style.height'), Input()], DataTableHeaderComponent.prototype, \"headerHeight\", null);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"columns\", null);\n\n__decorate([Input()], DataTableHeaderComponent.prototype, \"offsetX\", null);\n\n__decorate([Output()], DataTableHeaderComponent.prototype, \"sort\", void 0);\n\n__decorate([Output()], DataTableHeaderComponent.prototype, \"reorder\", void 0);\n\n__decorate([Output()], DataTableHeaderComponent.prototype, \"resize\", void 0);\n\n__decorate([Output()], DataTableHeaderComponent.prototype, \"select\", void 0);\n\n__decorate([Output()], DataTableHeaderComponent.prototype, \"columnContextmenu\", void 0);\n\n__decorate([HostBinding('style.width')], DataTableHeaderComponent.prototype, \"headerWidth\", null);\n/**\n * Throttle a function\n */\n\n\nfunction throttle(func, wait, options) {\n  options = options || {};\n  var context;\n  var args;\n  var result;\n  var timeout = null;\n  var previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function () {\n    var now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\n\n\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\n/**\n * Calculates the Total Flex Grow\n */\n\n\nfunction getTotalFlexGrow(columns) {\n  var totalFlexGrow = 0;\n\n  var _iterator11 = _createForOfIteratorHelper(columns),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var c = _step11.value;\n      totalFlexGrow += c.flexGrow || 0;\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\n\n\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n  var columnsWidth = columnsTotalWidth(allColumns);\n  var totalFlexGrow = getTotalFlexGrow(allColumns);\n  var colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\n\n\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (var attr in colsByGroup) {\n    var _iterator12 = _createForOfIteratorHelper(colsByGroup[attr]),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var column = _step12.value;\n\n        if (!column.canAutoResize) {\n          maxWidth -= column.width;\n          totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n        } else {\n          column.width = 0;\n        }\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n  }\n\n  var hasMinWidth = {};\n  var remainingWidth = maxWidth; // resize columns until no width is left to be distributed\n\n  do {\n    var widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (var _attr in colsByGroup) {\n      var _iterator13 = _createForOfIteratorHelper(colsByGroup[_attr]),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _column = _step13.value;\n\n          // if the column can be resize and it hasn't reached its minimum width yet\n          if (_column.canAutoResize && !hasMinWidth[_column.prop]) {\n            var newWidth = _column.width + _column.flexGrow * widthPerFlexPoint;\n\n            if (_column.minWidth !== undefined && newWidth < _column.minWidth) {\n              remainingWidth += newWidth - _column.minWidth;\n              _column.width = _column.minWidth;\n              hasMinWidth[_column.prop] = true;\n            } else {\n              _column.width = newWidth;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\n\n\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed) {\n  var defaultColWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 300;\n  var columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(function (c) {\n    return c.canAutoResize !== false;\n  });\n\n  var _iterator14 = _createForOfIteratorHelper(columnsToResize),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var _column2 = _step14.value;\n\n      if (!_column2.$$oldWidth) {\n        _column2.$$oldWidth = _column2.width;\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n\n  var additionWidthPerColumn = 0;\n  var exceedsWindow = false;\n  var contentWidth = getContentWidth(allColumns, defaultColWidth);\n  var remainingWidth = expectedWidth - contentWidth;\n  var columnsProcessed = [];\n  var remainingWidthLimit = 1; // when to stop\n  // This loop takes care of the\n\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    var _iterator15 = _createForOfIteratorHelper(columnsToResize),\n        _step15;\n\n    try {\n      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n        var column = _step15.value;\n\n        if (exceedsWindow && allowBleed) {\n          column.width = column.$$oldWidth || column.width || defaultColWidth;\n        } else {\n          var newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n          if (column.minWidth && newSize < column.minWidth) {\n            column.width = column.minWidth;\n            columnsProcessed.push(column);\n          } else if (column.maxWidth && newSize > column.maxWidth) {\n            column.width = column.maxWidth;\n            columnsProcessed.push(column);\n          } else {\n            column.width = newSize;\n          }\n        }\n\n        column.width = Math.max(0, column.width);\n      }\n    } catch (err) {\n      _iterator15.e(err);\n    } finally {\n      _iterator15.f();\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n */\n\n\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n  var _iterator16 = _createForOfIteratorHelper(columnsProcessed),\n      _step16;\n\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var column = _step16.value;\n      var index = columnsToResize.indexOf(column);\n      columnsToResize.splice(index, 1);\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n}\n/**\n * Gets the width of the columns\n */\n\n\nfunction getContentWidth(allColumns) {\n  var defaultColWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n  var contentWidth = 0;\n\n  var _iterator17 = _createForOfIteratorHelper(allColumns),\n      _step17;\n\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var column = _step17.value;\n      contentWidth += column.width || defaultColWidth;\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n\n  return contentWidth;\n}\n\nvar SortDirection;\n\n(function (SortDirection) {\n  SortDirection[\"asc\"] = \"asc\";\n  SortDirection[\"desc\"] = \"desc\";\n})(SortDirection || (SortDirection = {}));\n/**\n * Gets the next sort direction\n */\n\n\nfunction nextSortDir(sortType, current) {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    } // avoid TS7030: Not all code paths return a value.\n\n\n    return undefined;\n  }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\n\n\nfunction orderByComparator(a, b) {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b); // Isn't a number so lowercase the string to properly compare\n\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  } // equal each other\n\n\n  return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\n\n\nfunction sortRows(rows, columns, dirs) {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return _toConsumableArray(rows);\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n\n  var rowToIndexMap = new Map();\n  rows.forEach(function (row, index) {\n    return rowToIndexMap.set(row, index);\n  });\n\n  var temp = _toConsumableArray(rows);\n\n  var cols = columns.reduce(function (obj, col) {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n\n    return obj;\n  }, {}); // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n\n  var cachedDirs = dirs.map(function (dir) {\n    var prop = dir.prop;\n    return {\n      prop: prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n  return temp.sort(function (rowA, rowB) {\n    var _iterator18 = _createForOfIteratorHelper(cachedDirs),\n        _step18;\n\n    try {\n      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n        var cachedDir = _step18.value;\n        // Get property and valuegetters for column to be sorted\n        var prop = cachedDir.prop,\n            valueGetter = cachedDir.valueGetter; // Get A and B cell values from rows based on properties of the columns\n\n        var propA = valueGetter(rowA, prop);\n        var propB = valueGetter(rowB, prop); // Compare function gets five parameters:\n        // Two cell values to be compared as propA and propB\n        // Two rows corresponding to the cells as rowA and rowB\n        // Direction of the sort for this column as SortDirection\n        // Compare can be a standard JS comparison function (a,b) => -1|0|1\n        // as additional parameters are silently ignored. The whole row and sort\n        // direction enable more complex sort logic.\n\n        var comparison = cachedDir.dir !== SortDirection.desc ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir) : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir); // Don't return 0 yet in case of needing to sort by next property\n\n        if (comparison !== 0) return comparison;\n      }\n    } catch (err) {\n      _iterator18.e(err);\n    } finally {\n      _iterator18.f();\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n\nvar DatatableComponent = /*#__PURE__*/function () {\n  function DatatableComponent(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n    var _this18 = this;\n\n    _classCallCheck(this, DatatableComponent);\n\n    this.scrollbarHelper = scrollbarHelper;\n    this.dimensionsHelper = dimensionsHelper;\n    this.cd = cd;\n    this.columnChangesService = columnChangesService;\n    this.configuration = configuration;\n    /**\n     * List of row objects that should be\n     * represented as selected in the grid.\n     * Default value: `[]`\n     */\n\n    this.selected = [];\n    /**\n     * Enable vertical scrollbars\n     */\n\n    this.scrollbarV = false;\n    /**\n     * Enable horz scrollbars\n     */\n\n    this.scrollbarH = false;\n    /**\n     * The row height; which is necessary\n     * to calculate the height for the lazy rendering.\n     */\n\n    this.rowHeight = 30;\n    /**\n     * Type of column width distribution formula.\n     * Example: flex, force, standard\n     */\n\n    this.columnMode = ColumnMode.standard;\n    /**\n     * The minimum header height in pixels.\n     * Pass a falsey for no header\n     */\n\n    this.headerHeight = 30;\n    /**\n     * The minimum footer height in pixels.\n     * Pass falsey for no footer\n     */\n\n    this.footerHeight = 0;\n    /**\n     * If the table should use external paging\n     * otherwise its assumed that all data is preloaded.\n     */\n\n    this.externalPaging = false;\n    /**\n     * If the table should use external sorting or\n     * the built-in basic sorting.\n     */\n\n    this.externalSorting = false;\n    /**\n     * Show the linear loading bar.\n     * Default value: `false`\n     */\n\n    this.loadingIndicator = false;\n    /**\n     * Enable/Disable ability to re-order columns\n     * by dragging them.\n     */\n\n    this.reorderable = true;\n    /**\n     * Swap columns on re-order columns or\n     * move them.\n     */\n\n    this.swapColumns = true;\n    /**\n     * The type of sorting\n     */\n\n    this.sortType = SortType.single;\n    /**\n     * Array of sorted columns by property and type.\n     * Default value: `[]`\n     */\n\n    this.sorts = [];\n    /**\n     * Css class overrides\n     */\n\n    this.cssClasses = {\n      sortAscending: 'datatable-icon-up',\n      sortDescending: 'datatable-icon-down',\n      sortUnset: 'datatable-icon-sort-unset',\n      pagerLeftArrow: 'datatable-icon-left',\n      pagerRightArrow: 'datatable-icon-right',\n      pagerPrevious: 'datatable-icon-prev',\n      pagerNext: 'datatable-icon-skip'\n    };\n    /**\n     * Message overrides for localization\n     *\n     * emptyMessage     [default] = 'No data to display'\n     * totalMessage     [default] = 'total'\n     * selectedMessage  [default] = 'selected'\n     */\n\n    this.messages = {\n      // Message to show when array is presented\n      // but contains no values\n      emptyMessage: 'No data to display',\n      // Footer total message\n      totalMessage: 'total',\n      // Footer selected message\n      selectedMessage: 'selected'\n    };\n    /**\n     * A boolean you can use to set the detault behaviour of rows and groups\n     * whether they will start expanded or not. If ommited the default is NOT expanded.\n     *\n     */\n\n    this.groupExpansionDefault = false;\n    /**\n     * Property to which you can use for determining select all\n     * rows on current page or not.\n     *\n     * @memberOf DatatableComponent\n     */\n\n    this.selectAllRowsOnPage = false;\n    /**\n     * A flag for row virtualization on / off\n     */\n\n    this.virtualization = true;\n    /**\n     * A flag for switching summary row on / off\n     */\n\n    this.summaryRow = false;\n    /**\n     * A height of summary row\n     */\n\n    this.summaryHeight = 30;\n    /**\n     * A property holds a summary row position: top/bottom\n     */\n\n    this.summaryPosition = 'top';\n    /**\n     * Body was scrolled typically in a `scrollbarV:true` scenario.\n     */\n\n    this.scroll = new EventEmitter();\n    /**\n     * A cell or row was focused via keyboard or mouse click.\n     */\n\n    this.activate = new EventEmitter();\n    /**\n     * A cell or row was selected.\n     */\n\n    this.select = new EventEmitter();\n    /**\n     * Column sort was invoked.\n     */\n\n    this.sort = new EventEmitter();\n    /**\n     * The table was paged either triggered by the pager or the body scroll.\n     */\n\n    this.page = new EventEmitter();\n    /**\n     * Columns were re-ordered.\n     */\n\n    this.reorder = new EventEmitter();\n    /**\n     * Column was resized.\n     */\n\n    this.resize = new EventEmitter();\n    /**\n     * The context menu was invoked on the table.\n     * type indicates whether the header or the body was clicked.\n     * content contains either the column or the row that was clicked.\n     */\n\n    this.tableContextmenu = new EventEmitter(false);\n    /**\n     * A row was expanded ot collapsed for tree\n     */\n\n    this.treeAction = new EventEmitter();\n    this.rowCount = 0;\n    this._offsetX = new BehaviorSubject(0);\n    this._count = 0;\n    this._offset = 0;\n    this._subscriptions = [];\n    /**\n     * This will be used when displaying or selecting rows.\n     * when tracking/comparing them, we'll use the value of this fn,\n     *\n     * (`fn(x) === fn(y)` instead of `x === y`)\n     */\n\n    this.rowIdentity = function (x) {\n      if (_this18._groupRowsBy) {\n        // each group in groupedRows are stored as {key, value: [rows]},\n        // where key is the groupRowsBy index\n        return x.key;\n      } else {\n        return x;\n      }\n    }; // get ref to elm for measuring\n\n\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create(); // apply global settings from Module.forRoot\n\n    if (this.configuration && this.configuration.messages) {\n      this.messages = Object.assign({}, this.configuration.messages);\n    }\n  }\n  /**\n   * Rows that are displayed in the table.\n   */\n\n\n  _createClass(DatatableComponent, [{\n    key: \"rows\",\n    get:\n    /**\n     * Gets the rows.\n     */\n    function get() {\n      return this._rows;\n    }\n    /**\n     * This attribute allows the user to set the name of the column to group the data with\n     */\n    ,\n    set: function set(val) {\n      this._rows = val;\n\n      if (val) {\n        this._internalRows = _toConsumableArray(val);\n      } // auto sort on new updates\n\n\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } // auto group by parent on new update\n\n\n      this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation)); // recalculate sizes/etc\n\n      this.recalculate();\n\n      if (this._rows && this._groupRowsBy) {\n        // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"groupRowsBy\",\n    get: function get() {\n      return this._groupRowsBy;\n    }\n    /**\n     * Columns to be displayed.\n     */\n    ,\n    set: function set(val) {\n      if (val) {\n        this._groupRowsBy = val;\n\n        if (this._rows && this._groupRowsBy) {\n          // cretes a new array with the data grouped\n          this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n        }\n      }\n    }\n  }, {\n    key: \"columns\",\n    get:\n    /**\n     * Get the columns.\n     */\n    function get() {\n      return this._columns;\n    }\n    /**\n     * The page size to be shown.\n     * Default value: `undefined`\n     */\n    ,\n    set: function set(val) {\n      if (val) {\n        this._internalColumns = _toConsumableArray(val);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n      }\n\n      this._columns = val;\n    }\n  }, {\n    key: \"limit\",\n    get:\n    /**\n     * Gets the limit.\n     */\n    function get() {\n      return this._limit;\n    }\n    /**\n     * The total count of all rows.\n     * Default value: `0`\n     */\n    ,\n    set: function set(val) {\n      this._limit = val; // recalculate sizes/etc\n\n      this.recalculate();\n    }\n  }, {\n    key: \"count\",\n    get:\n    /**\n     * Gets the count.\n     */\n    function get() {\n      return this._count;\n    }\n    /**\n     * The current offset ( page - 1 ) shown.\n     * Default value: `0`\n     */\n    ,\n    set: function set(val) {\n      this._count = val; // recalculate sizes/etc\n\n      this.recalculate();\n    }\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n    }\n    /**\n     * CSS class applied if the header height if fixed height.\n     */\n    ,\n    set: function set(val) {\n      this._offset = val;\n    }\n  }, {\n    key: \"isFixedHeader\",\n    get: function get() {\n      var headerHeight = this.headerHeight;\n      return typeof headerHeight === 'string' ? headerHeight !== 'auto' : true;\n    }\n    /**\n     * CSS class applied to the root element if\n     * the row heights are fixed heights.\n     */\n\n  }, {\n    key: \"isFixedRow\",\n    get: function get() {\n      return this.rowHeight !== 'auto';\n    }\n    /**\n     * CSS class applied to root element if\n     * vertical scrolling is enabled.\n     */\n\n  }, {\n    key: \"isVertScroll\",\n    get: function get() {\n      return this.scrollbarV;\n    }\n    /**\n     * CSS class applied to root element if\n     * virtualization is enabled.\n     */\n\n  }, {\n    key: \"isVirtualized\",\n    get: function get() {\n      return this.virtualization;\n    }\n    /**\n     * CSS class applied to the root element\n     * if the horziontal scrolling is enabled.\n     */\n\n  }, {\n    key: \"isHorScroll\",\n    get: function get() {\n      return this.scrollbarH;\n    }\n    /**\n     * CSS class applied to root element is selectable.\n     */\n\n  }, {\n    key: \"isSelectable\",\n    get: function get() {\n      return this.selectionType !== undefined;\n    }\n    /**\n     * CSS class applied to root is checkbox selection.\n     */\n\n  }, {\n    key: \"isCheckboxSelection\",\n    get: function get() {\n      return this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * CSS class applied to root if cell selection.\n     */\n\n  }, {\n    key: \"isCellSelection\",\n    get: function get() {\n      return this.selectionType === SelectionType.cell;\n    }\n    /**\n     * CSS class applied to root if single select.\n     */\n\n  }, {\n    key: \"isSingleSelection\",\n    get: function get() {\n      return this.selectionType === SelectionType.single;\n    }\n    /**\n     * CSS class added to root element if mulit select\n     */\n\n  }, {\n    key: \"isMultiSelection\",\n    get: function get() {\n      return this.selectionType === SelectionType.multi;\n    }\n    /**\n     * CSS class added to root element if mulit click select\n     */\n\n  }, {\n    key: \"isMultiClickSelection\",\n    get: function get() {\n      return this.selectionType === SelectionType.multiClick;\n    }\n    /**\n     * Column templates gathered from `ContentChildren`\n     * if described in your markup.\n     */\n\n  }, {\n    key: \"columnTemplates\",\n    get:\n    /**\n     * Returns the column templates.\n     */\n    function get() {\n      return this._columnTemplates;\n    }\n    /**\n     * Returns if all rows are selected.\n     */\n    ,\n    set: function set(val) {\n      this._columnTemplates = val;\n      this.translateColumns(val);\n    }\n  }, {\n    key: \"allRowsSelected\",\n    get: function get() {\n      var allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n      if (this.bodyComponent && this.selectAllRowsOnPage) {\n        var indexes = this.bodyComponent.indexes;\n        var rowsOnPage = indexes.last - indexes.first;\n        allRowsSelected = this.selected.length === rowsOnPage;\n      }\n\n      return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n    }\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // need to call this immediatly to size\n      // if the table is hidden the visibility\n      // listener will invoke this itself upon show\n      this.recalculate();\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this19 = this;\n\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } // this has to be done to prevent the change detection\n      // tree from freaking out because we are readjusting\n\n\n      if (typeof requestAnimationFrame === 'undefined') {\n        return;\n      }\n\n      requestAnimationFrame(function () {\n        _this19.recalculate(); // emit page for virtual server-side kickoff\n\n\n        if (_this19.externalPaging && _this19.scrollbarV) {\n          _this19.page.emit({\n            count: _this19.count,\n            pageSize: _this19.pageSize,\n            limit: _this19.limit,\n            offset: 0\n          });\n        }\n      });\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this20 = this;\n\n      this.columnTemplates.changes.subscribe(function (v) {\n        return _this20.translateColumns(v);\n      });\n      this.listenForColumnInputChanges();\n    }\n    /**\n     * Translates the templates to the column objects\n     */\n\n  }, {\n    key: \"translateColumns\",\n    value: function translateColumns(val) {\n      if (val) {\n        var arr = val.toArray();\n\n        if (arr.length) {\n          this._internalColumns = translateTemplates(arr);\n          setColumnDefaults(this._internalColumns);\n          this.recalculateColumns();\n          this.sortInternalRows();\n          this.cd.markForCheck();\n        }\n      }\n    }\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param originalArray the original array passed via parameter\n     * @param groupByIndex  the index of the column to group the data by\n     */\n\n  }, {\n    key: \"groupArrayBy\",\n    value: function groupArrayBy(originalArray, groupBy) {\n      // create a map to hold groups with their corresponding results\n      var map = new Map();\n      var i = 0;\n      originalArray.forEach(function (item) {\n        var key = item[groupBy];\n\n        if (!map.has(key)) {\n          map.set(key, [item]);\n        } else {\n          map.get(key).push(item);\n        }\n\n        i++;\n      });\n\n      var addGroup = function addGroup(key, value) {\n        return {\n          key: key,\n          value: value\n        };\n      }; // convert map back to a simple array of objects\n\n\n      return Array.from(map, function (x) {\n        return addGroup(x[0], x[1]);\n      });\n    }\n    /*\n     * Lifecycle hook that is called when Angular dirty checks a directive.\n     */\n\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.rowDiffer.diff(this.rows)) {\n        if (!this.externalSorting) {\n          this.sortInternalRows();\n        } else {\n          this._internalRows = _toConsumableArray(this.rows);\n        } // auto group by parent on new update\n\n\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        this.recalculatePages();\n        this.cd.markForCheck();\n      }\n    }\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     */\n\n  }, {\n    key: \"recalculate\",\n    value: function recalculate() {\n      this.recalculateDims();\n      this.recalculateColumns();\n      this.cd.markForCheck();\n    }\n    /**\n     * Window resize handler to update sizes.\n     */\n\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.recalculate();\n    }\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     */\n\n  }, {\n    key: \"recalculateColumns\",\n    value: function recalculateColumns() {\n      var columns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._internalColumns;\n      var forceIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      var allowBleed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.scrollbarH;\n      if (!columns) return undefined;\n      var width = this._innerWidth;\n\n      if (this.scrollbarV) {\n        width = width - this.scrollbarHelper.width;\n      }\n\n      if (this.columnMode === ColumnMode.force) {\n        forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n      } else if (this.columnMode === ColumnMode.flex) {\n        adjustColumnWidths(columns, width);\n      }\n\n      return columns;\n    }\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     */\n\n  }, {\n    key: \"recalculateDims\",\n    value: function recalculateDims() {\n      var dims = this.dimensionsHelper.getDimensions(this.element);\n      this._innerWidth = Math.floor(dims.width);\n\n      if (this.scrollbarV) {\n        var height = dims.height;\n        if (this.headerHeight) height = height - this.headerHeight;\n        if (this.footerHeight) height = height - this.footerHeight;\n        this.bodyHeight = height;\n      }\n\n      this.recalculatePages();\n    }\n    /**\n     * Recalculates the pages after a update.\n     */\n\n  }, {\n    key: \"recalculatePages\",\n    value: function recalculatePages() {\n      this.pageSize = this.calcPageSize();\n      this.rowCount = this.calcRowCount();\n    }\n    /**\n     * Body triggered a page event.\n     */\n\n  }, {\n    key: \"onBodyPage\",\n    value: function onBodyPage(_ref12) {\n      var offset = _ref12.offset;\n\n      // Avoid pagination caming from body events like scroll when the table\n      // has no virtualization and the external paging is enable.\n      // This means, let's the developer handle pagination by my him(her) self\n      if (this.externalPaging && !this.virtualization) {\n        return;\n      }\n\n      this.offset = offset;\n      this.page.emit({\n        count: this.count,\n        pageSize: this.pageSize,\n        limit: this.limit,\n        offset: this.offset\n      });\n    }\n    /**\n     * The body triggered a scroll event.\n     */\n\n  }, {\n    key: \"onBodyScroll\",\n    value: function onBodyScroll(event) {\n      this._offsetX.next(event.offsetX);\n\n      this.scroll.emit(event);\n      this.cd.detectChanges();\n    }\n    /**\n     * The footer triggered a page event.\n     */\n\n  }, {\n    key: \"onFooterPage\",\n    value: function onFooterPage(event) {\n      this.offset = event.page - 1;\n      this.bodyComponent.updateOffsetY(this.offset);\n      this.page.emit({\n        count: this.count,\n        pageSize: this.pageSize,\n        limit: this.limit,\n        offset: this.offset\n      });\n\n      if (this.selectAllRowsOnPage) {\n        this.selected = [];\n        this.select.emit({\n          selected: this.selected\n        });\n      }\n    }\n    /**\n     * Recalculates the sizes of the page\n     */\n\n  }, {\n    key: \"calcPageSize\",\n    value: function calcPageSize() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rows;\n\n      // Keep the page size constant even if the row has been expanded.\n      // This is because an expanded row is still considered to be a child of\n      // the original row.  Hence calculation would use rowHeight only.\n      if (this.scrollbarV && this.virtualization) {\n        var size = Math.ceil(this.bodyHeight / this.rowHeight);\n        return Math.max(size, 0);\n      } // if limit is passed, we are paging\n\n\n      if (this.limit !== undefined) {\n        return this.limit;\n      } // otherwise use row length\n\n\n      if (val) {\n        return val.length;\n      } // other empty :(\n\n\n      return 0;\n    }\n    /**\n     * Calculates the row count.\n     */\n\n  }, {\n    key: \"calcRowCount\",\n    value: function calcRowCount() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rows;\n\n      if (!this.externalPaging) {\n        if (!val) return 0;\n\n        if (this.groupedRows) {\n          return this.groupedRows.length;\n        } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n          return this._internalRows.length;\n        } else {\n          return val.length;\n        }\n      }\n\n      return this.count;\n    }\n    /**\n     * The header triggered a contextmenu event.\n     */\n\n  }, {\n    key: \"onColumnContextmenu\",\n    value: function onColumnContextmenu(_ref13) {\n      var event = _ref13.event,\n          column = _ref13.column;\n      this.tableContextmenu.emit({\n        event: event,\n        type: ContextmenuType.header,\n        content: column\n      });\n    }\n    /**\n     * The body triggered a contextmenu event.\n     */\n\n  }, {\n    key: \"onRowContextmenu\",\n    value: function onRowContextmenu(_ref14) {\n      var event = _ref14.event,\n          row = _ref14.row;\n      this.tableContextmenu.emit({\n        event: event,\n        type: ContextmenuType.body,\n        content: row\n      });\n    }\n    /**\n     * The header triggered a column resize event.\n     */\n\n  }, {\n    key: \"onColumnResize\",\n    value: function onColumnResize(_ref15) {\n      var column = _ref15.column,\n          newValue = _ref15.newValue;\n\n      /* Safari/iOS 10.2 workaround */\n      if (column === undefined) {\n        return;\n      }\n\n      var idx;\n\n      var cols = this._internalColumns.map(function (c, i) {\n        c = Object.assign({}, c);\n\n        if (c.$$id === column.$$id) {\n          idx = i;\n          c.width = newValue; // set this so we can force the column\n          // width distribution to be to this value\n\n          c.$$oldWidth = newValue;\n        }\n\n        return c;\n      });\n\n      this.recalculateColumns(cols, idx);\n      this._internalColumns = cols;\n      this.resize.emit({\n        column: column,\n        newValue: newValue\n      });\n    }\n    /**\n     * The header triggered a column re-order event.\n     */\n\n  }, {\n    key: \"onColumnReorder\",\n    value: function onColumnReorder(_ref16) {\n      var column = _ref16.column,\n          newValue = _ref16.newValue,\n          prevValue = _ref16.prevValue;\n\n      var cols = this._internalColumns.map(function (c) {\n        return Object.assign({}, c);\n      });\n\n      if (this.swapColumns) {\n        var prevCol = cols[newValue];\n        cols[newValue] = column;\n        cols[prevValue] = prevCol;\n      } else {\n        if (newValue > prevValue) {\n          var movedCol = cols[prevValue];\n\n          for (var i = prevValue; i < newValue; i++) {\n            cols[i] = cols[i + 1];\n          }\n\n          cols[newValue] = movedCol;\n        } else {\n          var _movedCol = cols[prevValue];\n\n          for (var _i3 = prevValue; _i3 > newValue; _i3--) {\n            cols[_i3] = cols[_i3 - 1];\n          }\n\n          cols[newValue] = _movedCol;\n        }\n      }\n\n      this._internalColumns = cols;\n      this.reorder.emit({\n        column: column,\n        newValue: newValue,\n        prevValue: prevValue\n      });\n    }\n    /**\n     * The header triggered a column sort event.\n     */\n\n  }, {\n    key: \"onColumnSort\",\n    value: function onColumnSort(event) {\n      // clean selected rows\n      if (this.selectAllRowsOnPage) {\n        this.selected = [];\n        this.select.emit({\n          selected: this.selected\n        });\n      }\n\n      this.sorts = event.sorts; // this could be optimized better since it will resort\n      // the rows again on the 'push' detection...\n\n      if (this.externalSorting === false) {\n        // don't use normal setter so we don't resort\n        this.sortInternalRows();\n      } // auto group by parent on new update\n\n\n      this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation)); // Always go to first page when sorting to see the newly sorted data\n\n      this.offset = 0;\n      this.bodyComponent.updateOffsetY(this.offset);\n      this.sort.emit(event);\n    }\n    /**\n     * Toggle all row selection\n     */\n\n  }, {\n    key: \"onHeaderSelect\",\n    value: function onHeaderSelect(event) {\n      if (this.bodyComponent && this.selectAllRowsOnPage) {\n        // before we splice, chk if we currently have all selected\n        var first = this.bodyComponent.indexes.first;\n        var last = this.bodyComponent.indexes.last;\n        var allSelected = this.selected.length === last - first; // remove all existing either way\n\n        this.selected = []; // do the opposite here\n\n        if (!allSelected) {\n          var _this$selected;\n\n          (_this$selected = this.selected).push.apply(_this$selected, _toConsumableArray(this._internalRows.slice(first, last)));\n        }\n      } else {\n        // before we splice, chk if we currently have all selected\n        var _allSelected = this.selected.length === this.rows.length; // remove all existing either way\n\n\n        this.selected = []; // do the opposite here\n\n        if (!_allSelected) {\n          var _this$selected2;\n\n          (_this$selected2 = this.selected).push.apply(_this$selected2, _toConsumableArray(this.rows));\n        }\n      }\n\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n    /**\n     * A row was selected from body\n     */\n\n  }, {\n    key: \"onBodySelect\",\n    value: function onBodySelect(event) {\n      this.select.emit(event);\n    }\n    /**\n     * A row was expanded or collapsed for tree\n     */\n\n  }, {\n    key: \"onTreeAction\",\n    value: function onTreeAction(event) {\n      var _this21 = this;\n\n      var row = event.row; // TODO: For duplicated items this will not work\n\n      var rowIndex = this._rows.findIndex(function (r) {\n        return r[_this21.treeToRelation] === event.row[_this21.treeToRelation];\n      });\n\n      this.treeAction.emit({\n        row: row,\n        rowIndex: rowIndex\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._subscriptions.forEach(function (subscription) {\n        return subscription.unsubscribe();\n      });\n    }\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     */\n\n  }, {\n    key: \"listenForColumnInputChanges\",\n    value: function listenForColumnInputChanges() {\n      var _this22 = this;\n\n      this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe(function () {\n        if (_this22.columnTemplates) {\n          _this22.columnTemplates.notifyOnChanges();\n        }\n      }));\n    }\n  }, {\n    key: \"sortInternalRows\",\n    value: function sortInternalRows() {\n      this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n    }\n  }]);\n\n  return DatatableComponent;\n}();\n\nDatatableComponent.ɵfac = function DatatableComponent_Factory(t) {\n  return new (t || DatatableComponent)(ɵngcc0.ɵɵdirectiveInject(ScrollbarHelper, 4), ɵngcc0.ɵɵdirectiveInject(DimensionsHelper, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ColumnChangesService), ɵngcc0.ɵɵdirectiveInject('configuration', 8));\n};\n\nDatatableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DatatableComponent,\n  selectors: [[\"ngx-datatable\"]],\n  contentQueries: function DatatableComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableRowDetailDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableGroupHeaderDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableFooterDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DataTableColumnDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rowDetail = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeader = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnTemplates = _t);\n    }\n  },\n  viewQuery: function DatatableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DataTableBodyComponent, true);\n      ɵngcc0.ɵɵviewQuery(DataTableHeaderComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyComponent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerComponent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ngx-datatable\"],\n  hostVars: 22,\n  hostBindings: function DatatableComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function DatatableComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"fixed-header\", ctx.isFixedHeader)(\"fixed-row\", ctx.isFixedRow)(\"scroll-vertical\", ctx.isVertScroll)(\"virtualized\", ctx.isVirtualized)(\"scroll-horz\", ctx.isHorScroll)(\"selectable\", ctx.isSelectable)(\"checkbox-selection\", ctx.isCheckboxSelection)(\"cell-selection\", ctx.isCellSelection)(\"single-selection\", ctx.isSingleSelection)(\"multi-selection\", ctx.isMultiSelection)(\"multi-click-selection\", ctx.isMultiClickSelection);\n    }\n  },\n  inputs: {\n    selected: \"selected\",\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    rowHeight: \"rowHeight\",\n    columnMode: \"columnMode\",\n    headerHeight: \"headerHeight\",\n    footerHeight: \"footerHeight\",\n    externalPaging: \"externalPaging\",\n    externalSorting: \"externalSorting\",\n    loadingIndicator: \"loadingIndicator\",\n    reorderable: \"reorderable\",\n    swapColumns: \"swapColumns\",\n    sortType: \"sortType\",\n    sorts: \"sorts\",\n    cssClasses: \"cssClasses\",\n    messages: \"messages\",\n    groupExpansionDefault: \"groupExpansionDefault\",\n    selectAllRowsOnPage: \"selectAllRowsOnPage\",\n    virtualization: \"virtualization\",\n    summaryRow: \"summaryRow\",\n    summaryHeight: \"summaryHeight\",\n    summaryPosition: \"summaryPosition\",\n    rowIdentity: \"rowIdentity\",\n    rows: \"rows\",\n    groupedRows: \"groupedRows\",\n    groupRowsBy: \"groupRowsBy\",\n    columns: \"columns\",\n    limit: \"limit\",\n    count: \"count\",\n    offset: \"offset\",\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    selectionType: \"selectionType\",\n    rowClass: \"rowClass\",\n    selectCheck: \"selectCheck\",\n    displayCheck: \"displayCheck\",\n    trackByProp: \"trackByProp\",\n    treeFromRelation: \"treeFromRelation\",\n    treeToRelation: \"treeToRelation\"\n  },\n  outputs: {\n    scroll: \"scroll\",\n    activate: \"activate\",\n    select: \"select\",\n    sort: \"sort\",\n    page: \"page\",\n    reorder: \"reorder\",\n    resize: \"resize\",\n    tableContextmenu: \"tableContextmenu\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 34,\n  consts: [[\"visibilityObserver\", \"\", 3, \"visible\"], [3, \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"selectionType\", \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\", 4, \"ngIf\"], [3, \"groupRowsBy\", \"groupedRows\", \"rows\", \"groupExpansionDefault\", \"scrollbarV\", \"scrollbarH\", \"virtualization\", \"loadingIndicator\", \"externalPaging\", \"rowHeight\", \"rowCount\", \"offset\", \"trackByProp\", \"columns\", \"pageSize\", \"offsetX\", \"rowDetail\", \"groupHeader\", \"selected\", \"innerWidth\", \"bodyHeight\", \"selectionType\", \"emptyMessage\", \"rowIdentity\", \"rowClass\", \"selectCheck\", \"displayCheck\", \"summaryRow\", \"summaryHeight\", \"summaryPosition\", \"page\", \"activate\", \"rowContextmenu\", \"select\", \"scroll\", \"treeAction\"], [3, \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\", \"page\", 4, \"ngIf\"], [3, \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"selectionType\", \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\"], [3, \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\", \"page\"]],\n  template: function DatatableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"visible\", function DatatableComponent_Template_div_visible_0_listener() {\n        return ctx.recalculate();\n      });\n      ɵngcc0.ɵɵtemplate(1, DatatableComponent_datatable_header_1_Template, 2, 17, \"datatable-header\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"datatable-body\", 2);\n      ɵngcc0.ɵɵlistener(\"page\", function DatatableComponent_Template_datatable_body_page_2_listener($event) {\n        return ctx.onBodyPage($event);\n      })(\"activate\", function DatatableComponent_Template_datatable_body_activate_2_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"rowContextmenu\", function DatatableComponent_Template_datatable_body_rowContextmenu_2_listener($event) {\n        return ctx.onRowContextmenu($event);\n      })(\"select\", function DatatableComponent_Template_datatable_body_select_2_listener($event) {\n        return ctx.onBodySelect($event);\n      })(\"scroll\", function DatatableComponent_Template_datatable_body_scroll_2_listener($event) {\n        return ctx.onBodyScroll($event);\n      })(\"treeAction\", function DatatableComponent_Template_datatable_body_treeAction_2_listener($event) {\n        return ctx.onTreeAction($event);\n      });\n      ɵngcc0.ɵɵpipe(3, \"async\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, DatatableComponent_datatable_footer_4_Template, 1, 12, \"datatable-footer\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerHeight);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"groupRowsBy\", ctx.groupRowsBy)(\"groupedRows\", ctx.groupedRows)(\"rows\", ctx._internalRows)(\"groupExpansionDefault\", ctx.groupExpansionDefault)(\"scrollbarV\", ctx.scrollbarV)(\"scrollbarH\", ctx.scrollbarH)(\"virtualization\", ctx.virtualization)(\"loadingIndicator\", ctx.loadingIndicator)(\"externalPaging\", ctx.externalPaging)(\"rowHeight\", ctx.rowHeight)(\"rowCount\", ctx.rowCount)(\"offset\", ctx.offset)(\"trackByProp\", ctx.trackByProp)(\"columns\", ctx._internalColumns)(\"pageSize\", ctx.pageSize)(\"offsetX\", ɵngcc0.ɵɵpipeBind1(3, 32, ctx._offsetX))(\"rowDetail\", ctx.rowDetail)(\"groupHeader\", ctx.groupHeader)(\"selected\", ctx.selected)(\"innerWidth\", ctx._innerWidth)(\"bodyHeight\", ctx.bodyHeight)(\"selectionType\", ctx.selectionType)(\"emptyMessage\", ctx.messages.emptyMessage)(\"rowIdentity\", ctx.rowIdentity)(\"rowClass\", ctx.rowClass)(\"selectCheck\", ctx.selectCheck)(\"displayCheck\", ctx.displayCheck)(\"summaryRow\", ctx.summaryRow)(\"summaryHeight\", ctx.summaryHeight)(\"summaryPosition\", ctx.summaryPosition);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerHeight);\n    }\n  },\n  directives: function directives() {\n    return [VisibilityDirective, ɵngcc1.NgIf, DataTableBodyComponent, DataTableHeaderComponent, DataTableFooterComponent];\n  },\n  pipes: function pipes() {\n    return [ɵngcc1.AsyncPipe];\n  },\n  styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDatatableComponent.ctorParameters = function () {\n  return [{\n    type: ScrollbarHelper,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: DimensionsHelper,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: KeyValueDiffers\n  }, {\n    type: ColumnChangesService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: ['configuration']\n    }]\n  }];\n};\n\n__decorate([Input()], DatatableComponent.prototype, \"targetMarkerTemplate\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"rows\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"groupRowsBy\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"groupedRows\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"columns\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"selected\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"scrollbarV\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"scrollbarH\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"rowHeight\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"columnMode\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"headerHeight\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"footerHeight\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"externalPaging\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"externalSorting\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"limit\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"count\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"offset\", null);\n\n__decorate([Input()], DatatableComponent.prototype, \"loadingIndicator\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"selectionType\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"reorderable\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"swapColumns\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"sortType\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"sorts\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"cssClasses\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"messages\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"rowClass\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"selectCheck\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"displayCheck\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"groupExpansionDefault\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"trackByProp\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"selectAllRowsOnPage\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"virtualization\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"treeFromRelation\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"treeToRelation\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"summaryRow\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"summaryHeight\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"summaryPosition\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"scroll\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"activate\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"select\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"sort\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"page\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"reorder\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"resize\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"tableContextmenu\", void 0);\n\n__decorate([Output()], DatatableComponent.prototype, \"treeAction\", void 0);\n\n__decorate([HostBinding('class.fixed-header')], DatatableComponent.prototype, \"isFixedHeader\", null);\n\n__decorate([HostBinding('class.fixed-row')], DatatableComponent.prototype, \"isFixedRow\", null);\n\n__decorate([HostBinding('class.scroll-vertical')], DatatableComponent.prototype, \"isVertScroll\", null);\n\n__decorate([HostBinding('class.virtualized')], DatatableComponent.prototype, \"isVirtualized\", null);\n\n__decorate([HostBinding('class.scroll-horz')], DatatableComponent.prototype, \"isHorScroll\", null);\n\n__decorate([HostBinding('class.selectable')], DatatableComponent.prototype, \"isSelectable\", null);\n\n__decorate([HostBinding('class.checkbox-selection')], DatatableComponent.prototype, \"isCheckboxSelection\", null);\n\n__decorate([HostBinding('class.cell-selection')], DatatableComponent.prototype, \"isCellSelection\", null);\n\n__decorate([HostBinding('class.single-selection')], DatatableComponent.prototype, \"isSingleSelection\", null);\n\n__decorate([HostBinding('class.multi-selection')], DatatableComponent.prototype, \"isMultiSelection\", null);\n\n__decorate([HostBinding('class.multi-click-selection')], DatatableComponent.prototype, \"isMultiClickSelection\", null);\n\n__decorate([ContentChildren(DataTableColumnDirective)], DatatableComponent.prototype, \"columnTemplates\", null);\n\n__decorate([ContentChild(DatatableRowDetailDirective)], DatatableComponent.prototype, \"rowDetail\", void 0);\n\n__decorate([ContentChild(DatatableGroupHeaderDirective)], DatatableComponent.prototype, \"groupHeader\", void 0);\n\n__decorate([ContentChild(DatatableFooterDirective)], DatatableComponent.prototype, \"footer\", void 0);\n\n__decorate([ViewChild(DataTableBodyComponent)], DatatableComponent.prototype, \"bodyComponent\", void 0);\n\n__decorate([ViewChild(DataTableHeaderComponent)], DatatableComponent.prototype, \"headerComponent\", void 0);\n\n__decorate([Input()], DatatableComponent.prototype, \"rowIdentity\", void 0);\n\n__decorate([HostListener('window:resize'), throttleable(5)], DatatableComponent.prototype, \"onWindowResize\", null);\n\nDatatableComponent = __decorate([__param(0, SkipSelf()), __param(1, SkipSelf()), __param(6, Optional()), __param(6, Inject('configuration'))], DatatableComponent);\n\nvar DataTableHeaderCellComponent = /*#__PURE__*/function () {\n  function DataTableHeaderCellComponent(cd) {\n    _classCallCheck(this, DataTableHeaderCellComponent);\n\n    this.cd = cd;\n    this.sort = new EventEmitter();\n    this.select = new EventEmitter();\n    this.columnContextmenu = new EventEmitter(false);\n    this.sortFn = this.onSort.bind(this);\n    this.selectFn = this.select.emit.bind(this.select);\n    this.cellContext = {\n      column: this.column,\n      sortDir: this.sortDir,\n      sortFn: this.sortFn,\n      allRowsSelected: this.allRowsSelected,\n      selectFn: this.selectFn\n    };\n  }\n\n  _createClass(DataTableHeaderCellComponent, [{\n    key: \"allRowsSelected\",\n    get: function get() {\n      return this._allRowsSelected;\n    },\n    set: function set(value) {\n      this._allRowsSelected = value;\n      this.cellContext.allRowsSelected = value;\n    }\n  }, {\n    key: \"column\",\n    get: function get() {\n      return this._column;\n    },\n    set: function set(column) {\n      this._column = column;\n      this.cellContext.column = column;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"sorts\",\n    get: function get() {\n      return this._sorts;\n    },\n    set: function set(val) {\n      this._sorts = val;\n      this.sortDir = this.calcSortDir(val);\n      this.cellContext.sortDir = this.sortDir;\n      this.sortClass = this.calcSortClass(this.sortDir);\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"columnCssClasses\",\n    get: function get() {\n      var cls = 'datatable-header-cell';\n      if (this.column.sortable) cls += ' sortable';\n      if (this.column.resizeable) cls += ' resizeable';\n\n      if (this.column.headerClass) {\n        if (typeof this.column.headerClass === 'string') {\n          cls += ' ' + this.column.headerClass;\n        } else if (typeof this.column.headerClass === 'function') {\n          var res = this.column.headerClass({\n            column: this.column\n          });\n\n          if (typeof res === 'string') {\n            cls += res;\n          } else if (typeof res === 'object') {\n            var keys = Object.keys(res);\n\n            for (var _i4 = 0, _keys = keys; _i4 < _keys.length; _i4++) {\n              var k = _keys[_i4];\n              if (res[k] === true) cls += \" \".concat(k);\n            }\n          }\n        }\n      }\n\n      var sortDir = this.sortDir;\n\n      if (sortDir) {\n        cls += \" sort-active sort-\".concat(sortDir);\n      }\n\n      return cls;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n      return this.column.headerTemplate === undefined ? this.column.name : undefined;\n    }\n  }, {\n    key: \"minWidth\",\n    get: function get() {\n      return this.column.minWidth;\n    }\n  }, {\n    key: \"maxWidth\",\n    get: function get() {\n      return this.column.maxWidth;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.column.width;\n    }\n  }, {\n    key: \"isCheckboxable\",\n    get: function get() {\n      return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n    }\n  }, {\n    key: \"onContextmenu\",\n    value: function onContextmenu($event) {\n      this.columnContextmenu.emit({\n        event: $event,\n        column: this.column\n      });\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.sortClass = this.calcSortClass(this.sortDir);\n    }\n  }, {\n    key: \"calcSortDir\",\n    value: function calcSortDir(sorts) {\n      var _this23 = this;\n\n      if (sorts && this.column) {\n        var sort = sorts.find(function (s) {\n          return s.prop === _this23.column.prop;\n        });\n        if (sort) return sort.dir;\n      }\n    }\n  }, {\n    key: \"onSort\",\n    value: function onSort() {\n      if (!this.column.sortable) return;\n      var newValue = nextSortDir(this.sortType, this.sortDir);\n      this.sort.emit({\n        column: this.column,\n        prevValue: this.sortDir,\n        newValue: newValue\n      });\n    }\n  }, {\n    key: \"calcSortClass\",\n    value: function calcSortClass(sortDir) {\n      if (!this.cellContext.column.sortable) return;\n\n      if (sortDir === SortDirection.asc) {\n        return \"sort-btn sort-asc \".concat(this.sortAscendingIcon);\n      } else if (sortDir === SortDirection.desc) {\n        return \"sort-btn sort-desc \".concat(this.sortDescendingIcon);\n      } else {\n        return \"sort-btn \".concat(this.sortUnsetIcon);\n      }\n    }\n  }]);\n\n  return DataTableHeaderCellComponent;\n}();\n\nDataTableHeaderCellComponent.ɵfac = function DataTableHeaderCellComponent_Factory(t) {\n  return new (t || DataTableHeaderCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nDataTableHeaderCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableHeaderCellComponent,\n  selectors: [[\"datatable-header-cell\"]],\n  hostAttrs: [1, \"datatable-header-cell\"],\n  hostVars: 11,\n  hostBindings: function DataTableHeaderCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"contextmenu\", function DataTableHeaderCellComponent_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextmenu($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"title\", ctx.name);\n      ɵngcc0.ɵɵclassMap(ctx.columnCssClasses);\n      ɵngcc0.ɵɵstyleProp(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"width\", ctx.width, \"px\")(\"height\", ctx.headerHeight, \"px\");\n    }\n  },\n  inputs: {\n    allRowsSelected: \"allRowsSelected\",\n    column: \"column\",\n    sorts: \"sorts\",\n    sortType: \"sortType\",\n    sortAscendingIcon: \"sortAscendingIcon\",\n    sortDescendingIcon: \"sortDescendingIcon\",\n    sortUnsetIcon: \"sortUnsetIcon\",\n    isTarget: \"isTarget\",\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    targetMarkerContext: \"targetMarkerContext\",\n    selectionType: \"selectionType\",\n    headerHeight: \"headerHeight\"\n  },\n  outputs: {\n    sort: \"sort\",\n    select: \"select\",\n    columnContextmenu: \"columnContextmenu\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[1, \"datatable-header-cell-template-wrap\"], [4, \"ngIf\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [\"class\", \"datatable-header-cell-wrapper\", 4, \"ngIf\"], [3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"datatable-header-cell-wrapper\"], [1, \"datatable-header-cell-label\", \"draggable\", 3, \"innerHTML\", \"click\"]],\n  template: function DataTableHeaderCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, DataTableHeaderCellComponent_1_Template, 1, 2, undefined, 1);\n      ɵngcc0.ɵɵtemplate(2, DataTableHeaderCellComponent_label_2_Template, 2, 1, \"label\", 2);\n      ɵngcc0.ɵɵtemplate(3, DataTableHeaderCellComponent_span_3_Template, 2, 1, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(4, DataTableHeaderCellComponent_4_Template, 1, 2, undefined, 1);\n      ɵngcc0.ɵɵelementStart(5, \"span\", 4);\n      ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_Template_span_click_5_listener() {\n        return ctx.onSort();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isTarget);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCheckboxable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.sortClass);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableHeaderCellComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"sortType\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"sortAscendingIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"sortDescendingIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"sortUnsetIcon\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"isTarget\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"targetMarkerTemplate\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"targetMarkerContext\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"allRowsSelected\", null);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"selectionType\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"column\", null);\n\n__decorate([HostBinding('style.height.px'), Input()], DataTableHeaderCellComponent.prototype, \"headerHeight\", void 0);\n\n__decorate([Input()], DataTableHeaderCellComponent.prototype, \"sorts\", null);\n\n__decorate([Output()], DataTableHeaderCellComponent.prototype, \"sort\", void 0);\n\n__decorate([Output()], DataTableHeaderCellComponent.prototype, \"select\", void 0);\n\n__decorate([Output()], DataTableHeaderCellComponent.prototype, \"columnContextmenu\", void 0);\n\n__decorate([HostBinding('class')], DataTableHeaderCellComponent.prototype, \"columnCssClasses\", null);\n\n__decorate([HostBinding('attr.title')], DataTableHeaderCellComponent.prototype, \"name\", null);\n\n__decorate([HostBinding('style.minWidth.px')], DataTableHeaderCellComponent.prototype, \"minWidth\", null);\n\n__decorate([HostBinding('style.maxWidth.px')], DataTableHeaderCellComponent.prototype, \"maxWidth\", null);\n\n__decorate([HostBinding('style.width.px')], DataTableHeaderCellComponent.prototype, \"width\", null);\n\n__decorate([HostListener('contextmenu', ['$event'])], DataTableHeaderCellComponent.prototype, \"onContextmenu\", null);\n\nvar DataTableFooterComponent = /*#__PURE__*/function () {\n  function DataTableFooterComponent() {\n    _classCallCheck(this, DataTableFooterComponent);\n\n    this.selectedCount = 0;\n    this.page = new EventEmitter();\n  }\n\n  _createClass(DataTableFooterComponent, [{\n    key: \"isVisible\",\n    get: function get() {\n      return this.rowCount / this.pageSize > 1;\n    }\n  }, {\n    key: \"curPage\",\n    get: function get() {\n      return this.offset + 1;\n    }\n  }]);\n\n  return DataTableFooterComponent;\n}();\n\nDataTableFooterComponent.ɵfac = function DataTableFooterComponent_Factory(t) {\n  return new (t || DataTableFooterComponent)();\n};\n\nDataTableFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableFooterComponent,\n  selectors: [[\"datatable-footer\"]],\n  hostAttrs: [1, \"datatable-footer\"],\n  inputs: {\n    selectedCount: \"selectedCount\",\n    footerHeight: \"footerHeight\",\n    rowCount: \"rowCount\",\n    pageSize: \"pageSize\",\n    offset: \"offset\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    totalMessage: \"totalMessage\",\n    footerTemplate: \"footerTemplate\",\n    selectedMessage: \"selectedMessage\"\n  },\n  outputs: {\n    page: \"page\"\n  },\n  decls: 4,\n  vars: 8,\n  consts: [[1, \"datatable-footer-inner\", 3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"page-count\", 4, \"ngIf\"], [3, \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\", \"change\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"page-count\"], [3, \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\", \"change\"]],\n  template: function DataTableFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, DataTableFooterComponent_1_Template, 1, 8, undefined, 1);\n      ɵngcc0.ɵɵtemplate(2, DataTableFooterComponent_div_2_Template, 3, 3, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, DataTableFooterComponent_datatable_pager_3_Template, 1, 8, \"datatable-pager\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.footerHeight, \"px\");\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.selectedMessage));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, DataTablePagerComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"footerHeight\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"rowCount\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"pageSize\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"offset\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"pagerLeftArrowIcon\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"pagerRightArrowIcon\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"pagerPreviousIcon\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"pagerNextIcon\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"totalMessage\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"footerTemplate\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"selectedCount\", void 0);\n\n__decorate([Input()], DataTableFooterComponent.prototype, \"selectedMessage\", void 0);\n\n__decorate([Output()], DataTableFooterComponent.prototype, \"page\", void 0);\n\nvar DataTablePagerComponent = /*#__PURE__*/function () {\n  function DataTablePagerComponent() {\n    _classCallCheck(this, DataTablePagerComponent);\n\n    this.change = new EventEmitter();\n    this._count = 0;\n    this._page = 1;\n    this._size = 0;\n  }\n\n  _createClass(DataTablePagerComponent, [{\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    },\n    set: function set(val) {\n      this._size = val;\n      this.pages = this.calcPages();\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._count;\n    },\n    set: function set(val) {\n      this._count = val;\n      this.pages = this.calcPages();\n    }\n  }, {\n    key: \"page\",\n    get: function get() {\n      return this._page;\n    },\n    set: function set(val) {\n      this._page = val;\n      this.pages = this.calcPages();\n    }\n  }, {\n    key: \"totalPages\",\n    get: function get() {\n      var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n      return Math.max(count || 0, 1);\n    }\n  }, {\n    key: \"canPrevious\",\n    value: function canPrevious() {\n      return this.page > 1;\n    }\n  }, {\n    key: \"canNext\",\n    value: function canNext() {\n      return this.page < this.totalPages;\n    }\n  }, {\n    key: \"prevPage\",\n    value: function prevPage() {\n      this.selectPage(this.page - 1);\n    }\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      this.selectPage(this.page + 1);\n    }\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(page) {\n      if (page > 0 && page <= this.totalPages && page !== this.page) {\n        this.page = page;\n        this.change.emit({\n          page: page\n        });\n      }\n    }\n  }, {\n    key: \"calcPages\",\n    value: function calcPages(page) {\n      var pages = [];\n      var startPage = 1;\n      var endPage = this.totalPages;\n      var maxSize = 5;\n      var isMaxSized = maxSize < this.totalPages;\n      page = page || this.page;\n\n      if (isMaxSized) {\n        startPage = page - Math.floor(maxSize / 2);\n        endPage = page + Math.floor(maxSize / 2);\n\n        if (startPage < 1) {\n          startPage = 1;\n          endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n        } else if (endPage > this.totalPages) {\n          startPage = Math.max(this.totalPages - maxSize + 1, 1);\n          endPage = this.totalPages;\n        }\n      }\n\n      for (var num = startPage; num <= endPage; num++) {\n        pages.push({\n          number: num,\n          text: num\n        });\n      }\n\n      return pages;\n    }\n  }]);\n\n  return DataTablePagerComponent;\n}();\n\nDataTablePagerComponent.ɵfac = function DataTablePagerComponent_Factory(t) {\n  return new (t || DataTablePagerComponent)();\n};\n\nDataTablePagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTablePagerComponent,\n  selectors: [[\"datatable-pager\"]],\n  hostAttrs: [1, \"datatable-pager\"],\n  inputs: {\n    size: \"size\",\n    count: \"count\",\n    page: \"page\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  decls: 14,\n  vars: 21,\n  consts: [[1, \"pager\"], [\"role\", \"button\", \"aria-label\", \"go to first page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to previous page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"class\", \"pages\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"aria-label\", \"go to next page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to last page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", 1, \"pages\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n  template: function DataTablePagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"li\");\n      ɵngcc0.ɵɵelementStart(2, \"a\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_2_listener() {\n        return ctx.selectPage(1);\n      });\n      ɵngcc0.ɵɵelement(3, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"li\");\n      ɵngcc0.ɵɵelementStart(5, \"a\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_5_listener() {\n        return ctx.prevPage();\n      });\n      ɵngcc0.ɵɵelement(6, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(7, DataTablePagerComponent_li_7_Template, 3, 4, \"li\", 3);\n      ɵngcc0.ɵɵelementStart(8, \"li\");\n      ɵngcc0.ɵɵelementStart(9, \"a\", 4);\n      ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_9_listener() {\n        return ctx.nextPage();\n      });\n      ɵngcc0.ɵɵelement(10, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(11, \"li\");\n      ɵngcc0.ɵɵelementStart(12, \"a\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_12_listener() {\n        return ctx.selectPage(ctx.totalPages);\n      });\n      ɵngcc0.ɵɵelement(13, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerPreviousIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerLeftArrowIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerRightArrowIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerNextIcon);\n    }\n  },\n  directives: [ɵngcc1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"pagerLeftArrowIcon\", void 0);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"pagerRightArrowIcon\", void 0);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"pagerPreviousIcon\", void 0);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"pagerNextIcon\", void 0);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"size\", null);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"count\", null);\n\n__decorate([Input()], DataTablePagerComponent.prototype, \"page\", null);\n\n__decorate([Output()], DataTablePagerComponent.prototype, \"change\", void 0);\n\nvar ProgressBarComponent = function ProgressBarComponent() {\n  _classCallCheck(this, ProgressBarComponent);\n};\n\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n  return new (t || ProgressBarComponent)();\n};\n\nProgressBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ProgressBarComponent,\n  selectors: [[\"datatable-progress\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[\"role\", \"progressbar\", 1, \"progress-linear\"], [1, \"container\"], [1, \"bar\"]],\n  template: function ProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelement(2, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"up\"] = 38] = \"up\";\n  Keys[Keys[\"down\"] = 40] = \"down\";\n  Keys[Keys[\"return\"] = 13] = \"return\";\n  Keys[Keys[\"escape\"] = 27] = \"escape\";\n  Keys[Keys[\"left\"] = 37] = \"left\";\n  Keys[Keys[\"right\"] = 39] = \"right\";\n})(Keys || (Keys = {}));\n\nvar DataTableBodyRowComponent = /*#__PURE__*/function () {\n  function DataTableBodyRowComponent(differs, scrollbarHelper, cd, element) {\n    _classCallCheck(this, DataTableBodyRowComponent);\n\n    this.differs = differs;\n    this.scrollbarHelper = scrollbarHelper;\n    this.cd = cd;\n    this.treeStatus = 'collapsed';\n    this.activate = new EventEmitter();\n    this.treeAction = new EventEmitter();\n    this._groupStyles = {\n      left: {},\n      center: {},\n      right: {}\n    };\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  _createClass(DataTableBodyRowComponent, [{\n    key: \"columns\",\n    get: function get() {\n      return this._columns;\n    },\n    set: function set(val) {\n      this._columns = val;\n      this.recalculateColumns(val);\n      this.buildStylesByGroup();\n    }\n  }, {\n    key: \"innerWidth\",\n    get: function get() {\n      return this._innerWidth;\n    },\n    set: function set(val) {\n      if (this._columns) {\n        var colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n      }\n\n      this._innerWidth = val;\n      this.recalculateColumns();\n      this.buildStylesByGroup();\n    }\n  }, {\n    key: \"offsetX\",\n    get: function get() {\n      return this._offsetX;\n    },\n    set: function set(val) {\n      this._offsetX = val;\n      this.buildStylesByGroup();\n    }\n  }, {\n    key: \"cssClass\",\n    get: function get() {\n      var cls = 'datatable-body-row';\n\n      if (this.isSelected) {\n        cls += ' active';\n      }\n\n      if (this.rowIndex % 2 !== 0) {\n        cls += ' datatable-row-odd';\n      }\n\n      if (this.rowIndex % 2 === 0) {\n        cls += ' datatable-row-even';\n      }\n\n      if (this.rowClass) {\n        var res = this.rowClass(this.row);\n\n        if (typeof res === 'string') {\n          cls += \" \".concat(res);\n        } else if (typeof res === 'object') {\n          var keys = Object.keys(res);\n\n          for (var _i5 = 0, _keys2 = keys; _i5 < _keys2.length; _i5++) {\n            var k = _keys2[_i5];\n\n            if (res[k] === true) {\n              cls += \" \".concat(k);\n            }\n          }\n        }\n      }\n\n      return cls;\n    }\n  }, {\n    key: \"columnsTotalWidths\",\n    get: function get() {\n      return this._columnGroupWidths.total;\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this._rowDiffer.diff(this.row)) {\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"trackByGroups\",\n    value: function trackByGroups(index, colGroup) {\n      return colGroup.type;\n    }\n  }, {\n    key: \"columnTrackingFn\",\n    value: function columnTrackingFn(index, column) {\n      return column.$$id;\n    }\n  }, {\n    key: \"buildStylesByGroup\",\n    value: function buildStylesByGroup() {\n      this._groupStyles.left = this.calcStylesByGroup('left');\n      this._groupStyles.center = this.calcStylesByGroup('center');\n      this._groupStyles.right = this.calcStylesByGroup('right');\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"calcStylesByGroup\",\n    value: function calcStylesByGroup(group) {\n      var widths = this._columnGroupWidths;\n      var offsetX = this.offsetX;\n      var styles = {\n        width: \"\".concat(widths[group], \"px\")\n      };\n\n      if (group === 'left') {\n        translateXY(styles, offsetX, 0);\n      } else if (group === 'right') {\n        var bodyWidth = parseInt(this.innerWidth + '', 0);\n        var totalDiff = widths.total - bodyWidth;\n        var offsetDiff = totalDiff - offsetX;\n        var offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n        translateXY(styles, offset, 0);\n      }\n\n      return styles;\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, index) {\n      event.cellIndex = index;\n      event.rowElement = this._element;\n      this.activate.emit(event);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var keyCode = event.keyCode;\n      var isTargetRow = event.target === this._element;\n      var isAction = keyCode === Keys.return || keyCode === Keys.down || keyCode === Keys.up || keyCode === Keys.left || keyCode === Keys.right;\n\n      if (isAction && isTargetRow) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.activate.emit({\n          type: 'keydown',\n          event: event,\n          row: this.row,\n          rowElement: this._element\n        });\n      }\n    }\n  }, {\n    key: \"onMouseenter\",\n    value: function onMouseenter(event) {\n      this.activate.emit({\n        type: 'mouseenter',\n        event: event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }, {\n    key: \"recalculateColumns\",\n    value: function recalculateColumns() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.columns;\n      this._columns = val;\n      var colsByPin = columnsByPin(this._columns);\n      this._columnsByPin = columnsByPinArr(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n    }\n  }, {\n    key: \"onTreeAction\",\n    value: function onTreeAction() {\n      this.treeAction.emit();\n    }\n  }]);\n\n  return DataTableBodyRowComponent;\n}();\n\nDataTableBodyRowComponent.ɵfac = function DataTableBodyRowComponent_Factory(t) {\n  return new (t || DataTableBodyRowComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ScrollbarHelper, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDataTableBodyRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableBodyRowComponent,\n  selectors: [[\"datatable-body-row\"]],\n  hostVars: 6,\n  hostBindings: function DataTableBodyRowComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function DataTableBodyRowComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"mouseenter\", function DataTableBodyRowComponent_mouseenter_HostBindingHandler($event) {\n        return ctx.onMouseenter($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClass);\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.columnsTotalWidths, \"px\")(\"height\", ctx.rowHeight, \"px\");\n    }\n  },\n  inputs: {\n    treeStatus: \"treeStatus\",\n    columns: \"columns\",\n    innerWidth: \"innerWidth\",\n    offsetX: \"offsetX\",\n    expanded: \"expanded\",\n    rowClass: \"rowClass\",\n    row: \"row\",\n    group: \"group\",\n    isSelected: \"isSelected\",\n    rowIndex: \"rowIndex\",\n    displayCheck: \"displayCheck\",\n    rowHeight: \"rowHeight\"\n  },\n  outputs: {\n    activate: \"activate\",\n    treeAction: \"treeAction\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"tabindex\", \"-1\", 3, \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\", \"activate\", \"treeAction\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"tabindex\", \"-1\", 3, \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\", \"activate\", \"treeAction\"]],\n  template: function DataTableBodyRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, DataTableBodyRowComponent_div_0_Template, 2, 6, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgForOf, ɵngcc1.NgStyle, DataTableBodyCellComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableBodyRowComponent.ctorParameters = function () {\n  return [{\n    type: KeyValueDiffers\n  }, {\n    type: ScrollbarHelper,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"columns\", null);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"innerWidth\", null);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"expanded\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"rowClass\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"row\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"group\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"isSelected\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"rowIndex\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"displayCheck\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"treeStatus\", void 0);\n\n__decorate([Input()], DataTableBodyRowComponent.prototype, \"offsetX\", null);\n\n__decorate([HostBinding('class')], DataTableBodyRowComponent.prototype, \"cssClass\", null);\n\n__decorate([HostBinding('style.height.px'), Input()], DataTableBodyRowComponent.prototype, \"rowHeight\", void 0);\n\n__decorate([HostBinding('style.width.px')], DataTableBodyRowComponent.prototype, \"columnsTotalWidths\", null);\n\n__decorate([Output()], DataTableBodyRowComponent.prototype, \"activate\", void 0);\n\n__decorate([Output()], DataTableBodyRowComponent.prototype, \"treeAction\", void 0);\n\n__decorate([HostListener('keydown', ['$event'])], DataTableBodyRowComponent.prototype, \"onKeyDown\", null);\n\n__decorate([HostListener('mouseenter', ['$event'])], DataTableBodyRowComponent.prototype, \"onMouseenter\", null);\n\nDataTableBodyRowComponent = __decorate([__param(1, SkipSelf())], DataTableBodyRowComponent);\n\nvar DataTableRowWrapperComponent = /*#__PURE__*/function () {\n  function DataTableRowWrapperComponent(cd, differs) {\n    _classCallCheck(this, DataTableRowWrapperComponent);\n\n    this.cd = cd;\n    this.differs = differs;\n    this.rowContextmenu = new EventEmitter(false);\n    this.groupContext = {\n      group: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n    this.rowContext = {\n      row: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n    this._expanded = false;\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  _createClass(DataTableRowWrapperComponent, [{\n    key: \"rowIndex\",\n    get: function get() {\n      return this._rowIndex;\n    },\n    set: function set(val) {\n      this._rowIndex = val;\n      this.rowContext.rowIndex = val;\n      this.groupContext.rowIndex = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"expanded\",\n    get: function get() {\n      return this._expanded;\n    },\n    set: function set(val) {\n      this._expanded = val;\n      this.groupContext.expanded = val;\n      this.rowContext.expanded = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.rowDiffer.diff(this.row)) {\n        this.rowContext.row = this.row;\n        this.groupContext.group = this.row;\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"onContextmenu\",\n    value: function onContextmenu($event) {\n      this.rowContextmenu.emit({\n        event: $event,\n        row: this.row\n      });\n    }\n  }, {\n    key: \"getGroupHeaderStyle\",\n    value: function getGroupHeaderStyle() {\n      var styles = {};\n      styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n      styles['backface-visibility'] = 'hidden';\n      styles['width'] = this.innerWidth;\n      return styles;\n    }\n  }]);\n\n  return DataTableRowWrapperComponent;\n}();\n\nDataTableRowWrapperComponent.ɵfac = function DataTableRowWrapperComponent_Factory(t) {\n  return new (t || DataTableRowWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers));\n};\n\nDataTableRowWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableRowWrapperComponent,\n  selectors: [[\"datatable-row-wrapper\"]],\n  hostAttrs: [1, \"datatable-row-wrapper\"],\n  hostBindings: function DataTableRowWrapperComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"contextmenu\", function DataTableRowWrapperComponent_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextmenu($event);\n      });\n    }\n  },\n  inputs: {\n    rowIndex: \"rowIndex\",\n    expanded: \"expanded\",\n    innerWidth: \"innerWidth\",\n    rowDetail: \"rowDetail\",\n    groupHeader: \"groupHeader\",\n    offsetX: \"offsetX\",\n    detailRowHeight: \"detailRowHeight\",\n    row: \"row\",\n    groupedRows: \"groupedRows\"\n  },\n  outputs: {\n    rowContextmenu: \"rowContextmenu\"\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 3,\n  consts: [[\"class\", \"datatable-group-header\", 3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"datatable-row-detail\", 3, \"height\", 4, \"ngIf\"], [1, \"datatable-group-header\", 3, \"ngStyle\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-row-detail\"]],\n  template: function DataTableRowWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_Template, 2, 2, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_ng_content_1_Template, 1, 0, \"ng-content\", 1);\n      ɵngcc0.ɵɵtemplate(2, DataTableRowWrapperComponent_div_2_Template, 2, 3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template && ctx.expanded || !ctx.groupHeader || !ctx.groupHeader.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.rowDetail && ctx.rowDetail.template && ctx.expanded);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableRowWrapperComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: KeyValueDiffers\n  }];\n};\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"innerWidth\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"rowDetail\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"groupHeader\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"offsetX\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"detailRowHeight\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"row\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"groupedRows\", void 0);\n\n__decorate([Output()], DataTableRowWrapperComponent.prototype, \"rowContextmenu\", void 0);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"rowIndex\", null);\n\n__decorate([Input()], DataTableRowWrapperComponent.prototype, \"expanded\", null);\n\n__decorate([HostListener('contextmenu', ['$event'])], DataTableRowWrapperComponent.prototype, \"onContextmenu\", null);\n\nvar DataTableBodyCellComponent = /*#__PURE__*/function () {\n  function DataTableBodyCellComponent(element, cd) {\n    _classCallCheck(this, DataTableBodyCellComponent);\n\n    this.cd = cd;\n    this.activate = new EventEmitter();\n    this.treeAction = new EventEmitter();\n    this.isFocused = false;\n    this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n    this.activateFn = this.activate.emit.bind(this.activate);\n    this.cellContext = {\n      onCheckboxChangeFn: this.onCheckboxChangeFn,\n      activateFn: this.activateFn,\n      row: this.row,\n      group: this.group,\n      value: this.value,\n      column: this.column,\n      rowHeight: this.rowHeight,\n      isSelected: this.isSelected,\n      rowIndex: this.rowIndex,\n      treeStatus: this.treeStatus,\n      onTreeAction: this.onTreeAction.bind(this)\n    };\n    this._element = element.nativeElement;\n  }\n\n  _createClass(DataTableBodyCellComponent, [{\n    key: \"group\",\n    get: function get() {\n      return this._group;\n    },\n    set: function set(group) {\n      this._group = group;\n      this.cellContext.group = group;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"rowHeight\",\n    get: function get() {\n      return this._rowHeight;\n    },\n    set: function set(val) {\n      this._rowHeight = val;\n      this.cellContext.rowHeight = val;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"isSelected\",\n    get: function get() {\n      return this._isSelected;\n    },\n    set: function set(val) {\n      this._isSelected = val;\n      this.cellContext.isSelected = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"expanded\",\n    get: function get() {\n      return this._expanded;\n    },\n    set: function set(val) {\n      this._expanded = val;\n      this.cellContext.expanded = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"rowIndex\",\n    get: function get() {\n      return this._rowIndex;\n    },\n    set: function set(val) {\n      this._rowIndex = val;\n      this.cellContext.rowIndex = val;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"column\",\n    get: function get() {\n      return this._column;\n    },\n    set: function set(column) {\n      this._column = column;\n      this.cellContext.column = column;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"row\",\n    get: function get() {\n      return this._row;\n    },\n    set: function set(row) {\n      this._row = row;\n      this.cellContext.row = row;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"sorts\",\n    get: function get() {\n      return this._sorts;\n    },\n    set: function set(val) {\n      this._sorts = val;\n      this.calcSortDir = this.calcSortDir(val);\n    }\n  }, {\n    key: \"treeStatus\",\n    get: function get() {\n      return this._treeStatus;\n    },\n    set: function set(status) {\n      if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n        this._treeStatus = 'collapsed';\n      } else {\n        this._treeStatus = status;\n      }\n\n      this.cellContext.treeStatus = this._treeStatus;\n      this.checkValueUpdates();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"columnCssClasses\",\n    get: function get() {\n      var cls = 'datatable-body-cell';\n\n      if (this.column.cellClass) {\n        if (typeof this.column.cellClass === 'string') {\n          cls += ' ' + this.column.cellClass;\n        } else if (typeof this.column.cellClass === 'function') {\n          var res = this.column.cellClass({\n            row: this.row,\n            group: this.group,\n            column: this.column,\n            value: this.value,\n            rowHeight: this.rowHeight\n          });\n\n          if (typeof res === 'string') {\n            cls += ' ' + res;\n          } else if (typeof res === 'object') {\n            var keys = Object.keys(res);\n\n            for (var _i6 = 0, _keys3 = keys; _i6 < _keys3.length; _i6++) {\n              var k = _keys3[_i6];\n\n              if (res[k] === true) {\n                cls += \" \".concat(k);\n              }\n            }\n          }\n        }\n      }\n\n      if (!this.sortDir) {\n        cls += ' sort-active';\n      }\n\n      if (this.isFocused) {\n        cls += ' active';\n      }\n\n      if (this.sortDir === SortDirection.asc) {\n        cls += ' sort-asc';\n      }\n\n      if (this.sortDir === SortDirection.desc) {\n        cls += ' sort-desc';\n      }\n\n      return cls;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.column.width;\n    }\n  }, {\n    key: \"minWidth\",\n    get: function get() {\n      return this.column.minWidth;\n    }\n  }, {\n    key: \"maxWidth\",\n    get: function get() {\n      return this.column.maxWidth;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      var height = this.rowHeight;\n\n      if (isNaN(height)) {\n        return height;\n      }\n\n      return height + 'px';\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.checkValueUpdates();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.cellTemplate) {\n        this.cellTemplate.clear();\n      }\n    }\n  }, {\n    key: \"checkValueUpdates\",\n    value: function checkValueUpdates() {\n      var value = '';\n\n      if (!this.row || !this.column) {\n        value = '';\n      } else {\n        var val = this.column.$$valueGetter(this.row, this.column.prop);\n        var userPipe = this.column.pipe;\n\n        if (userPipe) {\n          value = userPipe.transform(val);\n        } else if (value !== undefined) {\n          value = val;\n        }\n      }\n\n      if (this.value !== value) {\n        this.value = value;\n        this.cellContext.value = value;\n        this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.isFocused = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.isFocused = false;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.activate.emit({\n        type: 'click',\n        event: event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }, {\n    key: \"onDblClick\",\n    value: function onDblClick(event) {\n      this.activate.emit({\n        type: 'dblclick',\n        event: event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var keyCode = event.keyCode;\n      var isTargetCell = event.target === this._element;\n      var isAction = keyCode === Keys.return || keyCode === Keys.down || keyCode === Keys.up || keyCode === Keys.left || keyCode === Keys.right;\n\n      if (isAction && isTargetCell) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.activate.emit({\n          type: 'keydown',\n          event: event,\n          row: this.row,\n          group: this.group,\n          rowHeight: this.rowHeight,\n          column: this.column,\n          value: this.value,\n          cellElement: this._element\n        });\n      }\n    }\n  }, {\n    key: \"onCheckboxChange\",\n    value: function onCheckboxChange(event) {\n      this.activate.emit({\n        type: 'checkbox',\n        event: event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element,\n        treeStatus: 'collapsed'\n      });\n    }\n  }, {\n    key: \"calcSortDir\",\n    value: function calcSortDir(sorts) {\n      var _this24 = this;\n\n      if (!sorts) {\n        return;\n      }\n\n      var sort = sorts.find(function (s) {\n        return s.prop === _this24.column.prop;\n      });\n\n      if (sort) {\n        return sort.dir;\n      }\n    }\n  }, {\n    key: \"stripHtml\",\n    value: function stripHtml(html) {\n      if (!html.replace) {\n        return html;\n      }\n\n      return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    }\n  }, {\n    key: \"onTreeAction\",\n    value: function onTreeAction() {\n      this.treeAction.emit(this.row);\n    }\n  }, {\n    key: \"calcLeftMargin\",\n    value: function calcLeftMargin(column, row) {\n      var levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n      return column.isTreeColumn ? row.level * levelIndent : 0;\n    }\n  }]);\n\n  return DataTableBodyCellComponent;\n}();\n\nDataTableBodyCellComponent.ɵfac = function DataTableBodyCellComponent_Factory(t) {\n  return new (t || DataTableBodyCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nDataTableBodyCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableBodyCellComponent,\n  selectors: [[\"datatable-body-cell\"]],\n  viewQuery: function DataTableBodyCellComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c3, true, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n    }\n  },\n  hostVars: 10,\n  hostBindings: function DataTableBodyCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function DataTableBodyCellComponent_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function DataTableBodyCellComponent_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"click\", function DataTableBodyCellComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"dblclick\", function DataTableBodyCellComponent_dblclick_HostBindingHandler($event) {\n        return ctx.onDblClick($event);\n      })(\"keydown\", function DataTableBodyCellComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.columnCssClasses);\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    group: \"group\",\n    rowHeight: \"rowHeight\",\n    isSelected: \"isSelected\",\n    expanded: \"expanded\",\n    rowIndex: \"rowIndex\",\n    column: \"column\",\n    row: \"row\",\n    sorts: \"sorts\",\n    treeStatus: \"treeStatus\",\n    displayCheck: \"displayCheck\"\n  },\n  outputs: {\n    activate: \"activate\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 6,\n  consts: [[1, \"datatable-body-cell-label\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"title\", \"innerHTML\", 4, \"ngIf\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"click\"], [\"class\", \"datatable-tree-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"datatable-tree-button\", 3, \"disabled\", \"click\"], [\"class\", \"icon datatable-icon-collapse\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-up\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-down\", 4, \"ngIf\"], [1, \"icon\", \"datatable-icon-collapse\"], [1, \"icon\", \"datatable-icon-up\"], [1, \"icon\", \"datatable-icon-down\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"title\", \"innerHTML\"], [\"cellTemplate\", \"\"]],\n  template: function DataTableBodyCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, DataTableBodyCellComponent_label_1_Template, 2, 1, \"label\", 1);\n      ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n      ɵngcc0.ɵɵtemplate(3, DataTableBodyCellComponent_span_3_Template, 1, 2, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(4, DataTableBodyCellComponent_4_Template, 2, 2, undefined, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx.calcLeftMargin(ctx.column, ctx.row), \"px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.checkboxable && (!ctx.displayCheck || ctx.displayCheck(ctx.row, ctx.column, ctx.value)));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isTreeColumn);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.cellTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.cellTemplate);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nDataTableBodyCellComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"displayCheck\", void 0);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"group\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"rowHeight\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"isSelected\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"expanded\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"rowIndex\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"column\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"row\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"sorts\", null);\n\n__decorate([Input()], DataTableBodyCellComponent.prototype, \"treeStatus\", null);\n\n__decorate([Output()], DataTableBodyCellComponent.prototype, \"activate\", void 0);\n\n__decorate([Output()], DataTableBodyCellComponent.prototype, \"treeAction\", void 0);\n\n__decorate([ViewChild('cellTemplate', {\n  read: ViewContainerRef,\n  static: true\n})], DataTableBodyCellComponent.prototype, \"cellTemplate\", void 0);\n\n__decorate([HostBinding('class')], DataTableBodyCellComponent.prototype, \"columnCssClasses\", null);\n\n__decorate([HostBinding('style.width.px')], DataTableBodyCellComponent.prototype, \"width\", null);\n\n__decorate([HostBinding('style.minWidth.px')], DataTableBodyCellComponent.prototype, \"minWidth\", null);\n\n__decorate([HostBinding('style.maxWidth.px')], DataTableBodyCellComponent.prototype, \"maxWidth\", null);\n\n__decorate([HostBinding('style.height')], DataTableBodyCellComponent.prototype, \"height\", null);\n\n__decorate([HostListener('focus')], DataTableBodyCellComponent.prototype, \"onFocus\", null);\n\n__decorate([HostListener('blur')], DataTableBodyCellComponent.prototype, \"onBlur\", null);\n\n__decorate([HostListener('click', ['$event'])], DataTableBodyCellComponent.prototype, \"onClick\", null);\n\n__decorate([HostListener('dblclick', ['$event'])], DataTableBodyCellComponent.prototype, \"onDblClick\", null);\n\n__decorate([HostListener('keydown', ['$event'])], DataTableBodyCellComponent.prototype, \"onKeyDown\", null);\n\nfunction selectRows(selected, row, comparefn) {\n  var selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n  var reverse = index < prevIndex;\n\n  for (var i = 0; i < rows.length; i++) {\n    var row = rows[i];\n    var greater = i >= prevIndex && i <= index;\n    var lesser = i <= prevIndex && i >= index;\n    var range = {\n      start: 0,\n      end: 0\n    };\n\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if (reverse && lesser || !reverse && greater) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n\nvar DataTableSelectionComponent = /*#__PURE__*/function () {\n  function DataTableSelectionComponent() {\n    _classCallCheck(this, DataTableSelectionComponent);\n\n    this.activate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  _createClass(DataTableSelectionComponent, [{\n    key: \"selectRow\",\n    value: function selectRow(event, index, row) {\n      var _this$selected3;\n\n      if (!this.selectEnabled) return;\n      var chkbox = this.selectionType === SelectionType.checkbox;\n      var multi = this.selectionType === SelectionType.multi;\n      var multiClick = this.selectionType === SelectionType.multiClick;\n      var selected = [];\n\n      if (multi || chkbox || multiClick) {\n        if (event.shiftKey) {\n          selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n        } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n          selected = selectRows(_toConsumableArray(this.selected), row, this.getRowSelectedIdx.bind(this));\n        } else {\n          selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n        }\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n\n      if (typeof this.selectCheck === 'function') {\n        selected = selected.filter(this.selectCheck.bind(this));\n      }\n\n      this.selected.splice(0, this.selected.length);\n\n      (_this$selected3 = this.selected).push.apply(_this$selected3, _toConsumableArray(selected));\n\n      this.prevIndex = index;\n      this.select.emit({\n        selected: selected\n      });\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(model, index) {\n      var type = model.type,\n          event = model.event,\n          row = model.row;\n      var chkbox = this.selectionType === SelectionType.checkbox;\n      var select = !chkbox && (type === 'click' || type === 'dblclick') || chkbox && type === 'checkbox';\n\n      if (select) {\n        this.selectRow(event, index, row);\n      } else if (type === 'keydown') {\n        if (event.keyCode === Keys.return) {\n          this.selectRow(event, index, row);\n        } else {\n          this.onKeyboardFocus(model);\n        }\n      }\n\n      this.activate.emit(model);\n    }\n  }, {\n    key: \"onKeyboardFocus\",\n    value: function onKeyboardFocus(model) {\n      var keyCode = model.event.keyCode;\n      var shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n      if (shouldFocus) {\n        var isCellSelection = this.selectionType === SelectionType.cell;\n\n        if (!model.cellElement || !isCellSelection) {\n          this.focusRow(model.rowElement, keyCode);\n        } else if (isCellSelection) {\n          this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n        }\n      }\n    }\n  }, {\n    key: \"focusRow\",\n    value: function focusRow(rowElement, keyCode) {\n      var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) nextRowElement.focus();\n    }\n  }, {\n    key: \"getPrevNextRow\",\n    value: function getPrevNextRow(rowElement, keyCode) {\n      var parentElement = rowElement.parentElement;\n\n      if (parentElement) {\n        var focusElement;\n\n        if (keyCode === Keys.up) {\n          focusElement = parentElement.previousElementSibling;\n        } else if (keyCode === Keys.down) {\n          focusElement = parentElement.nextElementSibling;\n        }\n\n        if (focusElement && focusElement.children.length) {\n          return focusElement.children[0];\n        }\n      }\n    }\n  }, {\n    key: \"focusCell\",\n    value: function focusCell(cellElement, rowElement, keyCode, cellIndex) {\n      var nextCellElement;\n\n      if (keyCode === Keys.left) {\n        nextCellElement = cellElement.previousElementSibling;\n      } else if (keyCode === Keys.right) {\n        nextCellElement = cellElement.nextElementSibling;\n      } else if (keyCode === Keys.up || keyCode === Keys.down) {\n        var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n\n        if (nextRowElement) {\n          var children = nextRowElement.getElementsByClassName('datatable-body-cell');\n          if (children.length) nextCellElement = children[cellIndex];\n        }\n      }\n\n      if (nextCellElement) nextCellElement.focus();\n    }\n  }, {\n    key: \"getRowSelected\",\n    value: function getRowSelected(row) {\n      return this.getRowSelectedIdx(row, this.selected) > -1;\n    }\n  }, {\n    key: \"getRowSelectedIdx\",\n    value: function getRowSelectedIdx(row, selected) {\n      var _this25 = this;\n\n      if (!selected || !selected.length) return -1;\n      var rowId = this.rowIdentity(row);\n      return selected.findIndex(function (r) {\n        var id = _this25.rowIdentity(r);\n\n        return id === rowId;\n      });\n    }\n  }]);\n\n  return DataTableSelectionComponent;\n}();\n\nDataTableSelectionComponent.ɵfac = function DataTableSelectionComponent_Factory(t) {\n  return new (t || DataTableSelectionComponent)();\n};\n\nDataTableSelectionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableSelectionComponent,\n  selectors: [[\"datatable-selection\"]],\n  inputs: {\n    rows: \"rows\",\n    selected: \"selected\",\n    selectEnabled: \"selectEnabled\",\n    selectionType: \"selectionType\",\n    rowIdentity: \"rowIdentity\",\n    selectCheck: \"selectCheck\"\n  },\n  outputs: {\n    activate: \"activate\",\n    select: \"select\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function DataTableSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"rows\", void 0);\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"selected\", void 0);\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"selectEnabled\", void 0);\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"selectionType\", void 0);\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"rowIdentity\", void 0);\n\n__decorate([Input()], DataTableSelectionComponent.prototype, \"selectCheck\", void 0);\n\n__decorate([Output()], DataTableSelectionComponent.prototype, \"activate\", void 0);\n\n__decorate([Output()], DataTableSelectionComponent.prototype, \"select\", void 0);\n\nfunction defaultSumFunc(cells) {\n  var cellsWithValues = cells.filter(function (cell) {\n    return !!cell;\n  });\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n\n  if (cellsWithValues.some(function (cell) {\n    return typeof cell !== 'number';\n  })) {\n    return null;\n  }\n\n  return cellsWithValues.reduce(function (res, cell) {\n    return res + cell;\n  });\n}\n\nfunction noopSumFunc(cells) {\n  return null;\n}\n\nvar DataTableSummaryRowComponent = /*#__PURE__*/function () {\n  function DataTableSummaryRowComponent() {\n    _classCallCheck(this, DataTableSummaryRowComponent);\n\n    this.summaryRow = {};\n  }\n\n  _createClass(DataTableSummaryRowComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      if (!this.columns || !this.rows) {\n        return;\n      }\n\n      this.updateInternalColumns();\n      this.updateValues();\n    }\n  }, {\n    key: \"updateInternalColumns\",\n    value: function updateInternalColumns() {\n      this._internalColumns = this.columns.map(function (col) {\n        return Object.assign(Object.assign({}, col), {\n          cellTemplate: col.summaryTemplate\n        });\n      });\n    }\n  }, {\n    key: \"updateValues\",\n    value: function updateValues() {\n      var _this26 = this;\n\n      this.summaryRow = {};\n      this.columns.filter(function (col) {\n        return !col.summaryTemplate;\n      }).forEach(function (col) {\n        var cellsFromSingleColumn = _this26.rows.map(function (row) {\n          return row[col.prop];\n        });\n\n        var sumFunc = _this26.getSummaryFunction(col);\n\n        _this26.summaryRow[col.prop] = col.pipe ? col.pipe.transform(sumFunc(cellsFromSingleColumn)) : sumFunc(cellsFromSingleColumn);\n      });\n    }\n  }, {\n    key: \"getSummaryFunction\",\n    value: function getSummaryFunction(column) {\n      if (column.summaryFunc === undefined) {\n        return defaultSumFunc;\n      } else if (column.summaryFunc === null) {\n        return noopSumFunc;\n      } else {\n        return column.summaryFunc;\n      }\n    }\n  }]);\n\n  return DataTableSummaryRowComponent;\n}();\n\nDataTableSummaryRowComponent.ɵfac = function DataTableSummaryRowComponent_Factory(t) {\n  return new (t || DataTableSummaryRowComponent)();\n};\n\nDataTableSummaryRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DataTableSummaryRowComponent,\n  selectors: [[\"datatable-summary-row\"]],\n  hostAttrs: [1, \"datatable-summary-row\"],\n  inputs: {\n    rows: \"rows\",\n    columns: \"columns\",\n    rowHeight: \"rowHeight\",\n    offsetX: \"offsetX\",\n    innerWidth: \"innerWidth\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\"]],\n  template: function DataTableSummaryRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, DataTableSummaryRowComponent_datatable_body_row_0_Template, 1, 6, \"datatable-body-row\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.summaryRow && ctx._internalColumns);\n    }\n  },\n  directives: [ɵngcc1.NgIf, DataTableBodyRowComponent],\n  encapsulation: 2\n});\n\n__decorate([Input()], DataTableSummaryRowComponent.prototype, \"rows\", void 0);\n\n__decorate([Input()], DataTableSummaryRowComponent.prototype, \"columns\", void 0);\n\n__decorate([Input()], DataTableSummaryRowComponent.prototype, \"rowHeight\", void 0);\n\n__decorate([Input()], DataTableSummaryRowComponent.prototype, \"offsetX\", void 0);\n\n__decorate([Input()], DataTableSummaryRowComponent.prototype, \"innerWidth\", void 0);\n\nvar NgxDatatableModule_1;\n\nvar NgxDatatableModule = NgxDatatableModule_1 = /*#__PURE__*/function () {\n  function NgxDatatableModule() {\n    _classCallCheck(this, NgxDatatableModule);\n  }\n\n  _createClass(NgxDatatableModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param configuration\n     */\n    function forRoot(configuration) {\n      return {\n        ngModule: NgxDatatableModule_1,\n        providers: [{\n          provide: 'configuration',\n          useValue: configuration\n        }]\n      };\n    }\n  }]);\n\n  return NgxDatatableModule;\n}();\n\nNgxDatatableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgxDatatableModule\n});\nNgxDatatableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgxDatatableModule_Factory(t) {\n    return new (t || NgxDatatableModule)();\n  },\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  imports: [[CommonModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollbarHelper, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DimensionsHelper, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnChangesService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-footer-template]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(VisibilityDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[visibilityObserver]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    isVisible: [{\n      type: HostBinding,\n      args: ['class.visible']\n    }],\n    visible: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[draggable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    dragX: [{\n      type: Input\n    }],\n    dragY: [{\n      type: Input\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragEventTarget: [{\n      type: Input\n    }],\n    dragModel: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizeableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[resizeable]',\n      host: {\n        '[class.resizeable]': 'resizeEnabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    resizeEnabled: [{\n      type: Input\n    }],\n    resize: [{\n      type: Output\n    }],\n    onMousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(OrderableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[orderable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.KeyValueDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    reorder: [{\n      type: Output\n    }],\n    targetChanged: [{\n      type: Output\n    }],\n    draggables: [{\n      type: ContentChildren,\n      args: [DraggableDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LongPressDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[long-press]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    pressEnabled: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    longPressStart: [{\n      type: Output\n    }],\n    longPressing: [{\n      type: Output\n    }],\n    longPressEnd: [{\n      type: Output\n    }],\n    press: [{\n      type: HostBinding,\n      args: ['class.press']\n    }],\n    isLongPress: [{\n      type: HostBinding,\n      args: ['class.longpress']\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    pressModel: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-scroller',\n      template: \" <ng-content></ng-content> \",\n      host: {\n        class: 'datatable-scroll'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Output\n    }],\n    scrollHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }],\n    scrollWidth: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }, {\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableGroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-group-header-template]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableGroupHeaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-group-header'\n    }]\n  }], function () {\n    return [];\n  }, {\n    rowHeight: [{\n      type: Input\n    }],\n    toggle: [{\n      type: Output\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DatatableGroupHeaderTemplateDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableColumnHeaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-header-template]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableColumnCellDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-cell-template]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableColumnCellTreeToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-tree-toggle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-column'\n    }]\n  }], function () {\n    return [{\n      type: ColumnChangesService\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    prop: [{\n      type: Input\n    }],\n    frozenLeft: [{\n      type: Input\n    }],\n    frozenRight: [{\n      type: Input\n    }],\n    flexGrow: [{\n      type: Input\n    }],\n    resizeable: [{\n      type: Input\n    }],\n    comparator: [{\n      type: Input\n    }],\n    pipe: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input\n    }],\n    canAutoResize: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }],\n    checkboxable: [{\n      type: Input\n    }],\n    headerCheckboxable: [{\n      type: Input\n    }],\n    headerClass: [{\n      type: Input\n    }],\n    cellClass: [{\n      type: Input\n    }],\n    isTreeColumn: [{\n      type: Input\n    }],\n    treeLevelIndent: [{\n      type: Input\n    }],\n    summaryFunc: [{\n      type: Input\n    }],\n    summaryTemplate: [{\n      type: Input\n    }],\n    _cellTemplateInput: [{\n      type: Input,\n      args: ['cellTemplate']\n    }],\n    _cellTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnCellDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _headerTemplateInput: [{\n      type: Input,\n      args: ['headerTemplate']\n    }],\n    _headerTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnHeaderDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _treeToggleTemplateInput: [{\n      type: Input,\n      args: ['treeToggleTemplate']\n    }],\n    _treeToggleTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnCellTreeToggle, {\n        read: TemplateRef,\n        static: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableRowDetailTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-row-detail-template]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableRowDetailDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-row-detail'\n    }]\n  }], function () {\n    return [];\n  }, {\n    rowHeight: [{\n      type: Input\n    }],\n    toggle: [{\n      type: Output\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DatatableRowDetailTemplateDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableFooterDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-footer'\n    }]\n  }], null, {\n    footerHeight: [{\n      type: Input\n    }],\n    totalMessage: [{\n      type: Input\n    }],\n    selectedMessage: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DataTableFooterTemplateDirective, {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body',\n      template: \"\\n    <datatable-progress *ngIf=\\\"loadingIndicator\\\"> </datatable-progress>\\n    <datatable-selection\\n      #selector\\n      [selected]=\\\"selected\\\"\\n      [rows]=\\\"rows\\\"\\n      [selectCheck]=\\\"selectCheck\\\"\\n      [selectEnabled]=\\\"selectEnabled\\\"\\n      [selectionType]=\\\"selectionType\\\"\\n      [rowIdentity]=\\\"rowIdentity\\\"\\n      (select)=\\\"select.emit($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n    >\\n      <datatable-scroller\\n        *ngIf=\\\"rows?.length\\\"\\n        [scrollbarV]=\\\"scrollbarV\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [scrollHeight]=\\\"scrollHeight\\\"\\n        [scrollWidth]=\\\"columnGroupWidths?.total\\\"\\n        (scroll)=\\\"onBodyScroll($event)\\\"\\n      >\\n        <datatable-summary-row\\n          *ngIf=\\\"summaryRow && summaryPosition === 'top'\\\"\\n          [rowHeight]=\\\"summaryHeight\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [rows]=\\\"rows\\\"\\n          [columns]=\\\"columns\\\"\\n        >\\n        </datatable-summary-row>\\n        <datatable-row-wrapper\\n          [groupedRows]=\\\"groupedRows\\\"\\n          *ngFor=\\\"let group of temp; let i = index; trackBy: rowTrackingFn\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [ngStyle]=\\\"getRowsStyles(group)\\\"\\n          [rowDetail]=\\\"rowDetail\\\"\\n          [groupHeader]=\\\"groupHeader\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [detailRowHeight]=\\\"getDetailRowHeight(group && group[i], i)\\\"\\n          [row]=\\\"group\\\"\\n          [expanded]=\\\"getRowExpanded(group)\\\"\\n          [rowIndex]=\\\"getRowIndex(group && group[i])\\\"\\n          (rowContextmenu)=\\\"rowContextmenu.emit($event)\\\"\\n        >\\n          <datatable-body-row\\n            *ngIf=\\\"!groupedRows; else groupedRowsTemplate\\\"\\n            tabindex=\\\"-1\\\"\\n            [isSelected]=\\\"selector.getRowSelected(group)\\\"\\n            [innerWidth]=\\\"innerWidth\\\"\\n            [offsetX]=\\\"offsetX\\\"\\n            [columns]=\\\"columns\\\"\\n            [rowHeight]=\\\"getRowHeight(group)\\\"\\n            [row]=\\\"group\\\"\\n            [rowIndex]=\\\"getRowIndex(group)\\\"\\n            [expanded]=\\\"getRowExpanded(group)\\\"\\n            [rowClass]=\\\"rowClass\\\"\\n            [displayCheck]=\\\"displayCheck\\\"\\n            [treeStatus]=\\\"group && group.treeStatus\\\"\\n            (treeAction)=\\\"onTreeAction(group)\\\"\\n            (activate)=\\\"selector.onActivate($event, indexes.first + i)\\\"\\n          >\\n          </datatable-body-row>\\n          <ng-template #groupedRowsTemplate>\\n            <datatable-body-row\\n              *ngFor=\\\"let row of group.value; let i = index; trackBy: rowTrackingFn\\\"\\n              tabindex=\\\"-1\\\"\\n              [isSelected]=\\\"selector.getRowSelected(row)\\\"\\n              [innerWidth]=\\\"innerWidth\\\"\\n              [offsetX]=\\\"offsetX\\\"\\n              [columns]=\\\"columns\\\"\\n              [rowHeight]=\\\"getRowHeight(row)\\\"\\n              [row]=\\\"row\\\"\\n              [group]=\\\"group.value\\\"\\n              [rowIndex]=\\\"getRowIndex(row)\\\"\\n              [expanded]=\\\"getRowExpanded(row)\\\"\\n              [rowClass]=\\\"rowClass\\\"\\n              (activate)=\\\"selector.onActivate($event, i)\\\"\\n            >\\n            </datatable-body-row>\\n          </ng-template>\\n        </datatable-row-wrapper>\\n        <datatable-summary-row\\n          *ngIf=\\\"summaryRow && summaryPosition === 'bottom'\\\"\\n          [ngStyle]=\\\"getBottomSummaryRowStyles()\\\"\\n          [rowHeight]=\\\"summaryHeight\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [rows]=\\\"rows\\\"\\n          [columns]=\\\"columns\\\"\\n        >\\n        </datatable-summary-row>\\n      </datatable-scroller>\\n      <div class=\\\"empty-row\\\" *ngIf=\\\"!rows?.length && !loadingIndicator\\\" [innerHTML]=\\\"emptyMessage\\\"></div>\\n    </datatable-selection>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'datatable-body'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    selected: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Output\n    }],\n    page: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    detailToggle: [{\n      type: Output\n    }],\n    rowContextmenu: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    rowCount: [{\n      type: Input\n    }],\n    bodyWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    bodyHeight: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    loadingIndicator: [{\n      type: Input\n    }],\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    externalPaging: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    rowDetail: [{\n      type: Input\n    }],\n    groupHeader: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    trackByProp: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }],\n    groupExpansionDefault: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: Input\n    }],\n    summaryRow: [{\n      type: Input\n    }],\n    summaryPosition: [{\n      type: Input\n    }],\n    summaryHeight: [{\n      type: Input\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: [ScrollerComponent]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-header',\n      template: \"\\n    <div\\n      orderable\\n      (reorder)=\\\"onColumnReordered($event)\\\"\\n      (targetChanged)=\\\"onTargetChanged($event)\\\"\\n      [style.width.px]=\\\"_columnGroupWidths.total\\\"\\n      class=\\\"datatable-header-inner\\\"\\n    >\\n      <div\\n        *ngFor=\\\"let colGroup of _columnsByPin; trackBy: trackByGroups\\\"\\n        [class]=\\\"'datatable-row-' + colGroup.type\\\"\\n        [ngStyle]=\\\"_styleByGroup[colGroup.type]\\\"\\n      >\\n        <datatable-header-cell\\n          *ngFor=\\\"let column of colGroup.columns; trackBy: columnTrackingFn\\\"\\n          resizeable\\n          [resizeEnabled]=\\\"column.resizeable\\\"\\n          (resize)=\\\"onColumnResized($event, column)\\\"\\n          long-press\\n          [pressModel]=\\\"column\\\"\\n          [pressEnabled]=\\\"reorderable && column.draggable\\\"\\n          (longPressStart)=\\\"onLongPressStart($event)\\\"\\n          (longPressEnd)=\\\"onLongPressEnd($event)\\\"\\n          draggable\\n          [dragX]=\\\"reorderable && column.draggable && column.dragging\\\"\\n          [dragY]=\\\"false\\\"\\n          [dragModel]=\\\"column\\\"\\n          [dragEventTarget]=\\\"dragEventTarget\\\"\\n          [headerHeight]=\\\"headerHeight\\\"\\n          [isTarget]=\\\"column.isTarget\\\"\\n          [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n          [targetMarkerContext]=\\\"column.targetMarkerContext\\\"\\n          [column]=\\\"column\\\"\\n          [sortType]=\\\"sortType\\\"\\n          [sorts]=\\\"sorts\\\"\\n          [selectionType]=\\\"selectionType\\\"\\n          [sortAscendingIcon]=\\\"sortAscendingIcon\\\"\\n          [sortDescendingIcon]=\\\"sortDescendingIcon\\\"\\n          [sortUnsetIcon]=\\\"sortUnsetIcon\\\"\\n          [allRowsSelected]=\\\"allRowsSelected\\\"\\n          (sort)=\\\"onSort($event)\\\"\\n          (select)=\\\"select.emit($event)\\\"\\n          (columnContextmenu)=\\\"columnContextmenu.emit($event)\\\"\\n        >\\n        </datatable-header-cell>\\n      </div>\\n    </div>\\n  \",\n      host: {\n        class: 'datatable-header'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    reorder: [{\n      type: Output\n    }],\n    resize: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    columnContextmenu: [{\n      type: Output\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: HostBinding,\n      args: ['style.height']\n    }, {\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    headerWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    sorts: [{\n      type: Input\n    }],\n    sortAscendingIcon: [{\n      type: Input\n    }],\n    sortDescendingIcon: [{\n      type: Input\n    }],\n    sortUnsetIcon: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    dealsWithGroup: [{\n      type: Input\n    }],\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    sortType: [{\n      type: Input\n    }],\n    allRowsSelected: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatatableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-datatable',\n      template: \"<div visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [sortUnsetIcon]=\\\"cssClasses.sortUnset\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ngx-datatable'\n      },\n      styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"]\n    }]\n  }], function () {\n    return [{\n      type: ScrollbarHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: DimensionsHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.KeyValueDiffers\n    }, {\n      type: ColumnChangesService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: ['configuration']\n      }]\n    }];\n  }, {\n    selected: [{\n      type: Input\n    }],\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    columnMode: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: Input\n    }],\n    footerHeight: [{\n      type: Input\n    }],\n    externalPaging: [{\n      type: Input\n    }],\n    externalSorting: [{\n      type: Input\n    }],\n    loadingIndicator: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    swapColumns: [{\n      type: Input\n    }],\n    sortType: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    cssClasses: [{\n      type: Input\n    }],\n    messages: [{\n      type: Input\n    }],\n    groupExpansionDefault: [{\n      type: Input\n    }],\n    selectAllRowsOnPage: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: Input\n    }],\n    summaryRow: [{\n      type: Input\n    }],\n    summaryHeight: [{\n      type: Input\n    }],\n    summaryPosition: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    sort: [{\n      type: Output\n    }],\n    page: [{\n      type: Output\n    }],\n    reorder: [{\n      type: Output\n    }],\n    resize: [{\n      type: Output\n    }],\n    tableContextmenu: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    limit: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isFixedHeader: [{\n      type: HostBinding,\n      args: ['class.fixed-header']\n    }],\n    isFixedRow: [{\n      type: HostBinding,\n      args: ['class.fixed-row']\n    }],\n    isVertScroll: [{\n      type: HostBinding,\n      args: ['class.scroll-vertical']\n    }],\n    isVirtualized: [{\n      type: HostBinding,\n      args: ['class.virtualized']\n    }],\n    isHorScroll: [{\n      type: HostBinding,\n      args: ['class.scroll-horz']\n    }],\n    isSelectable: [{\n      type: HostBinding,\n      args: ['class.selectable']\n    }],\n    isCheckboxSelection: [{\n      type: HostBinding,\n      args: ['class.checkbox-selection']\n    }],\n    isCellSelection: [{\n      type: HostBinding,\n      args: ['class.cell-selection']\n    }],\n    isSingleSelection: [{\n      type: HostBinding,\n      args: ['class.single-selection']\n    }],\n    isMultiSelection: [{\n      type: HostBinding,\n      args: ['class.multi-selection']\n    }],\n    isMultiClickSelection: [{\n      type: HostBinding,\n      args: ['class.multi-click-selection']\n    }],\n    columnTemplates: [{\n      type: ContentChildren,\n      args: [DataTableColumnDirective]\n    }],\n\n    /**\n     * Window resize handler to update sizes.\n     */\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }],\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    trackByProp: [{\n      type: Input\n    }],\n    treeFromRelation: [{\n      type: Input\n    }],\n    treeToRelation: [{\n      type: Input\n    }],\n    rowDetail: [{\n      type: ContentChild,\n      args: [DatatableRowDetailDirective]\n    }],\n    groupHeader: [{\n      type: ContentChild,\n      args: [DatatableGroupHeaderDirective]\n    }],\n    footer: [{\n      type: ContentChild,\n      args: [DatatableFooterDirective]\n    }],\n    bodyComponent: [{\n      type: ViewChild,\n      args: [DataTableBodyComponent]\n    }],\n    headerComponent: [{\n      type: ViewChild,\n      args: [DataTableHeaderComponent]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableHeaderCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-header-cell',\n      template: \"\\n    <div class=\\\"datatable-header-cell-template-wrap\\\">\\n      <ng-template\\n        *ngIf=\\\"isTarget\\\"\\n        [ngTemplateOutlet]=\\\"targetMarkerTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"targetMarkerContext\\\"\\n      >\\n      </ng-template>\\n      <label *ngIf=\\\"isCheckboxable\\\" class=\\\"datatable-checkbox\\\">\\n        <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\" (change)=\\\"select.emit(!allRowsSelected)\\\" />\\n      </label>\\n      <span *ngIf=\\\"!column.headerTemplate\\\" class=\\\"datatable-header-cell-wrapper\\\">\\n        <span class=\\\"datatable-header-cell-label draggable\\\" (click)=\\\"onSort()\\\" [innerHTML]=\\\"name\\\"> </span>\\n      </span>\\n      <ng-template\\n        *ngIf=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\"\\n      >\\n      </ng-template>\\n      <span (click)=\\\"onSort()\\\" [class]=\\\"sortClass\\\"> </span>\\n    </div>\\n  \",\n      host: {\n        class: 'datatable-header-cell'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    sort: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    columnContextmenu: [{\n      type: Output\n    }],\n    allRowsSelected: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    columnCssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    name: [{\n      type: HostBinding,\n      args: ['attr.title']\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.minWidth.px']\n    }],\n    maxWidth: [{\n      type: HostBinding,\n      args: ['style.maxWidth.px']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    onContextmenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }],\n    sortType: [{\n      type: Input\n    }],\n    sortAscendingIcon: [{\n      type: Input\n    }],\n    sortDescendingIcon: [{\n      type: Input\n    }],\n    sortUnsetIcon: [{\n      type: Input\n    }],\n    isTarget: [{\n      type: Input\n    }],\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    targetMarkerContext: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-footer',\n      template: \"\\n    <div\\n      class=\\\"datatable-footer-inner\\\"\\n      [ngClass]=\\\"{ 'selected-count': selectedMessage }\\\"\\n      [style.height.px]=\\\"footerHeight\\\"\\n    >\\n      <ng-template\\n        *ngIf=\\\"footerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"footerTemplate.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          rowCount: rowCount,\\n          pageSize: pageSize,\\n          selectedCount: selectedCount,\\n          curPage: curPage,\\n          offset: offset\\n        }\\\"\\n      >\\n      </ng-template>\\n      <div class=\\\"page-count\\\" *ngIf=\\\"!footerTemplate\\\">\\n        <span *ngIf=\\\"selectedMessage\\\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\\n      </div>\\n      <datatable-pager\\n        *ngIf=\\\"!footerTemplate\\\"\\n        [pagerLeftArrowIcon]=\\\"pagerLeftArrowIcon\\\"\\n        [pagerRightArrowIcon]=\\\"pagerRightArrowIcon\\\"\\n        [pagerPreviousIcon]=\\\"pagerPreviousIcon\\\"\\n        [pagerNextIcon]=\\\"pagerNextIcon\\\"\\n        [page]=\\\"curPage\\\"\\n        [size]=\\\"pageSize\\\"\\n        [count]=\\\"rowCount\\\"\\n        [hidden]=\\\"!isVisible\\\"\\n        (change)=\\\"page.emit($event)\\\"\\n      >\\n      </datatable-pager>\\n    </div>\\n  \",\n      host: {\n        class: 'datatable-footer'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    selectedCount: [{\n      type: Input\n    }],\n    page: [{\n      type: Output\n    }],\n    footerHeight: [{\n      type: Input\n    }],\n    rowCount: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    totalMessage: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    selectedMessage: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTablePagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-pager',\n      template: \"\\n    <ul class=\\\"pager\\\">\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to first page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(1)\\\">\\n          <i class=\\\"{{ pagerPreviousIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to previous page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"prevPage()\\\">\\n          <i class=\\\"{{ pagerLeftArrowIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li\\n        role=\\\"button\\\"\\n        [attr.aria-label]=\\\"'page ' + pg.number\\\"\\n        class=\\\"pages\\\"\\n        *ngFor=\\\"let pg of pages\\\"\\n        [class.active]=\\\"pg.number === page\\\"\\n      >\\n        <a href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(pg.number)\\\">\\n          {{ pg.text }}\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to next page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"nextPage()\\\">\\n          <i class=\\\"{{ pagerRightArrowIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to last page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(totalPages)\\\">\\n          <i class=\\\"{{ pagerNextIcon }}\\\"></i>\\n        </a>\\n      </li>\\n    </ul>\\n  \",\n      host: {\n        class: 'datatable-pager'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    change: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ProgressBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-progress',\n      template: \"\\n    <div class=\\\"progress-linear\\\" role=\\\"progressbar\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"bar\\\"></div>\\n      </div>\\n    </div>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableBodyRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body-row',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div\\n      *ngFor=\\\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\\\"\\n      class=\\\"datatable-row-{{ colGroup.type }} datatable-row-group\\\"\\n      [ngStyle]=\\\"_groupStyles[colGroup.type]\\\"\\n    >\\n      <datatable-body-cell\\n        *ngFor=\\\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\\\"\\n        tabindex=\\\"-1\\\"\\n        [row]=\\\"row\\\"\\n        [group]=\\\"group\\\"\\n        [expanded]=\\\"expanded\\\"\\n        [isSelected]=\\\"isSelected\\\"\\n        [rowIndex]=\\\"rowIndex\\\"\\n        [column]=\\\"column\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [displayCheck]=\\\"displayCheck\\\"\\n        [treeStatus]=\\\"treeStatus\\\"\\n        (activate)=\\\"onActivate($event, ii)\\\"\\n        (treeAction)=\\\"onTreeAction()\\\"\\n      >\\n      </datatable-body-cell>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.KeyValueDiffers\n    }, {\n      type: ScrollbarHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    treeStatus: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    columns: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    columnsTotalWidths: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    onMouseenter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }],\n    expanded: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableRowWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-row-wrapper',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div *ngIf=\\\"groupHeader && groupHeader.template\\\" class=\\\"datatable-group-header\\\" [ngStyle]=\\\"getGroupHeaderStyle()\\\">\\n      <ng-template\\n        *ngIf=\\\"groupHeader && groupHeader.template\\\"\\n        [ngTemplateOutlet]=\\\"groupHeader.template\\\"\\n        [ngTemplateOutletContext]=\\\"groupContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n    <ng-content *ngIf=\\\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\\\">\\n    </ng-content>\\n    <div\\n      *ngIf=\\\"rowDetail && rowDetail.template && expanded\\\"\\n      [style.height.px]=\\\"detailRowHeight\\\"\\n      class=\\\"datatable-row-detail\\\"\\n    >\\n      <ng-template\\n        *ngIf=\\\"rowDetail && rowDetail.template\\\"\\n        [ngTemplateOutlet]=\\\"rowDetail.template\\\"\\n        [ngTemplateOutletContext]=\\\"rowContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n  \",\n      host: {\n        class: 'datatable-row-wrapper'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.KeyValueDiffers\n    }];\n  }, {\n    rowContextmenu: [{\n      type: Output\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    onContextmenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    rowDetail: [{\n      type: Input\n    }],\n    groupHeader: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableBodyCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body-cell',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div class=\\\"datatable-body-cell-label\\\" [style.margin-left.px]=\\\"calcLeftMargin(column, row)\\\">\\n      <label\\n        *ngIf=\\\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\\\"\\n        class=\\\"datatable-checkbox\\\"\\n      >\\n        <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (click)=\\\"onCheckboxChange($event)\\\" />\\n      </label>\\n      <ng-container *ngIf=\\\"column.isTreeColumn\\\">\\n        <button\\n          *ngIf=\\\"!column.treeToggleTemplate\\\"\\n          class=\\\"datatable-tree-button\\\"\\n          [disabled]=\\\"treeStatus === 'disabled'\\\"\\n          (click)=\\\"onTreeAction()\\\"\\n        >\\n          <span>\\n            <i *ngIf=\\\"treeStatus === 'loading'\\\" class=\\\"icon datatable-icon-collapse\\\"></i>\\n            <i *ngIf=\\\"treeStatus === 'collapsed'\\\" class=\\\"icon datatable-icon-up\\\"></i>\\n            <i *ngIf=\\\"treeStatus === 'expanded' || treeStatus === 'disabled'\\\" class=\\\"icon datatable-icon-down\\\"></i>\\n          </span>\\n        </button>\\n        <ng-template\\n          *ngIf=\\\"column.treeToggleTemplate\\\"\\n          [ngTemplateOutlet]=\\\"column.treeToggleTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{ cellContext: cellContext }\\\"\\n        >\\n        </ng-template>\\n      </ng-container>\\n\\n      <span *ngIf=\\\"!column.cellTemplate\\\" [title]=\\\"sanitizedValue\\\" [innerHTML]=\\\"value\\\"> </span>\\n      <ng-template\\n        #cellTemplate\\n        *ngIf=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activate: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    group: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    treeStatus: [{\n      type: Input\n    }],\n    columnCssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.minWidth.px']\n    }],\n    maxWidth: [{\n      type: HostBinding,\n      args: ['style.maxWidth.px']\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onDblClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    cellTemplate: [{\n      type: ViewChild,\n      args: ['cellTemplate', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-selection',\n      template: \" <ng-content></ng-content> \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    rows: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectEnabled: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataTableSummaryRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-summary-row',\n      template: \"\\n    <datatable-body-row\\n      *ngIf=\\\"summaryRow && _internalColumns\\\"\\n      tabindex=\\\"-1\\\"\\n      [innerWidth]=\\\"innerWidth\\\"\\n      [offsetX]=\\\"offsetX\\\"\\n      [columns]=\\\"_internalColumns\\\"\\n      [rowHeight]=\\\"rowHeight\\\"\\n      [row]=\\\"summaryRow\\\"\\n      [rowIndex]=\\\"-1\\\"\\n    >\\n    </datatable-body-row>\\n  \",\n      host: {\n        class: 'datatable-summary-row'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    rows: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDatatableModule, {\n    declarations: function declarations() {\n      return [DataTableFooterTemplateDirective, VisibilityDirective, DraggableDirective, ResizeableDirective, OrderableDirective, LongPressDirective, ScrollerComponent, DatatableComponent, DataTableColumnDirective, DataTableHeaderComponent, DataTableHeaderCellComponent, DataTableBodyComponent, DataTableFooterComponent, DataTablePagerComponent, ProgressBarComponent, DataTableBodyRowComponent, DataTableRowWrapperComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableBodyCellComponent, DataTableSelectionComponent, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DatatableFooterDirective, DatatableGroupHeaderTemplateDirective, DataTableSummaryRowComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [DatatableComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableFooterTemplateDirective, DatatableFooterDirective, DataTablePagerComponent, DatatableGroupHeaderTemplateDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgxDatatableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n      declarations: [DataTableFooterTemplateDirective, VisibilityDirective, DraggableDirective, ResizeableDirective, OrderableDirective, LongPressDirective, ScrollerComponent, DatatableComponent, DataTableColumnDirective, DataTableHeaderComponent, DataTableHeaderCellComponent, DataTableBodyComponent, DataTableFooterComponent, DataTablePagerComponent, ProgressBarComponent, DataTableBodyRowComponent, DataTableRowWrapperComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableBodyCellComponent, DataTableSelectionComponent, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DatatableFooterDirective, DatatableGroupHeaderTemplateDirective, DataTableSummaryRowComponent],\n      exports: [DatatableComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableFooterTemplateDirective, DatatableFooterDirective, DataTablePagerComponent, DatatableGroupHeaderTemplateDirective]\n    }]\n  }], null, null);\n})();\n\nvar ClickType;\n\n(function (ClickType) {\n  ClickType[\"single\"] = \"single\";\n  ClickType[\"double\"] = \"double\";\n})(ClickType || (ClickType = {}));\n\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\n\n\nfunction elementsFromPoint(x, y) {\n  var elements = [];\n  var previousPointerEvents = [];\n  var current; // TODO: window.getComputedStyle should be used with inferred type (Element)\n\n  var i;\n  var d; //if (document === undefined) return elements;\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    }); // add \"pointer-events: none\", to get to the underlying element\n\n    current.style.setProperty('pointer-events', 'none', 'important');\n  } // restore the previous pointer-events values\n\n\n  for (i = previousPointerEvents.length; d = previousPointerEvents[--i];) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  } // return our results\n\n\n  return elements;\n}\n/*tslint:enable*/\n\n/*\n * Public API Surface of ngx-datatable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY, ɵ0 };","map":{"version":3,"sources":["@swimlane/ngx-datatable/lib/services/scrollbar-helper.service.ts","@swimlane/ngx-datatable/lib/services/dimensions-helper.service.ts","@swimlane/ngx-datatable/lib/services/column-changes.service.ts","@swimlane/ngx-datatable/lib/components/footer/footer-template.directive.ts","@swimlane/ngx-datatable/lib/directives/visibility.directive.ts","@swimlane/ngx-datatable/lib/directives/draggable.directive.ts","@swimlane/ngx-datatable/lib/directives/resizeable.directive.ts","@swimlane/ngx-datatable/lib/directives/orderable.directive.ts","@swimlane/ngx-datatable/lib/directives/long-press.directive.ts","@swimlane/ngx-datatable/lib/components/body/scroller.component.ts","@swimlane/ngx-datatable/lib/components/body/body-group-header-template.directive.ts","@swimlane/ngx-datatable/lib/components/body/body-group-header.directive.ts","@swimlane/ngx-datatable/lib/utils/column-prop-getters.ts","@swimlane/ngx-datatable/lib/utils/tree.ts","@swimlane/ngx-datatable/lib/utils/camel-case.ts","@swimlane/ngx-datatable/lib/utils/id.ts","@swimlane/ngx-datatable/lib/utils/column-helper.ts","@swimlane/ngx-datatable/lib/types/column-mode.type.ts","@swimlane/ngx-datatable/lib/types/selection.type.ts","@swimlane/ngx-datatable/lib/types/sort.type.ts","@swimlane/ngx-datatable/lib/types/contextmenu.type.ts","@swimlane/ngx-datatable/lib/components/columns/column-header.directive.ts","@swimlane/ngx-datatable/lib/components/columns/column-cell.directive.ts","@swimlane/ngx-datatable/lib/components/columns/tree.directive.ts","@swimlane/ngx-datatable/lib/components/columns/column.directive.ts","@swimlane/ngx-datatable/lib/components/row-detail/row-detail-template.directive.ts","@swimlane/ngx-datatable/lib/components/row-detail/row-detail.directive.ts","@swimlane/ngx-datatable/lib/components/footer/footer.directive.ts","@swimlane/ngx-datatable/lib/utils/column.ts","@swimlane/ngx-datatable/lib/utils/row-height-cache.ts","@swimlane/ngx-datatable/lib/utils/prefixes.ts","@swimlane/ngx-datatable/lib/utils/translate.ts","@swimlane/ngx-datatable/lib/components/body/body.component.ts","@swimlane/ngx-datatable/lib/components/header/header.component.ts","@swimlane/ngx-datatable/lib/utils/throttle.ts","@swimlane/ngx-datatable/lib/utils/math.ts","@swimlane/ngx-datatable/lib/types/sort-direction.type.ts","@swimlane/ngx-datatable/lib/utils/sort.ts","@swimlane/ngx-datatable/lib/components/datatable.component.ts","@swimlane/ngx-datatable/lib/components/header/header-cell.component.ts","@swimlane/ngx-datatable/lib/components/footer/footer.component.ts","@swimlane/ngx-datatable/lib/components/footer/pager.component.ts","@swimlane/ngx-datatable/lib/components/body/progress-bar.component.ts","@swimlane/ngx-datatable/lib/utils/keys.ts","@swimlane/ngx-datatable/lib/components/body/body-row.component.ts","@swimlane/ngx-datatable/lib/components/body/body-row-wrapper.component.ts","@swimlane/ngx-datatable/lib/components/body/body-cell.component.ts","@swimlane/ngx-datatable/lib/utils/selection.ts","@swimlane/ngx-datatable/lib/components/body/selection.component.ts","@swimlane/ngx-datatable/lib/components/body/summary/summary-row.component.ts","@swimlane/ngx-datatable/lib/ngx-datatable.module.ts","@swimlane/ngx-datatable/lib/types/click.type.ts","@swimlane/ngx-datatable/lib/utils/elm-from-point.ts","@swimlane/ngx-datatable/public-api.ts","@swimlane/ngx-datatable/swimlane-ngx-datatable.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else if (this.resizeHandle) {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Input, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new WeakMap<any, string>();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g: any, i: number) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() sortUnsetIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function (this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function (rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode | keyof typeof ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: number = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    sortUnset: 'datatable-icon-sort-unset',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective)\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective)\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective)\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent)\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent)\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n  @Input() sortUnsetIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any = {\n    column: this.column,\n    sortDir: this.sortDir,\n    sortFn: this.sortFn,\n    allRowsSelected: this.allRowsSelected,\n    selectFn: this.selectFn\n  };\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  ngOnInit() {\n    this.sortClass = this.calcSortClass(this.sortDir);\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (!this.cellContext.column.sortable) return;\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn ${this.sortUnsetIcon}`;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    return this._columnGroupWidths.total;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any = {\n    group: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  rowContext: any = {\n    row: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += ' ' + res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any = {\n    onCheckboxChangeFn: this.onCheckboxChangeFn,\n    activateFn: this.activateFn,\n    row: this.row,\n    group: this.group,\n    value: this.value,\n    column: this.column,\n    rowHeight: this.rowHeight,\n    isSelected: this.isSelected,\n    rowIndex: this.rowIndex,\n    treeStatus: this.treeStatus,\n    onTreeAction: this.onTreeAction.bind(this)\n  };\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: ` <ng-content></ng-content> `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders<NgxDatatableModule> {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n","/*\n * Public API Surface of ngx-datatable\n */\n\n// components\nexport * from './lib/ngx-datatable.module';\nexport * from './lib/components/datatable.component';\nexport * from './lib/components/header/header.component';\nexport * from './lib/components/header/header-cell.component';\nexport * from './lib/components/body/body.component';\nexport * from './lib/components/body/body-cell.component';\nexport * from './lib/components/body/body-row.component';\nexport * from './lib/components/body/progress-bar.component';\nexport * from './lib/components/body/scroller.component';\nexport * from './lib/components/body/body-row-wrapper.component';\nexport * from './lib/components/body/selection.component';\nexport * from './lib/components/body/body-group-header.directive';\nexport * from './lib/components/body/body-group-header-template.directive';\nexport * from './lib/components/body/summary/summary-row.component';\nexport * from './lib/components/footer/footer.component';\nexport * from './lib/components/footer/pager.component';\nexport * from './lib/components/footer/footer.directive';\nexport * from './lib/components/footer/footer-template.directive';\nexport * from './lib/components/columns/column.directive';\nexport * from './lib/components/columns/column-header.directive';\nexport * from './lib/components/columns/column-cell.directive';\nexport * from './lib/components/columns/tree.directive';\nexport * from './lib/components/row-detail/row-detail.directive';\nexport * from './lib/components/row-detail/row-detail-template.directive';\n\n// directives\nexport * from './lib/directives/draggable.directive';\nexport * from './lib/directives/long-press.directive';\nexport * from './lib/directives/orderable.directive';\nexport * from './lib/directives/resizeable.directive';\nexport * from './lib/directives/visibility.directive';\n\n// services\nexport * from './lib/services/scrollbar-helper.service';\nexport * from './lib/services/dimensions-helper.service';\nexport * from './lib/services/column-changes.service';\n\n// types\nexport * from './lib/types/column-mode.type';\nexport * from './lib/types/sort.type';\nexport * from './lib/types/sort-direction.type';\nexport * from './lib/types/selection.type';\nexport * from './lib/types/click.type';\nexport * from './lib/types/table-column.type';\nexport * from './lib/types/sort-prop-dir.type';\nexport * from './lib/types/contextmenu.type';\n\n// utils\nexport * from './lib/utils/id';\nexport * from './lib/utils/column';\nexport * from './lib/utils/column-prop-getters';\nexport * from './lib/utils/camel-case';\nexport * from './lib/utils/keys';\nexport * from './lib/utils/math';\nexport * from './lib/utils/prefixes';\nexport * from './lib/utils/selection';\nexport * from './lib/utils/translate';\nexport * from './lib/utils/throttle';\nexport * from './lib/utils/sort';\nexport * from './lib/utils/row-height-cache';\nexport * from './lib/utils/column-helper';\nexport * from './lib/utils/elm-from-point';\nexport * from './lib/utils/tree';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}