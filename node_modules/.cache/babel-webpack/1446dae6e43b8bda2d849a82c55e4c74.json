{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [// block comment\n    hljs.COMMENT('^/{4,}\\\\n', '\\\\n/{4,}$', // can also be done as...\n    //'^/{4,}$',\n    //'^/{4,}$',\n    {\n      relevance: 10\n    }), // line comment\n    hljs.COMMENT('^//', '$', {\n      relevance: 0\n    }), // title\n    {\n      className: 'title',\n      begin: '^\\\\.\\\\w.*$'\n    }, // example, admonition & sidebar blocks\n    {\n      begin: '^[=\\\\*]{4,}\\\\n',\n      end: '\\\\n^[=\\\\*]{4,}$',\n      relevance: 10\n    }, // headings\n    {\n      className: 'section',\n      relevance: 10,\n      variants: [{\n        begin: '^(={1,5}) .+?( \\\\1)?$'\n      }, {\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n      }]\n    }, // document attributes\n    {\n      className: 'meta',\n      begin: '^:.+?:',\n      end: '\\\\s',\n      excludeEnd: true,\n      relevance: 10\n    }, // block attributes\n    {\n      className: 'meta',\n      begin: '^\\\\[.+?\\\\]$',\n      relevance: 0\n    }, // quoteblocks\n    {\n      className: 'quote',\n      begin: '^_{4,}\\\\n',\n      end: '\\\\n_{4,}$',\n      relevance: 10\n    }, // listing and literal blocks\n    {\n      className: 'code',\n      begin: '^[\\\\-\\\\.]{4,}\\\\n',\n      end: '\\\\n[\\\\-\\\\.]{4,}$',\n      relevance: 10\n    }, // passthrough blocks\n    {\n      begin: '^\\\\+{4,}\\\\n',\n      end: '\\\\n\\\\+{4,}$',\n      contains: [{\n        begin: '<',\n        end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      }],\n      relevance: 10\n    }, // lists (can only capture indicators)\n    {\n      className: 'bullet',\n      begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n    }, // admonition\n    {\n      className: 'symbol',\n      begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n      relevance: 10\n    }, // inline strong\n    {\n      className: 'strong',\n      // must not follow a word character or be followed by an asterisk or space\n      begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n      end: '(\\\\n{2}|\\\\*)',\n      // allow escaped asterisk followed by word char\n      contains: [{\n        begin: '\\\\\\\\*\\\\w',\n        relevance: 0\n      }]\n    }, // inline emphasis\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }, // inline emphasis (alt)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by an underline or space\n      begin: '_(?![_\\\\s])',\n      end: '(\\\\n{2}|_)',\n      relevance: 0\n    }, // inline smart quotes\n    {\n      className: 'string',\n      variants: [{\n        begin: \"``.+?''\"\n      }, {\n        begin: \"`.+?'\"\n      }]\n    }, // inline code snippets (TODO should get same treatment as strong and emphasis)\n    {\n      className: 'code',\n      begin: '(`.+?`|\\\\+.+?\\\\+)',\n      relevance: 0\n    }, // indented literal block\n    {\n      className: 'code',\n      begin: '^[ \\\\t]',\n      end: '$',\n      relevance: 0\n    }, // horizontal rules\n    {\n      begin: '^\\'{3,}[ \\\\t]*$',\n      relevance: 10\n    }, // images and links\n    {\n      begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n      returnBegin: true,\n      contains: [{\n        begin: '(link|image:?):',\n        relevance: 0\n      }, {\n        className: 'link',\n        begin: '\\\\w',\n        end: '[^\\\\[]+',\n        relevance: 0\n      }, {\n        className: 'string',\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }],\n      relevance: 10\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/asciidoc.js"],"names":["module","exports","hljs","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\r\n  return {\r\n    aliases: ['adoc'],\r\n    contains: [\r\n      // block comment\r\n      hljs.COMMENT(\r\n        '^/{4,}\\\\n',\r\n        '\\\\n/{4,}$',\r\n        // can also be done as...\r\n        //'^/{4,}$',\r\n        //'^/{4,}$',\r\n        {\r\n          relevance: 10\r\n        }\r\n      ),\r\n      // line comment\r\n      hljs.COMMENT(\r\n        '^//',\r\n        '$',\r\n        {\r\n          relevance: 0\r\n        }\r\n      ),\r\n      // title\r\n      {\r\n        className: 'title',\r\n        begin: '^\\\\.\\\\w.*$'\r\n      },\r\n      // example, admonition & sidebar blocks\r\n      {\r\n        begin: '^[=\\\\*]{4,}\\\\n',\r\n        end: '\\\\n^[=\\\\*]{4,}$',\r\n        relevance: 10\r\n      },\r\n      // headings\r\n      {\r\n        className: 'section',\r\n        relevance: 10,\r\n        variants: [\r\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\r\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\r\n        ]\r\n      },\r\n      // document attributes\r\n      {\r\n        className: 'meta',\r\n        begin: '^:.+?:',\r\n        end: '\\\\s',\r\n        excludeEnd: true,\r\n        relevance: 10\r\n      },\r\n      // block attributes\r\n      {\r\n        className: 'meta',\r\n        begin: '^\\\\[.+?\\\\]$',\r\n        relevance: 0\r\n      },\r\n      // quoteblocks\r\n      {\r\n        className: 'quote',\r\n        begin: '^_{4,}\\\\n',\r\n        end: '\\\\n_{4,}$',\r\n        relevance: 10\r\n      },\r\n      // listing and literal blocks\r\n      {\r\n        className: 'code',\r\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\r\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\r\n        relevance: 10\r\n      },\r\n      // passthrough blocks\r\n      {\r\n        begin: '^\\\\+{4,}\\\\n',\r\n        end: '\\\\n\\\\+{4,}$',\r\n        contains: [\r\n          {\r\n            begin: '<', end: '>',\r\n            subLanguage: 'xml',\r\n            relevance: 0\r\n          }\r\n        ],\r\n        relevance: 10\r\n      },\r\n      // lists (can only capture indicators)\r\n      {\r\n        className: 'bullet',\r\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\r\n      },\r\n      // admonition\r\n      {\r\n        className: 'symbol',\r\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\r\n        relevance: 10\r\n      },\r\n      // inline strong\r\n      {\r\n        className: 'strong',\r\n        // must not follow a word character or be followed by an asterisk or space\r\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\r\n        end: '(\\\\n{2}|\\\\*)',\r\n        // allow escaped asterisk followed by word char\r\n        contains: [\r\n          {\r\n            begin: '\\\\\\\\*\\\\w',\r\n            relevance: 0\r\n          }\r\n        ]\r\n      },\r\n      // inline emphasis\r\n      {\r\n        className: 'emphasis',\r\n        // must not follow a word character or be followed by a single quote or space\r\n        begin: '\\\\B\\'(?![\\'\\\\s])',\r\n        end: '(\\\\n{2}|\\')',\r\n        // allow escaped single quote followed by word char\r\n        contains: [\r\n          {\r\n            begin: '\\\\\\\\\\'\\\\w',\r\n            relevance: 0\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      // inline emphasis (alt)\r\n      {\r\n        className: 'emphasis',\r\n        // must not follow a word character or be followed by an underline or space\r\n        begin: '_(?![_\\\\s])',\r\n        end: '(\\\\n{2}|_)',\r\n        relevance: 0\r\n      },\r\n      // inline smart quotes\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          {begin: \"``.+?''\"},\r\n          {begin: \"`.+?'\"}\r\n        ]\r\n      },\r\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\r\n      {\r\n        className: 'code',\r\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\r\n        relevance: 0\r\n      },\r\n      // indented literal block\r\n      {\r\n        className: 'code',\r\n        begin: '^[ \\\\t]',\r\n        end: '$',\r\n        relevance: 0\r\n      },\r\n      // horizontal rules\r\n      {\r\n        begin: '^\\'{3,}[ \\\\t]*$',\r\n        relevance: 10\r\n      },\r\n      // images and links\r\n      {\r\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\r\n        returnBegin: true,\r\n        contains: [\r\n          {\r\n            begin: '(link|image:?):',\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'link',\r\n            begin: '\\\\w',\r\n            end: '[^\\\\[]+',\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'string',\r\n            begin: '\\\\[',\r\n            end: '\\\\]',\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            relevance: 0\r\n          }\r\n        ],\r\n        relevance: 10\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}