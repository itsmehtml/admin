{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\r\n   * @overrite\r\n   */\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._mergeOption(option, ecModel, false, true);\n  },\n\n  /**\r\n   * @return {boolean}\r\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n\n  /**\r\n   * @overrite\r\n   */\n  mergeOption: function mergeOption(newOpt, ecModel) {\n    this._mergeOption(newOpt, ecModel, false, false);\n  },\n  _mergeOption: function _mergeOption(newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel._mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function getData() {\n    return this._data;\n  },\n  setData: function setData(data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/marker/MarkerModel.js"],"names":["_config","require","__DEV__","echarts","zrUtil","env","modelUtil","formatUtil","dataFormatMixin","addCommas","encodeHTML","fillLabel","opt","defaultEmphasis","MarkerModel","extendComponentModel","type","dependencies","init","option","parentModel","ecModel","mergeDefaultAndTheme","_mergeOption","isAnimationEnabled","node","hostSeries","__hostSeries","getShallow","mergeOption","newOpt","createdBySelf","isInit","constructor","modelPropName","mainType","eachSeries","seriesModel","markerOpt","get","markerModel","data","each","item","Array","extend","seriesIndex","name","formatTooltip","dataIndex","getData","value","getRawValue","formattedValue","isArray","map","join","getName","html","_data","setData","mixin","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar env = require(\"zrender/lib/core/env\");\r\n\r\nvar modelUtil = require(\"../../util/model\");\r\n\r\nvar formatUtil = require(\"../../util/format\");\r\n\r\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar addCommas = formatUtil.addCommas;\r\nvar encodeHTML = formatUtil.encodeHTML;\r\n\r\nfunction fillLabel(opt) {\r\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\r\n}\r\n\r\nvar MarkerModel = echarts.extendComponentModel({\r\n  type: 'marker',\r\n  dependencies: ['series', 'grid', 'polar', 'geo'],\r\n\r\n  /**\r\n   * @overrite\r\n   */\r\n  init: function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._mergeOption(option, ecModel, false, true);\r\n  },\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isAnimationEnabled: function () {\r\n    if (env.node) {\r\n      return false;\r\n    }\r\n\r\n    var hostSeries = this.__hostSeries;\r\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\r\n  },\r\n\r\n  /**\r\n   * @overrite\r\n   */\r\n  mergeOption: function (newOpt, ecModel) {\r\n    this._mergeOption(newOpt, ecModel, false, false);\r\n  },\r\n  _mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\r\n    var MarkerModel = this.constructor;\r\n    var modelPropName = this.mainType + 'Model';\r\n\r\n    if (!createdBySelf) {\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        var markerOpt = seriesModel.get(this.mainType, true);\r\n        var markerModel = seriesModel[modelPropName];\r\n\r\n        if (!markerOpt || !markerOpt.data) {\r\n          seriesModel[modelPropName] = null;\r\n          return;\r\n        }\r\n\r\n        if (!markerModel) {\r\n          if (isInit) {\r\n            // Default label emphasis `position` and `show`\r\n            fillLabel(markerOpt);\r\n          }\r\n\r\n          zrUtil.each(markerOpt.data, function (item) {\r\n            // FIXME Overwrite fillLabel method ?\r\n            if (item instanceof Array) {\r\n              fillLabel(item[0]);\r\n              fillLabel(item[1]);\r\n            } else {\r\n              fillLabel(item);\r\n            }\r\n          });\r\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\r\n          zrUtil.extend(markerModel, {\r\n            mainType: this.mainType,\r\n            // Use the same series index and name\r\n            seriesIndex: seriesModel.seriesIndex,\r\n            name: seriesModel.name,\r\n            createdBySelf: true\r\n          });\r\n          markerModel.__hostSeries = seriesModel;\r\n        } else {\r\n          markerModel._mergeOption(markerOpt, ecModel, true);\r\n        }\r\n\r\n        seriesModel[modelPropName] = markerModel;\r\n      }, this);\r\n    }\r\n  },\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\r\n    var name = data.getName(dataIndex);\r\n    var html = encodeHTML(this.name);\r\n\r\n    if (value != null || name) {\r\n      html += '<br />';\r\n    }\r\n\r\n    if (name) {\r\n      html += encodeHTML(name);\r\n\r\n      if (value != null) {\r\n        html += ' : ';\r\n      }\r\n    }\r\n\r\n    if (value != null) {\r\n      html += encodeHTML(formattedValue);\r\n    }\r\n\r\n    return html;\r\n  },\r\n  getData: function () {\r\n    return this._data;\r\n  },\r\n  setData: function (data) {\r\n    this._data = data;\r\n  }\r\n});\r\nzrUtil.mixin(MarkerModel, dataFormatMixin);\r\nvar _default = MarkerModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}