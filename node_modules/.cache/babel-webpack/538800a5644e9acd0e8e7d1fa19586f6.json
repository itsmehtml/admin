{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\r\n   * Order Rule:\r\n   *\r\n   * option.categories / option.pieces / option.text / option.selected:\r\n   *     If !option.inverse,\r\n   *     Order when vertical: ['top', ..., 'bottom'].\r\n   *     Order when horizontal: ['left', ..., 'right'].\r\n   *     If option.inverse, the meaning of\r\n   *     the order should be reversed.\r\n   *\r\n   * this._pieceList:\r\n   *     The order is always [low, ..., high].\r\n   *\r\n   * Mapping from location to low-high:\r\n   *     If !option.inverse\r\n   *     When vertical, top is high.\r\n   *     When horizontal, right is high.\r\n   *     If option.inverse, reverse.\r\n   */\n\n  /**\r\n   * @protected\r\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\r\n   * @override\r\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\r\n     * The order is always [low, ..., high].\r\n     * [{text: string, interval: Array.<number>}, ...]\r\n     * @private\r\n     * @type {Array.<Object>}\r\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\r\n     * 'pieces', 'categories', 'splitNumber'\r\n     * @type {string}\r\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\r\n   * @protected\r\n   * @override\r\n   */\n  completeVisualOption: function completeVisualOption() {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function _resetSelected(newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\r\n   * @public\r\n   */\n  getSelectedMapKey: function getSelectedMapKey(piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\r\n   * @public\r\n   */\n  getPieceList: function getPieceList() {\n    return this._pieceList;\n  },\n\n  /**\r\n   * @private\r\n   * @return {string}\r\n   */\n  _determineMode: function _determineMode() {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\r\n   * @public\r\n   * @override\r\n   */\n  setSelected: function setSelected(selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\r\n   * @public\r\n   * @override\r\n   */\n  getValueState: function getValueState(value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\r\n   * @public\r\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\r\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\r\n   */\n  findTargetDataIndices: function findTargetDataIndices(pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\r\n   * @private\r\n   * @param {Object} piece piece.value or piece.interval is required.\r\n   * @return {number} Can be Infinity or -Infinity\r\n   */\n  getRepresentValue: function getRepresentValue(piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\r\n * Key is this._mode\r\n * @type {Object}\r\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\r\n */\n\nvar resetMethods = {\n  splitNumber: function splitNumber() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function categories() {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function pieces() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/visualMap/PiecewiseModel.js"],"names":["_config","require","__DEV__","zrUtil","VisualMapModel","VisualMapping","visualDefault","_number","reformIntervals","PiecewiseModel","extend","type","defaultOption","selected","minOpen","maxOpen","align","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","selectedMode","itemGap","hoverLink","showLabel","optionUpdated","newOption","isInit","superApply","arguments","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","call","_resetSelected","option","resetVisual","mappingOption","state","mappingMethod","clone","dataExtent","getExtent","map","piece","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","each","pieces","visualType","hasOwnProperty","v","exists","stateList","has","target","get","obj","isObject","prototype","apply","thisOption","index","key","getSelectedMapKey","hasSel","value","getPieceList","length","setSelected","getValueState","findPieceIndex","findTargetDataIndices","pieceIndex","result","eachTargetSeries","seriesModel","dataIndices","data","getData","getDataDimension","dataIndex","pIdx","push","seriesId","id","getRepresentValue","representValue","pieceInterval","interval","Infinity","getVisualMeta","getColorVisual","stops","outerColors","visualMapModel","setStop","valueState","color","slice","edge","unshift","curr","precision","Math","min","max","parseInt","splitStep","toFixed","close","len","text","formatValueText","cate","normalizeReverse","pieceListItem","item","label","closeList","infinityList","useMinMax","lg","names","i","retrieveVisuals","edgeSymbols","inverse","orient","reverse","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar VisualMapModel = require(\"./VisualMapModel\");\r\n\r\nvar VisualMapping = require(\"../../visual/VisualMapping\");\r\n\r\nvar visualDefault = require(\"../../visual/visualDefault\");\r\n\r\nvar _number = require(\"../../util/number\");\r\n\r\nvar reformIntervals = _number.reformIntervals;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PiecewiseModel = VisualMapModel.extend({\r\n  type: 'visualMap.piecewise',\r\n\r\n  /**\r\n   * Order Rule:\r\n   *\r\n   * option.categories / option.pieces / option.text / option.selected:\r\n   *     If !option.inverse,\r\n   *     Order when vertical: ['top', ..., 'bottom'].\r\n   *     Order when horizontal: ['left', ..., 'right'].\r\n   *     If option.inverse, the meaning of\r\n   *     the order should be reversed.\r\n   *\r\n   * this._pieceList:\r\n   *     The order is always [low, ..., high].\r\n   *\r\n   * Mapping from location to low-high:\r\n   *     If !option.inverse\r\n   *     When vertical, top is high.\r\n   *     When horizontal, right is high.\r\n   *     If option.inverse, reverse.\r\n   */\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    selected: null,\r\n    // Object. If not specified, means selected.\r\n    // When pieces and splitNumber: {'0': true, '5': true}\r\n    // When categories: {'cate1': false, 'cate3': true}\r\n    // When selected === false, means all unselected.\r\n    minOpen: false,\r\n    // Whether include values that smaller than `min`.\r\n    maxOpen: false,\r\n    // Whether include values that bigger than `max`.\r\n    align: 'auto',\r\n    // 'auto', 'left', 'right'\r\n    itemWidth: 20,\r\n    // When put the controller vertically, it is the length of\r\n    // horizontal side of each item. Otherwise, vertical side.\r\n    itemHeight: 14,\r\n    // When put the controller vertically, it is the length of\r\n    // vertical side of each item. Otherwise, horizontal side.\r\n    itemSymbol: 'roundRect',\r\n    pieceList: null,\r\n    // Each item is Object, with some of those attrs:\r\n    // {min, max, lt, gt, lte, gte, value,\r\n    // color, colorSaturation, colorAlpha, opacity,\r\n    // symbol, symbolSize}, which customize the range or visual\r\n    // coding of the certain piece. Besides, see \"Order Rule\".\r\n    categories: null,\r\n    // category names, like: ['some1', 'some2', 'some3'].\r\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\r\n    splitNumber: 5,\r\n    // If set to 5, auto split five pieces equally.\r\n    // If set to 0 and component type not set, component type will be\r\n    // determined as \"continuous\". (It is less reasonable but for ec2\r\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\r\n    selectedMode: 'multiple',\r\n    // Can be 'multiple' or 'single'.\r\n    itemGap: 10,\r\n    // The gap between two items, in px.\r\n    hoverLink: true,\r\n    // Enable hover highlight.\r\n    showLabel: null // By default, when text is used, label will hide (the logic\r\n    // is remained for compatibility reason)\r\n\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  optionUpdated: function (newOption, isInit) {\r\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\r\n    /**\r\n     * The order is always [low, ..., high].\r\n     * [{text: string, interval: Array.<number>}, ...]\r\n     * @private\r\n     * @type {Array.<Object>}\r\n     */\r\n\r\n    this._pieceList = [];\r\n    this.resetExtent();\r\n    /**\r\n     * 'pieces', 'categories', 'splitNumber'\r\n     * @type {string}\r\n     */\r\n\r\n    var mode = this._mode = this._determineMode();\r\n\r\n    resetMethods[this._mode].call(this);\r\n\r\n    this._resetSelected(newOption, isInit);\r\n\r\n    var categories = this.option.categories;\r\n    this.resetVisual(function (mappingOption, state) {\r\n      if (mode === 'categories') {\r\n        mappingOption.mappingMethod = 'category';\r\n        mappingOption.categories = zrUtil.clone(categories);\r\n      } else {\r\n        mappingOption.dataExtent = this.getExtent();\r\n        mappingOption.mappingMethod = 'piecewise';\r\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\r\n          var piece = zrUtil.clone(piece);\r\n\r\n          if (state !== 'inRange') {\r\n            // FIXME\r\n            // outOfRange do not support special visual in pieces.\r\n            piece.visual = null;\r\n          }\r\n\r\n          return piece;\r\n        });\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  completeVisualOption: function () {\r\n    // Consider this case:\r\n    // visualMap: {\r\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\r\n    // }\r\n    // where no inRange/outOfRange set but only pieces. So we should make\r\n    // default inRange/outOfRange for this case, otherwise visuals that only\r\n    // appear in `pieces` will not be taken into account in visual encoding.\r\n    var option = this.option;\r\n    var visualTypesInPieces = {};\r\n    var visualTypes = VisualMapping.listVisualTypes();\r\n    var isCategory = this.isCategory();\r\n    zrUtil.each(option.pieces, function (piece) {\r\n      zrUtil.each(visualTypes, function (visualType) {\r\n        if (piece.hasOwnProperty(visualType)) {\r\n          visualTypesInPieces[visualType] = 1;\r\n        }\r\n      });\r\n    });\r\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\r\n      var exists = 0;\r\n      zrUtil.each(this.stateList, function (state) {\r\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\r\n      }, this);\r\n      !exists && zrUtil.each(this.stateList, function (state) {\r\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\r\n      });\r\n    }, this);\r\n\r\n    function has(obj, state, visualType) {\r\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\r\n      );\r\n    }\r\n\r\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\r\n  },\r\n  _resetSelected: function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList; // Selected do not merge but all override.\r\n\r\n    var selected = (isInit ? thisOption : newOption).selected || {};\r\n    thisOption.selected = selected; // Consider 'not specified' means true.\r\n\r\n    zrUtil.each(pieceList, function (piece, index) {\r\n      var key = this.getSelectedMapKey(piece);\r\n\r\n      if (!selected.hasOwnProperty(key)) {\r\n        selected[key] = true;\r\n      }\r\n    }, this);\r\n\r\n    if (thisOption.selectedMode === 'single') {\r\n      // Ensure there is only one selected.\r\n      var hasSel = false;\r\n      zrUtil.each(pieceList, function (piece, index) {\r\n        var key = this.getSelectedMapKey(piece);\r\n\r\n        if (selected[key]) {\r\n          hasSel ? selected[key] = false : hasSel = true;\r\n        }\r\n      }, this);\r\n    } // thisOption.selectedMode === 'multiple', default: all selected.\r\n\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getSelectedMapKey: function (piece) {\r\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  getPieceList: function () {\r\n    return this._pieceList;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @return {string}\r\n   */\r\n  _determineMode: function () {\r\n    var option = this.option;\r\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  setSelected: function (selected) {\r\n    this.option.selected = zrUtil.clone(selected);\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  getValueState: function (value) {\r\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\r\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\r\n  },\r\n\r\n  /**\r\n   * @public\r\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\r\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\r\n   */\r\n  findTargetDataIndices: function (pieceIndex) {\r\n    var result = [];\r\n    this.eachTargetSeries(function (seriesModel) {\r\n      var dataIndices = [];\r\n      var data = seriesModel.getData();\r\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\r\n        // Should always base on model pieceList, because it is order sensitive.\r\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\r\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\r\n      }, this);\r\n      result.push({\r\n        seriesId: seriesModel.id,\r\n        dataIndex: dataIndices\r\n      });\r\n    }, this);\r\n    return result;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} piece piece.value or piece.interval is required.\r\n   * @return {number} Can be Infinity or -Infinity\r\n   */\r\n  getRepresentValue: function (piece) {\r\n    var representValue;\r\n\r\n    if (this.isCategory()) {\r\n      representValue = piece.value;\r\n    } else {\r\n      if (piece.value != null) {\r\n        representValue = piece.value;\r\n      } else {\r\n        var pieceInterval = piece.interval || [];\r\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\r\n      }\r\n    }\r\n\r\n    return representValue;\r\n  },\r\n  getVisualMeta: function (getColorVisual) {\r\n    // Do not support category. (category axis is ordinal, numerical)\r\n    if (this.isCategory()) {\r\n      return;\r\n    }\r\n\r\n    var stops = [];\r\n    var outerColors = [];\r\n    var visualMapModel = this;\r\n\r\n    function setStop(interval, valueState) {\r\n      var representValue = visualMapModel.getRepresentValue({\r\n        interval: interval\r\n      });\r\n\r\n      if (!valueState) {\r\n        valueState = visualMapModel.getValueState(representValue);\r\n      }\r\n\r\n      var color = getColorVisual(representValue, valueState);\r\n\r\n      if (interval[0] === -Infinity) {\r\n        outerColors[0] = color;\r\n      } else if (interval[1] === Infinity) {\r\n        outerColors[1] = color;\r\n      } else {\r\n        stops.push({\r\n          value: interval[0],\r\n          color: color\r\n        }, {\r\n          value: interval[1],\r\n          color: color\r\n        });\r\n      }\r\n    } // Suplement\r\n\r\n\r\n    var pieceList = this._pieceList.slice();\r\n\r\n    if (!pieceList.length) {\r\n      pieceList.push({\r\n        interval: [-Infinity, Infinity]\r\n      });\r\n    } else {\r\n      var edge = pieceList[0].interval[0];\r\n      edge !== -Infinity && pieceList.unshift({\r\n        interval: [-Infinity, edge]\r\n      });\r\n      edge = pieceList[pieceList.length - 1].interval[1];\r\n      edge !== Infinity && pieceList.push({\r\n        interval: [edge, Infinity]\r\n      });\r\n    }\r\n\r\n    var curr = -Infinity;\r\n    zrUtil.each(pieceList, function (piece) {\r\n      var interval = piece.interval;\r\n\r\n      if (interval) {\r\n        // Fulfill gap.\r\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\r\n        setStop(interval.slice());\r\n        curr = interval[1];\r\n      }\r\n    }, this);\r\n    return {\r\n      stops: stops,\r\n      outerColors: outerColors\r\n    };\r\n  }\r\n});\r\n/**\r\n * Key is this._mode\r\n * @type {Object}\r\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\r\n */\r\n\r\nvar resetMethods = {\r\n  splitNumber: function () {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList;\r\n    var precision = Math.min(thisOption.precision, 20);\r\n    var dataExtent = this.getExtent();\r\n    var splitNumber = thisOption.splitNumber;\r\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\r\n    thisOption.splitNumber = splitNumber;\r\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\r\n\r\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\r\n      precision++;\r\n    }\r\n\r\n    thisOption.precision = precision;\r\n    splitStep = +splitStep.toFixed(precision);\r\n    var index = 0;\r\n\r\n    if (thisOption.minOpen) {\r\n      pieceList.push({\r\n        index: index++,\r\n        interval: [-Infinity, dataExtent[0]],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\r\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\r\n      pieceList.push({\r\n        index: index++,\r\n        interval: [curr, max],\r\n        close: [1, 1]\r\n      });\r\n    }\r\n\r\n    if (thisOption.maxOpen) {\r\n      pieceList.push({\r\n        index: index++,\r\n        interval: [dataExtent[1], Infinity],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    reformIntervals(pieceList);\r\n    zrUtil.each(pieceList, function (piece) {\r\n      piece.text = this.formatValueText(piece.interval);\r\n    }, this);\r\n  },\r\n  categories: function () {\r\n    var thisOption = this.option;\r\n    zrUtil.each(thisOption.categories, function (cate) {\r\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\r\n      // 是否改一致。\r\n      this._pieceList.push({\r\n        text: this.formatValueText(cate, true),\r\n        value: cate\r\n      });\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, this._pieceList);\r\n  },\r\n  pieces: function () {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList;\r\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\r\n      if (!zrUtil.isObject(pieceListItem)) {\r\n        pieceListItem = {\r\n          value: pieceListItem\r\n        };\r\n      }\r\n\r\n      var item = {\r\n        text: '',\r\n        index: index\r\n      };\r\n\r\n      if (pieceListItem.label != null) {\r\n        item.text = pieceListItem.label;\r\n      }\r\n\r\n      if (pieceListItem.hasOwnProperty('value')) {\r\n        var value = item.value = pieceListItem.value;\r\n        item.interval = [value, value];\r\n        item.close = [1, 1];\r\n      } else {\r\n        // `min` `max` is legacy option.\r\n        // `lt` `gt` `lte` `gte` is recommanded.\r\n        var interval = item.interval = [];\r\n        var close = item.close = [0, 0];\r\n        var closeList = [1, 0, 1];\r\n        var infinityList = [-Infinity, Infinity];\r\n        var useMinMax = [];\r\n\r\n        for (var lg = 0; lg < 2; lg++) {\r\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\r\n\r\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\r\n            interval[lg] = pieceListItem[names[i]];\r\n            close[lg] = closeList[i];\r\n            useMinMax[lg] = i === 2;\r\n          }\r\n\r\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\r\n        }\r\n\r\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\r\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\r\n\r\n        if (interval[0] === interval[1] && close[0] && close[1]) {\r\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\r\n          // we use value to lift the priority when min === max\r\n          item.value = interval[0];\r\n        }\r\n      }\r\n\r\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\r\n      pieceList.push(item);\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, pieceList); // Only pieces\r\n\r\n    reformIntervals(pieceList);\r\n    zrUtil.each(pieceList, function (piece) {\r\n      var close = piece.close;\r\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\r\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\r\n    }, this);\r\n  }\r\n};\r\n\r\nfunction normalizeReverse(thisOption, pieceList) {\r\n  var inverse = thisOption.inverse;\r\n\r\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\r\n    pieceList.reverse();\r\n  }\r\n}\r\n\r\nvar _default = PiecewiseModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}