{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @file Treemap action\r\n */\n\n\nvar noop = function noop() {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/treemap/treemapAction.js"],"names":["echarts","require","helper","noop","actionTypes","i","length","registerAction","type","update","payload","ecModel","eachComponent","mainType","subType","query","handleRootToNode","model","index","types","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","direction","aboveViewRoot","node","resetViewRoot"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAIE,IAAI,GAAG,SAAPA,IAAO,GAAY,CAAE,CAAzB;;AAEA,IAAIC,WAAW,GAAG,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,aAAvC,CAAlB;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CL,EAAAA,OAAO,CAACO,cAAR,CAAuB;AACrBC,IAAAA,IAAI,EAAEJ,WAAW,CAACC,CAAD,CADI;AAErBI,IAAAA,MAAM,EAAE;AAFa,GAAvB,EAGGN,IAHH;AAID;;AAEDH,OAAO,CAACO,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,mBADe;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB,EAGG,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC7BA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,QADU;AAEpBC,IAAAA,OAAO,EAAE,SAFW;AAGpBC,IAAAA,KAAK,EAAEL;AAHa,GAAtB,EAIGM,gBAJH;;AAMA,WAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,QAAIC,KAAK,GAAG,CAAC,mBAAD,EAAsB,mBAAtB,CAAZ;AACA,QAAIC,UAAU,GAAGlB,MAAM,CAACmB,kBAAP,CAA0BX,OAA1B,EAAmCS,KAAnC,EAA0CF,KAA1C,CAAjB;;AAEA,QAAIG,UAAJ,EAAgB;AACd,UAAIE,cAAc,GAAGL,KAAK,CAACM,WAAN,EAArB;;AAEA,UAAID,cAAJ,EAAoB;AAClBZ,QAAAA,OAAO,CAACc,SAAR,GAAoBtB,MAAM,CAACuB,aAAP,CAAqBH,cAArB,EAAqCF,UAAU,CAACM,IAAhD,IAAwD,QAAxD,GAAmE,WAAvF;AACD;;AAEDT,MAAAA,KAAK,CAACU,aAAN,CAAoBP,UAAU,CAACM,IAA/B;AACD;AACF;AACF,CAxBD","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar helper = require(\"../helper/treeHelper\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Treemap action\r\n */\r\nvar noop = function () {};\r\n\r\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\r\n\r\nfor (var i = 0; i < actionTypes.length; i++) {\r\n  echarts.registerAction({\r\n    type: actionTypes[i],\r\n    update: 'updateView'\r\n  }, noop);\r\n}\r\n\r\necharts.registerAction({\r\n  type: 'treemapRootToNode',\r\n  update: 'updateView'\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'series',\r\n    subType: 'treemap',\r\n    query: payload\r\n  }, handleRootToNode);\r\n\r\n  function handleRootToNode(model, index) {\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\r\n\r\n    if (targetInfo) {\r\n      var originViewRoot = model.getViewRoot();\r\n\r\n      if (originViewRoot) {\r\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\r\n      }\r\n\r\n      model.resetViewRoot(targetInfo.node);\r\n    }\r\n  }\r\n});"]},"metadata":{},"sourceType":"script"}