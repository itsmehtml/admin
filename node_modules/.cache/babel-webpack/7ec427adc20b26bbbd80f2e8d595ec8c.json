{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\r\n * Create a muti dimension List structure from seriesModel.\r\n * @param  {module:echarts/model/Model} seriesModel\r\n * @return {module:echarts/data/List} list\r\n */\n\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\r\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n * @param {string} symbolDesc\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string} color\r\n */\n\n/**\r\n * Create scale\r\n * @param {Array.<number>} dataExtent\r\n * @param {Object|module:echarts/Model} option\r\n */\n\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\r\n * Mixin common methods to axis model,\r\n *\r\n * Inlcude methods\r\n * `getFormattedLabels() => Array.<string>`\r\n * `getCategories() => Array.<string>`\r\n * `getMin(origin: boolean) => number`\r\n * `getMax(origin: boolean) => number`\r\n * `getNeedCrossZero() => boolean`\r\n * `setRange(start: number, end: number)`\r\n * `resetRange()`\r\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/helper.js"],"names":["zrUtil","require","createListFromArray","axisHelper","axisModelCommonMixin","Model","_layout","getLayoutRect","exports","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","_symbol","createSymbol","createList","seriesModel","getSource","dataStack","createScale","dataExtent","option","axisModel","isInstance","mixin","scale","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,oCAAD,CAAjC;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,oBAAD,CAAxB;;AAEA,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,8BAAD,CAAlC;;AAEA,IAAII,KAAK,GAAGJ,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAIK,OAAO,GAAGL,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIM,aAAa,GAAGD,OAAO,CAACC,aAA5B;AACAC,OAAO,CAACD,aAAR,GAAwBD,OAAO,CAACC,aAAhC;;AAEA,IAAIE,gBAAgB,GAAGR,OAAO,CAAC,+BAAD,CAA9B;;AAEA,IAAIS,eAAe,GAAGD,gBAAgB,CAACC,eAAvC;AACA,IAAIC,kBAAkB,GAAGF,gBAAgB,CAACE,kBAA1C;AACA,IAAIC,mBAAmB,GAAGH,gBAAgB,CAACG,mBAA3C;;AAEA,IAAIC,mBAAmB,GAAGZ,OAAO,CAAC,kCAAD,CAAjC;;AAEAO,OAAO,CAACM,kBAAR,GAA6BD,mBAA7B;;AAEA,IAAIE,iBAAiB,GAAGd,OAAO,CAAC,gCAAD,CAA/B;;AAEAO,OAAO,CAACQ,gBAAR,GAA2BD,iBAA3B;;AAEA,IAAIE,OAAO,GAAGhB,OAAO,CAAC,eAAD,CAArB;;AAEAO,OAAO,CAACU,YAAR,GAAuBD,OAAO,CAACC,YAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AAC/B,SAAOlB,mBAAmB,CAACkB,WAAW,CAACC,SAAZ,EAAD,EAA0BD,WAA1B,CAA1B;AACD,C,CAAC;AACF;AACA;AACA;AACA;;;AAGA,IAAIE,SAAS,GAAG;AACdX,EAAAA,kBAAkB,EAAEA,kBADN;AAEdD,EAAAA,eAAe,EAAEA,eAFH;AAGdE,EAAAA,mBAAmB,EAAEA;AAHP,CAAhB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASW,WAAT,CAAqBC,UAArB,EAAiCC,MAAjC,EAAyC;AACvC,MAAIC,SAAS,GAAGD,MAAhB;;AAEA,MAAI,CAACpB,KAAK,CAACsB,UAAN,CAAiBF,MAAjB,CAAL,EAA+B;AAC7BC,IAAAA,SAAS,GAAG,IAAIrB,KAAJ,CAAUoB,MAAV,CAAZ;AACAzB,IAAAA,MAAM,CAAC4B,KAAP,CAAaF,SAAb,EAAwBtB,oBAAxB;AACD;;AAED,MAAIyB,KAAK,GAAG1B,UAAU,CAAC2B,kBAAX,CAA8BJ,SAA9B,CAAZ;AACAG,EAAAA,KAAK,CAACE,SAAN,CAAgBP,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC;AACArB,EAAAA,UAAU,CAAC6B,eAAX,CAA2BH,KAA3B,EAAkCH,SAAlC;AACA,SAAOG,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASI,2BAAT,CAAqC5B,KAArC,EAA4C;AAC1CL,EAAAA,MAAM,CAAC4B,KAAP,CAAavB,KAAb,EAAoBD,oBAApB;AACD;;AAEDI,OAAO,CAACW,UAAR,GAAqBA,UAArB;AACAX,OAAO,CAACc,SAAR,GAAoBA,SAApB;AACAd,OAAO,CAACe,WAAR,GAAsBA,WAAtB;AACAf,OAAO,CAACyB,2BAAR,GAAsCA,2BAAtC","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\r\n\r\nvar axisHelper = require(\"./coord/axisHelper\");\r\n\r\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\r\n\r\nvar Model = require(\"./model/Model\");\r\n\r\nvar _layout = require(\"./util/layout\");\r\n\r\nvar getLayoutRect = _layout.getLayoutRect;\r\nexports.getLayoutRect = _layout.getLayoutRect;\r\n\r\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\r\n\r\nvar enableDataStack = _dataStackHelper.enableDataStack;\r\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\r\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\r\n\r\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\r\n\r\nexports.completeDimensions = _completeDimensions;\r\n\r\nvar _createDimensions = require(\"./data/helper/createDimensions\");\r\n\r\nexports.createDimensions = _createDimensions;\r\n\r\nvar _symbol = require(\"./util/symbol\");\r\n\r\nexports.createSymbol = _symbol.createSymbol;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\r\n\r\n/**\r\n * Create a muti dimension List structure from seriesModel.\r\n * @param  {module:echarts/model/Model} seriesModel\r\n * @return {module:echarts/data/List} list\r\n */\r\nfunction createList(seriesModel) {\r\n  return createListFromArray(seriesModel.getSource(), seriesModel);\r\n} // export function createGraph(seriesModel) {\r\n//     var nodes = seriesModel.get('data');\r\n//     var links = seriesModel.get('links');\r\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\r\n// }\r\n\r\n\r\nvar dataStack = {\r\n  isDimensionStacked: isDimensionStacked,\r\n  enableDataStack: enableDataStack,\r\n  getStackedDimension: getStackedDimension\r\n};\r\n/**\r\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n * @param {string} symbolDesc\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string} color\r\n */\r\n\r\n/**\r\n * Create scale\r\n * @param {Array.<number>} dataExtent\r\n * @param {Object|module:echarts/Model} option\r\n */\r\nfunction createScale(dataExtent, option) {\r\n  var axisModel = option;\r\n\r\n  if (!Model.isInstance(option)) {\r\n    axisModel = new Model(option);\r\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\r\n  }\r\n\r\n  var scale = axisHelper.createScaleByModel(axisModel);\r\n  scale.setExtent(dataExtent[0], dataExtent[1]);\r\n  axisHelper.niceScaleExtent(scale, axisModel);\r\n  return scale;\r\n}\r\n/**\r\n * Mixin common methods to axis model,\r\n *\r\n * Inlcude methods\r\n * `getFormattedLabels() => Array.<string>`\r\n * `getCategories() => Array.<string>`\r\n * `getMin(origin: boolean) => number`\r\n * `getMax(origin: boolean) => number`\r\n * `getNeedCrossZero() => boolean`\r\n * `setRange(start: number, end: number)`\r\n * `resetRange()`\r\n */\r\n\r\n\r\nfunction mixinAxisModelCommonMethods(Model) {\r\n  zrUtil.mixin(Model, axisModelCommonMixin);\r\n}\r\n\r\nexports.createList = createList;\r\nexports.dataStack = dataStack;\r\nexports.createScale = createScale;\r\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;"]},"metadata":{},"sourceType":"script"}