{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * [sourceFormat]\r\n *\r\n * + \"original\":\r\n * This format is only used in series.data, where\r\n * itemStyle can be specified in data item.\r\n *\r\n * + \"arrayRows\":\r\n * [\r\n *     ['product', 'score', 'amount'],\r\n *     ['Matcha Latte', 89.3, 95.8],\r\n *     ['Milk Tea', 92.1, 89.4],\r\n *     ['Cheese Cocoa', 94.4, 91.2],\r\n *     ['Walnut Brownie', 85.4, 76.9]\r\n * ]\r\n *\r\n * + \"objectRows\":\r\n * [\r\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\r\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\r\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\r\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\r\n * ]\r\n *\r\n * + \"keyedColumns\":\r\n * {\r\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\r\n *     'count': [823, 235, 1042, 988],\r\n *     'score': [95.8, 81.4, 91.2, 76.9]\r\n * }\r\n *\r\n * + \"typedArray\"\r\n *\r\n * + \"unknown\"\r\n */\n\n/**\r\n * @constructor\r\n * @param {Object} fields\r\n * @param {string} fields.sourceFormat\r\n * @param {Array|Object} fields.fromDataset\r\n * @param {Array|Object} [fields.data]\r\n * @param {string} [seriesLayoutBy='column']\r\n * @param {Array.<Object|string>} [dimensionsDefine]\r\n * @param {Objet|HashMap} [encodeDefine]\r\n * @param {number} [startIndex=0]\r\n * @param {number} [dimensionsDetectCount]\r\n */\n\nfunction Source(fields) {\n  /**\r\n   * @type {boolean}\r\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\r\n   * Not null/undefined.\r\n   * @type {Array|Object}\r\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\r\n   * See also \"detectSourceFormat\".\r\n   * Not null/undefined.\r\n   * @type {string}\r\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\r\n   * 'row' or 'column'\r\n   * Not null/undefined.\r\n   * @type {string} seriesLayoutBy\r\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\r\n   * dimensions definition in option.\r\n   * can be null/undefined.\r\n   * @type {Array.<Object|string>}\r\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\r\n   * encode definition in option.\r\n   * can be null/undefined.\r\n   * @type {Objet|HashMap}\r\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\r\n   * Not null/undefined, uint.\r\n   * @type {number}\r\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\r\n   * Can be null/undefined (when unknown), uint.\r\n   * @type {number}\r\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\r\n * Wrap original series data for some compatibility cases.\r\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/data/Source.js"],"names":["_util","require","createHashMap","isTypedArray","_clazz","enableClassCheck","_sourceType","SOURCE_FORMAT_ORIGINAL","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_KEYED_COLUMNS","Source","fields","fromDataset","data","sourceFormat","seriesLayoutBy","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","seriesDataToSource","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,aAAa,GAAGF,KAAK,CAACE,aAA1B;AACA,IAAIC,YAAY,GAAGH,KAAK,CAACG,YAAzB;;AAEA,IAAIC,MAAM,GAAGH,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAII,gBAAgB,GAAGD,MAAM,CAACC,gBAA9B;;AAEA,IAAIC,WAAW,GAAGL,OAAO,CAAC,qBAAD,CAAzB;;AAEA,IAAIM,sBAAsB,GAAGD,WAAW,CAACC,sBAAzC;AACA,IAAIC,uBAAuB,GAAGF,WAAW,CAACE,uBAA1C;AACA,IAAIC,qBAAqB,GAAGH,WAAW,CAACG,qBAAxC;AACA,IAAIC,yBAAyB,GAAGJ,WAAW,CAACI,yBAA5C;AACA,IAAIC,2BAA2B,GAAGL,WAAW,CAACK,2BAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB;AACF;AACA;AACE,OAAKC,WAAL,GAAmBD,MAAM,CAACC,WAA1B;AACA;AACF;AACA;AACA;;AAEE,OAAKC,IAAL,GAAYF,MAAM,CAACE,IAAP,KAAgBF,MAAM,CAACG,YAAP,KAAwBL,2BAAxB,GAAsD,EAAtD,GAA2D,EAA3E,CAAZ;AACA;AACF;AACA;AACA;AACA;;AAEE,OAAKK,YAAL,GAAoBH,MAAM,CAACG,YAAP,IAAuBP,qBAA3C;AACA;AACF;AACA;AACA;AACA;;AAEE,OAAKQ,cAAL,GAAsBJ,MAAM,CAACI,cAAP,IAAyBT,uBAA/C;AACA;AACF;AACA;AACA;AACA;;AAEE,OAAKU,gBAAL,GAAwBL,MAAM,CAACK,gBAA/B;AACA;AACF;AACA;AACA;AACA;;AAEE,OAAKC,YAAL,GAAoBN,MAAM,CAACM,YAAP,IAAuBjB,aAAa,CAACW,MAAM,CAACM,YAAR,CAAxD;AACA;AACF;AACA;AACA;;AAEE,OAAKC,UAAL,GAAkBP,MAAM,CAACO,UAAP,IAAqB,CAAvC;AACA;AACF;AACA;AACA;;AAEE,OAAKC,qBAAL,GAA6BR,MAAM,CAACQ,qBAApC;AACD;AACD;AACA;AACA;;;AAGAT,MAAM,CAACU,kBAAP,GAA4B,UAAUP,IAAV,EAAgB;AAC1C,SAAO,IAAIH,MAAJ,CAAW;AAChBG,IAAAA,IAAI,EAAEA,IADU;AAEhBC,IAAAA,YAAY,EAAEb,YAAY,CAACY,IAAD,CAAZ,GAAqBL,yBAArB,GAAiDH,sBAF/C;AAGhBO,IAAAA,WAAW,EAAE;AAHG,GAAX,CAAP;AAKD,CAND;;AAQAT,gBAAgB,CAACO,MAAD,CAAhB;AACA,IAAIW,QAAQ,GAAGX,MAAf;AACAY,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar isTypedArray = _util.isTypedArray;\r\n\r\nvar _clazz = require(\"../util/clazz\");\r\n\r\nvar enableClassCheck = _clazz.enableClassCheck;\r\n\r\nvar _sourceType = require(\"./helper/sourceType\");\r\n\r\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\r\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\r\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\r\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\r\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * [sourceFormat]\r\n *\r\n * + \"original\":\r\n * This format is only used in series.data, where\r\n * itemStyle can be specified in data item.\r\n *\r\n * + \"arrayRows\":\r\n * [\r\n *     ['product', 'score', 'amount'],\r\n *     ['Matcha Latte', 89.3, 95.8],\r\n *     ['Milk Tea', 92.1, 89.4],\r\n *     ['Cheese Cocoa', 94.4, 91.2],\r\n *     ['Walnut Brownie', 85.4, 76.9]\r\n * ]\r\n *\r\n * + \"objectRows\":\r\n * [\r\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\r\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\r\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\r\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\r\n * ]\r\n *\r\n * + \"keyedColumns\":\r\n * {\r\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\r\n *     'count': [823, 235, 1042, 988],\r\n *     'score': [95.8, 81.4, 91.2, 76.9]\r\n * }\r\n *\r\n * + \"typedArray\"\r\n *\r\n * + \"unknown\"\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @param {Object} fields\r\n * @param {string} fields.sourceFormat\r\n * @param {Array|Object} fields.fromDataset\r\n * @param {Array|Object} [fields.data]\r\n * @param {string} [seriesLayoutBy='column']\r\n * @param {Array.<Object|string>} [dimensionsDefine]\r\n * @param {Objet|HashMap} [encodeDefine]\r\n * @param {number} [startIndex=0]\r\n * @param {number} [dimensionsDetectCount]\r\n */\r\nfunction Source(fields) {\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  this.fromDataset = fields.fromDataset;\r\n  /**\r\n   * Not null/undefined.\r\n   * @type {Array|Object}\r\n   */\r\n\r\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\r\n  /**\r\n   * See also \"detectSourceFormat\".\r\n   * Not null/undefined.\r\n   * @type {string}\r\n   */\r\n\r\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\r\n  /**\r\n   * 'row' or 'column'\r\n   * Not null/undefined.\r\n   * @type {string} seriesLayoutBy\r\n   */\r\n\r\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\r\n  /**\r\n   * dimensions definition in option.\r\n   * can be null/undefined.\r\n   * @type {Array.<Object|string>}\r\n   */\r\n\r\n  this.dimensionsDefine = fields.dimensionsDefine;\r\n  /**\r\n   * encode definition in option.\r\n   * can be null/undefined.\r\n   * @type {Objet|HashMap}\r\n   */\r\n\r\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\r\n  /**\r\n   * Not null/undefined, uint.\r\n   * @type {number}\r\n   */\r\n\r\n  this.startIndex = fields.startIndex || 0;\r\n  /**\r\n   * Can be null/undefined (when unknown), uint.\r\n   * @type {number}\r\n   */\r\n\r\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\r\n}\r\n/**\r\n * Wrap original series data for some compatibility cases.\r\n */\r\n\r\n\r\nSource.seriesDataToSource = function (data) {\r\n  return new Source({\r\n    data: data,\r\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\r\n    fromDataset: false\r\n  });\r\n};\r\n\r\nenableClassCheck(Source);\r\nvar _default = Source;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}