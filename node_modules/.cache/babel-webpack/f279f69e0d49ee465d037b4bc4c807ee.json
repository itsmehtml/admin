{"ast":null,"code":"// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar Positioning =\n/** @class */\nfunction () {\n  function Positioning() {}\n\n  Positioning.prototype.getAllStyles = function (element) {\n    return window.getComputedStyle(element);\n  };\n\n  Positioning.prototype.getStyle = function (element, prop) {\n    return this.getAllStyles(element)[prop];\n  };\n\n  Positioning.prototype.isStaticPositioned = function (element) {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  };\n\n  Positioning.prototype.offsetParent = function (element) {\n    var offsetParentEl = element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  };\n\n  Positioning.prototype.position = function (element, round) {\n    if (round === void 0) {\n      round = true;\n    }\n\n    var elPosition;\n    var parentOffset = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      var offsetParentEl = this.offsetParent(element);\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  };\n\n  Positioning.prototype.offset = function (element, round) {\n    if (round === void 0) {\n      round = true;\n    }\n\n    var elBcr = element.getBoundingClientRect();\n    var viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n    var elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  };\n  /*\r\n    Return false if the element to position is outside the viewport\r\n  */\n\n\n  Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n    var _a = placement.split('-'),\n        _b = _a[0],\n        placementPrimary = _b === void 0 ? 'top' : _b,\n        _c = _a[1],\n        placementSecondary = _c === void 0 ? 'center' : _c;\n\n    var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    var targetElStyles = this.getAllStyles(targetElement);\n    var marginTop = parseFloat(targetElStyles.marginTop);\n    var marginBottom = parseFloat(targetElStyles.marginBottom);\n    var marginLeft = parseFloat(targetElStyles.marginLeft);\n    var marginRight = parseFloat(targetElStyles.marginRight);\n    var topPosition = 0;\n    var leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);\n        break;\n\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height;\n        break;\n\n      case 'left':\n        leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);\n        break;\n\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n\n        break;\n    } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n\n\n    targetElement.style.transform = \"translate(\" + Math.round(leftPosition) + \"px, \" + Math.round(topPosition) + \"px)\"; // Check if the targetElement is inside the viewport\n\n    var targetElBCR = targetElement.getBoundingClientRect();\n    var html = document.documentElement;\n    var windowHeight = window.innerHeight || html.clientHeight;\n    var windowWidth = window.innerWidth || html.clientWidth;\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;\n  };\n\n  return Positioning;\n}();\n\nexport { Positioning };\nvar placementSeparator = /\\s+/;\nvar positionService = new Positioning();\n/*\r\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\r\n * Returns the applied placement.\r\n * In case of auto placement, placements are selected in order\r\n *   'top', 'bottom', 'left', 'right',\r\n *   'top-left', 'top-right',\r\n *   'bottom-left', 'bottom-right',\r\n *   'left-top', 'left-bottom',\r\n *   'right-top', 'right-bottom'.\r\n * */\n\nexport function positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n  var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];\n  var classList = targetElement.classList;\n\n  var addClassesToTarget = function addClassesToTarget(targetPlacement) {\n    var _a = targetPlacement.split('-'),\n        primary = _a[0],\n        secondary = _a[1];\n\n    var classes = [];\n\n    if (baseClass) {\n      classes.push(baseClass + \"-\" + primary);\n\n      if (secondary) {\n        classes.push(baseClass + \"-\" + primary + \"-\" + secondary);\n      }\n\n      classes.forEach(function (classname) {\n        classList.add(classname);\n      });\n    }\n\n    return classes;\n  }; // Remove old placement classes to avoid issues\n\n\n  if (baseClass) {\n    allowedPlacements.forEach(function (placementToRemove) {\n      classList.remove(baseClass + \"-\" + placementToRemove);\n    });\n  } // replace auto placement with other placements\n\n\n  var hasAuto = placementVals.findIndex(function (val) {\n    return val === 'auto';\n  });\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(function (val) {\n        return val.search('^' + obj) !== -1;\n      }) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  } // coordinates where to position\n  // Required for transform:\n\n\n  var style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n  var testPlacement;\n  var isInViewport = false;\n\n  for (var _i = 0, placementVals_1 = placementVals; _i < placementVals_1.length; _i++) {\n    testPlacement = placementVals_1[_i];\n    var addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    } // Remove the baseClasses for further calculation\n\n\n    if (baseClass) {\n      addedClasses.forEach(function (classname) {\n        classList.remove(classname);\n      });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}","map":{"version":3,"sources":["../src/positioning.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// previous version:\r\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\r\nvar Positioning = /** @class */ (function () {\r\n    function Positioning() {\r\n    }\r\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\r\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\r\n    Positioning.prototype.isStaticPositioned = function (element) {\r\n        return (this.getStyle(element, 'position') || 'static') === 'static';\r\n    };\r\n    Positioning.prototype.offsetParent = function (element) {\r\n        var offsetParentEl = element.offsetParent || document.documentElement;\r\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\r\n            offsetParentEl = offsetParentEl.offsetParent;\r\n        }\r\n        return offsetParentEl || document.documentElement;\r\n    };\r\n    Positioning.prototype.position = function (element, round) {\r\n        if (round === void 0) { round = true; }\r\n        var elPosition;\r\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\r\n        if (this.getStyle(element, 'position') === 'fixed') {\r\n            elPosition = element.getBoundingClientRect();\r\n            elPosition = {\r\n                top: elPosition.top,\r\n                bottom: elPosition.bottom,\r\n                left: elPosition.left,\r\n                right: elPosition.right,\r\n                height: elPosition.height,\r\n                width: elPosition.width\r\n            };\r\n        }\r\n        else {\r\n            var offsetParentEl = this.offsetParent(element);\r\n            elPosition = this.offset(element, false);\r\n            if (offsetParentEl !== document.documentElement) {\r\n                parentOffset = this.offset(offsetParentEl, false);\r\n            }\r\n            parentOffset.top += offsetParentEl.clientTop;\r\n            parentOffset.left += offsetParentEl.clientLeft;\r\n        }\r\n        elPosition.top -= parentOffset.top;\r\n        elPosition.bottom -= parentOffset.top;\r\n        elPosition.left -= parentOffset.left;\r\n        elPosition.right -= parentOffset.left;\r\n        if (round) {\r\n            elPosition.top = Math.round(elPosition.top);\r\n            elPosition.bottom = Math.round(elPosition.bottom);\r\n            elPosition.left = Math.round(elPosition.left);\r\n            elPosition.right = Math.round(elPosition.right);\r\n        }\r\n        return elPosition;\r\n    };\r\n    Positioning.prototype.offset = function (element, round) {\r\n        if (round === void 0) { round = true; }\r\n        var elBcr = element.getBoundingClientRect();\r\n        var viewportOffset = {\r\n            top: window.pageYOffset - document.documentElement.clientTop,\r\n            left: window.pageXOffset - document.documentElement.clientLeft\r\n        };\r\n        var elOffset = {\r\n            height: elBcr.height || element.offsetHeight,\r\n            width: elBcr.width || element.offsetWidth,\r\n            top: elBcr.top + viewportOffset.top,\r\n            bottom: elBcr.bottom + viewportOffset.top,\r\n            left: elBcr.left + viewportOffset.left,\r\n            right: elBcr.right + viewportOffset.left\r\n        };\r\n        if (round) {\r\n            elOffset.height = Math.round(elOffset.height);\r\n            elOffset.width = Math.round(elOffset.width);\r\n            elOffset.top = Math.round(elOffset.top);\r\n            elOffset.bottom = Math.round(elOffset.bottom);\r\n            elOffset.left = Math.round(elOffset.left);\r\n            elOffset.right = Math.round(elOffset.right);\r\n        }\r\n        return elOffset;\r\n    };\r\n    /*\r\n      Return false if the element to position is outside the viewport\r\n    */\r\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\r\n        var _a = placement.split('-'), _b = _a[0], placementPrimary = _b === void 0 ? 'top' : _b, _c = _a[1], placementSecondary = _c === void 0 ? 'center' : _c;\r\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\r\n        var targetElStyles = this.getAllStyles(targetElement);\r\n        var marginTop = parseFloat(targetElStyles.marginTop);\r\n        var marginBottom = parseFloat(targetElStyles.marginBottom);\r\n        var marginLeft = parseFloat(targetElStyles.marginLeft);\r\n        var marginRight = parseFloat(targetElStyles.marginRight);\r\n        var topPosition = 0;\r\n        var leftPosition = 0;\r\n        switch (placementPrimary) {\r\n            case 'top':\r\n                topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\r\n                break;\r\n            case 'bottom':\r\n                topPosition = (hostElPosition.top + hostElPosition.height);\r\n                break;\r\n            case 'left':\r\n                leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\r\n                break;\r\n            case 'right':\r\n                leftPosition = (hostElPosition.left + hostElPosition.width);\r\n                break;\r\n        }\r\n        switch (placementSecondary) {\r\n            case 'top':\r\n                topPosition = hostElPosition.top;\r\n                break;\r\n            case 'bottom':\r\n                topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\r\n                break;\r\n            case 'left':\r\n                leftPosition = hostElPosition.left;\r\n                break;\r\n            case 'right':\r\n                leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\r\n                break;\r\n            case 'center':\r\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\r\n                    leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\r\n                }\r\n                else {\r\n                    topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\r\n                }\r\n                break;\r\n        }\r\n        /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\r\n        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\r\n        targetElement.style.transform = \"translate(\" + Math.round(leftPosition) + \"px, \" + Math.round(topPosition) + \"px)\";\r\n        // Check if the targetElement is inside the viewport\r\n        var targetElBCR = targetElement.getBoundingClientRect();\r\n        var html = document.documentElement;\r\n        var windowHeight = window.innerHeight || html.clientHeight;\r\n        var windowWidth = window.innerWidth || html.clientWidth;\r\n        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\r\n            targetElBCR.bottom <= windowHeight;\r\n    };\r\n    return Positioning;\r\n}());\r\nexport { Positioning };\r\nvar placementSeparator = /\\s+/;\r\nvar positionService = new Positioning();\r\n/*\r\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\r\n * Returns the applied placement.\r\n * In case of auto placement, placements are selected in order\r\n *   'top', 'bottom', 'left', 'right',\r\n *   'top-left', 'top-right',\r\n *   'bottom-left', 'bottom-right',\r\n *   'left-top', 'left-bottom',\r\n *   'right-top', 'right-bottom'.\r\n * */\r\nexport function positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\r\n    var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\r\n    var allowedPlacements = [\r\n        'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\r\n        'right-top', 'right-bottom'\r\n    ];\r\n    var classList = targetElement.classList;\r\n    var addClassesToTarget = function (targetPlacement) {\r\n        var _a = targetPlacement.split('-'), primary = _a[0], secondary = _a[1];\r\n        var classes = [];\r\n        if (baseClass) {\r\n            classes.push(baseClass + \"-\" + primary);\r\n            if (secondary) {\r\n                classes.push(baseClass + \"-\" + primary + \"-\" + secondary);\r\n            }\r\n            classes.forEach(function (classname) { classList.add(classname); });\r\n        }\r\n        return classes;\r\n    };\r\n    // Remove old placement classes to avoid issues\r\n    if (baseClass) {\r\n        allowedPlacements.forEach(function (placementToRemove) { classList.remove(baseClass + \"-\" + placementToRemove); });\r\n    }\r\n    // replace auto placement with other placements\r\n    var hasAuto = placementVals.findIndex(function (val) { return val === 'auto'; });\r\n    if (hasAuto >= 0) {\r\n        allowedPlacements.forEach(function (obj) {\r\n            if (placementVals.find(function (val) { return val.search('^' + obj) !== -1; }) == null) {\r\n                placementVals.splice(hasAuto++, 1, obj);\r\n            }\r\n        });\r\n    }\r\n    // coordinates where to position\r\n    // Required for transform:\r\n    var style = targetElement.style;\r\n    style.position = 'absolute';\r\n    style.top = '0';\r\n    style.left = '0';\r\n    style['will-change'] = 'transform';\r\n    var testPlacement;\r\n    var isInViewport = false;\r\n    for (var _i = 0, placementVals_1 = placementVals; _i < placementVals_1.length; _i++) {\r\n        testPlacement = placementVals_1[_i];\r\n        var addedClasses = addClassesToTarget(testPlacement);\r\n        if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\r\n            isInViewport = true;\r\n            break;\r\n        }\r\n        // Remove the baseClasses for further calculation\r\n        if (baseClass) {\r\n            addedClasses.forEach(function (classname) { classList.remove(classname); });\r\n        }\r\n    }\r\n    if (!isInViewport) {\r\n        // If nothing match, the first placement is the default one\r\n        testPlacement = placementVals[0];\r\n        addClassesToTarget(testPlacement);\r\n        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\r\n    }\r\n    return testPlacement;\r\n}\r\n//# sourceMappingURL=positioning.js.map"]},"metadata":{},"sourceType":"module"}