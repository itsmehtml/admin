{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// FIXME axisType is fixed ?\n\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\r\n * Generate sub axis model class\r\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\r\n * @param {module:echarts/model/Component} BaseAxisModelClass\r\n * @param {Function} axisTypeDefaulter\r\n * @param {Object} [extraDefaultOption]\r\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\r\n       * @readOnly\r\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\r\n       * @override\r\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\r\n       * Should not be called before all of 'getInitailData' finished.\r\n       * Because categories are collected during initializing data.\r\n       */\n      getCategories: function getCategories(rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/axisModelCreator.js"],"names":["zrUtil","require","axisDefault","ComponentModel","_layout","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","_default","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","each","axisType","extend","type","mergeDefaultAndTheme","option","ecModel","layoutMode","inputPositionParams","themeModel","getTheme","merge","get","getDefaultOption","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","data","categories","getOrdinalMeta","defaultOption","mergeAll","registerSubTypeDefaulter","curry","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar axisDefault = require(\"./axisDefault\");\r\n\r\nvar ComponentModel = require(\"../model/Component\");\r\n\r\nvar _layout = require(\"../util/layout\");\r\n\r\nvar getLayoutParams = _layout.getLayoutParams;\r\nvar mergeLayoutParam = _layout.mergeLayoutParam;\r\n\r\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME axisType is fixed ?\r\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\r\n/**\r\n * Generate sub axis model class\r\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\r\n * @param {module:echarts/model/Component} BaseAxisModelClass\r\n * @param {Function} axisTypeDefaulter\r\n * @param {Object} [extraDefaultOption]\r\n */\r\n\r\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\r\n  zrUtil.each(AXIS_TYPES, function (axisType) {\r\n    BaseAxisModelClass.extend({\r\n      /**\r\n       * @readOnly\r\n       */\r\n      type: axisName + 'Axis.' + axisType,\r\n      mergeDefaultAndTheme: function (option, ecModel) {\r\n        var layoutMode = this.layoutMode;\r\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\r\n        var themeModel = ecModel.getTheme();\r\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\r\n        zrUtil.merge(option, this.getDefaultOption());\r\n        option.type = axisTypeDefaulter(axisName, option);\r\n\r\n        if (layoutMode) {\r\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @override\r\n       */\r\n      optionUpdated: function () {\r\n        var thisOption = this.option;\r\n\r\n        if (thisOption.type === 'category') {\r\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Should not be called before all of 'getInitailData' finished.\r\n       * Because categories are collected during initializing data.\r\n       */\r\n      getCategories: function (rawData) {\r\n        var option = this.option; // FIXME\r\n        // warning if called before all of 'getInitailData' finished.\r\n\r\n        if (option.type === 'category') {\r\n          if (rawData) {\r\n            return option.data;\r\n          }\r\n\r\n          return this.__ordinalMeta.categories;\r\n        }\r\n      },\r\n      getOrdinalMeta: function () {\r\n        return this.__ordinalMeta;\r\n      },\r\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\r\n    });\r\n  });\r\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\r\n}\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}