{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function getInitialData(option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/bar/PictorialBarSeries.js"],"names":["BaseBarSeries","require","PictorialBarSeries","extend","type","dependencies","defaultOption","symbol","symbolSize","symbolRotate","symbolPosition","symbolOffset","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","barGap","progressive","hoverAnimation","getInitialData","option","stack","superApply","arguments","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,kBAAkB,GAAGF,aAAa,CAACG,MAAd,CAAqB;AAC5CC,EAAAA,IAAI,EAAE,qBADsC;AAE5CC,EAAAA,YAAY,EAAE,CAAC,MAAD,CAF8B;AAG5CC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,QADK;AAEb;AACAC,IAAAA,UAAU,EAAE,IAHC;AAIb;AACAC,IAAAA,YAAY,EAAE,IALD;AAMbC,IAAAA,cAAc,EAAE,IANH;AAOb;AACAC,IAAAA,YAAY,EAAE,IARD;AASbC,IAAAA,YAAY,EAAE,IATD;AAUb;AACA;AACAC,IAAAA,YAAY,EAAE,KAZD;AAab;AACA;AACA;AACA;AACAC,IAAAA,qBAAqB,EAAE,KAjBV;AAkBb;AACAC,IAAAA,UAAU,EAAE,KAnBC;AAoBbC,IAAAA,kBAAkB,EAAE,IApBP;AAqBb;AACAC,IAAAA,iBAAiB,EAAE,GAtBN;AAuBb;AACAC,IAAAA,MAAM,EAAE,OAxBK;AAyBb;AACA;AACA;AACAC,IAAAA,WAAW,EAAE,CA5BA;AA6BbC,IAAAA,cAAc,EAAE,KA7BH,CA6BS;;AA7BT,GAH6B;AAmC5CC,EAAAA,cAAc,EAAE,wBAAUC,MAAV,EAAkB;AAChC;AACAA,IAAAA,MAAM,CAACC,KAAP,GAAe,IAAf;AACA,WAAOrB,kBAAkB,CAACsB,UAAnB,CAA8B,IAA9B,EAAoC,gBAApC,EAAsDC,SAAtD,CAAP;AACD;AAvC2C,CAArB,CAAzB;AAyCA,IAAIC,QAAQ,GAAGxB,kBAAf;AACAyB,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar BaseBarSeries = require(\"./BaseBarSeries\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar PictorialBarSeries = BaseBarSeries.extend({\r\n  type: 'series.pictorialBar',\r\n  dependencies: ['grid'],\r\n  defaultOption: {\r\n    symbol: 'circle',\r\n    // Customized bar shape\r\n    symbolSize: null,\r\n    // Can be ['100%', '100%'], null means auto.\r\n    symbolRotate: null,\r\n    symbolPosition: null,\r\n    // 'start' or 'end' or 'center', null means auto.\r\n    symbolOffset: null,\r\n    symbolMargin: null,\r\n    // start margin and end margin. Can be a number or a percent string.\r\n    // Auto margin by defualt.\r\n    symbolRepeat: false,\r\n    // false/null/undefined, means no repeat.\r\n    // Can be true, means auto calculate repeat times and cut by data.\r\n    // Can be a number, specifies repeat times, and do not cut by data.\r\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\r\n    symbolRepeatDirection: 'end',\r\n    // 'end' means from 'start' to 'end'.\r\n    symbolClip: false,\r\n    symbolBoundingData: null,\r\n    // Can be 60 or -40 or [-40, 60]\r\n    symbolPatternSize: 400,\r\n    // 400 * 400 px\r\n    barGap: '-100%',\r\n    // In most case, overlap is needed.\r\n    // z can be set in data item, which is z2 actually.\r\n    // Disable progressive\r\n    progressive: 0,\r\n    hoverAnimation: false // Open only when needed.\r\n\r\n  },\r\n  getInitialData: function (option) {\r\n    // Disable stack.\r\n    option.stack = null;\r\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\r\n  }\r\n});\r\nvar _default = PictorialBarSeries;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}