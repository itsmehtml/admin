{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\r\n   * @protected\r\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\n  areas: [],\n\n  /**\r\n   * Current activated brush type.\r\n   * If null, brush is inactived.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {string}\r\n   */\n  brushType: null,\n\n  /**\r\n   * Current brush opt.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\n  brushOption: {},\n\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\n  coordInfoList: [],\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\r\n   * If ranges is null/undefined, range state remain.\r\n   *\r\n   * @param {Array.<Object>} [ranges]\r\n   */\n  setAreas: function setAreas(areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\r\n   * see module:echarts/component/helper/BrushController\r\n   * @param {Object} brushOption\r\n   */\n  setBrushOption: function setBrushOption(brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/brush/BrushModel.js"],"names":["_config","require","__DEV__","echarts","zrUtil","visualSolution","Model","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","extendComponentModel","type","dependencies","defaultOption","toolbox","brushLink","seriesIndex","geoIndex","xAxisIndex","yAxisIndex","brushType","brushMode","transformable","brushStyle","borderWidth","color","borderColor","throttleType","throttleDelay","removeOnClick","z","areas","brushOption","coordInfoList","optionUpdated","newOption","isInit","thisOption","option","replaceVisualOption","inBrush","outOfBrush","hasOwnProperty","liftZ","setAreas","map","area","generateBrushOption","setBrushOption","merge","getItemStyle","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAACE,OAAtB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAII,cAAc,GAAGJ,OAAO,CAAC,6BAAD,CAA5B;;AAEA,IAAIK,KAAK,GAAGL,OAAO,CAAC,mBAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,0BAA0B,GAAG,CAAC,MAAD,CAAjC;AACA,IAAIC,UAAU,GAAGL,OAAO,CAACM,oBAAR,CAA6B;AAC5CC,EAAAA,IAAI,EAAE,OADsC;AAE5CC,EAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,OAAzB,EAAkC,UAAlC,EAA8C,QAA9C,CAF8B;;AAI5C;AACF;AACA;AACEC,EAAAA,aAAa,EAAE;AACb;AACA;AACAC,IAAAA,OAAO,EAAE,IAHI;AAIb;AACAC,IAAAA,SAAS,EAAE,IALE;AAMb;AACA;AACAC,IAAAA,WAAW,EAAE,KARA;AASb;AACAC,IAAAA,QAAQ,EAAE,IAVG;AAWb;AACAC,IAAAA,UAAU,EAAE,IAZC;AAabC,IAAAA,UAAU,EAAE,IAbC;AAcbC,IAAAA,SAAS,EAAE,MAdE;AAeb;AACAC,IAAAA,SAAS,EAAE,QAhBE;AAiBb;AACAC,IAAAA,aAAa,EAAE,IAlBF;AAmBb;AACAC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,WAAW,EAAE,CAFH;AAGVC,MAAAA,KAAK,EAAE,uBAHG;AAIVC,MAAAA,WAAW,EAAE;AAJH,KApBC;AA0BbC,IAAAA,YAAY,EAAE,SA1BD;AA2Bb;AACA;AACAC,IAAAA,aAAa,EAAE,CA7BF;AA8Bb;AACA;AACA;AACAC,IAAAA,aAAa,EAAE,IAjCF;AAkCbC,IAAAA,CAAC,EAAE;AAlCU,GAP6B;;AA4C5C;AACF;AACA;AACA;AACEC,EAAAA,KAAK,EAAE,EAhDqC;;AAkD5C;AACF;AACA;AACA;AACA;AACA;AACA;AACEX,EAAAA,SAAS,EAAE,IAzDiC;;AA2D5C;AACF;AACA;AACA;AACA;AACA;AACEY,EAAAA,WAAW,EAAE,EAjE+B;;AAmE5C;AACF;AACA;AACA;AACEC,EAAAA,aAAa,EAAE,EAvE6B;AAwE5CC,EAAAA,aAAa,EAAE,uBAAUC,SAAV,EAAqBC,MAArB,EAA6B;AAC1C,QAAIC,UAAU,GAAG,KAAKC,MAAtB;AACA,KAACF,MAAD,IAAW9B,cAAc,CAACiC,mBAAf,CAAmCF,UAAnC,EAA+CF,SAA/C,EAA0D,CAAC,SAAD,EAAY,YAAZ,CAA1D,CAAX;AACA,QAAIK,OAAO,GAAGH,UAAU,CAACG,OAAX,GAAqBH,UAAU,CAACG,OAAX,IAAsB,EAAzD,CAH0C,CAGmB;;AAE7DH,IAAAA,UAAU,CAACI,UAAX,GAAwBJ,UAAU,CAACI,UAAX,IAAyB;AAC/ChB,MAAAA,KAAK,EAAEjB;AADwC,KAAjD;;AAIA,QAAI,CAACgC,OAAO,CAACE,cAAR,CAAuB,OAAvB,CAAL,EAAsC;AACpC;AACA;AACAF,MAAAA,OAAO,CAACG,KAAR,GAAgB,CAAhB;AACD;AACF,GAtF2C;;AAwF5C;AACF;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,kBAAUb,KAAV,EAAiB;AACzB;AACA;AACA;AACA,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,SAAKA,KAAL,GAAa1B,MAAM,CAACwC,GAAP,CAAWd,KAAX,EAAkB,UAAUe,IAAV,EAAgB;AAC7C,aAAOC,mBAAmB,CAAC,KAAKT,MAAN,EAAcQ,IAAd,CAA1B;AACD,KAFY,EAEV,IAFU,CAAb;AAGD,GAxG2C;;AA0G5C;AACF;AACA;AACA;AACEE,EAAAA,cAAc,EAAE,wBAAUhB,WAAV,EAAuB;AACrC,SAAKA,WAAL,GAAmBe,mBAAmB,CAAC,KAAKT,MAAN,EAAcN,WAAd,CAAtC;AACA,SAAKZ,SAAL,GAAiB,KAAKY,WAAL,CAAiBZ,SAAlC;AACD;AAjH2C,CAA7B,CAAjB;;AAoHA,SAAS2B,mBAAT,CAA6BT,MAA7B,EAAqCN,WAArC,EAAkD;AAChD,SAAO3B,MAAM,CAAC4C,KAAP,CAAa;AAClB7B,IAAAA,SAAS,EAAEkB,MAAM,CAAClB,SADA;AAElBC,IAAAA,SAAS,EAAEiB,MAAM,CAACjB,SAFA;AAGlBC,IAAAA,aAAa,EAAEgB,MAAM,CAAChB,aAHJ;AAIlBC,IAAAA,UAAU,EAAE,IAAIhB,KAAJ,CAAU+B,MAAM,CAACf,UAAjB,EAA6B2B,YAA7B,EAJM;AAKlBrB,IAAAA,aAAa,EAAES,MAAM,CAACT,aALJ;AAMlBC,IAAAA,CAAC,EAAEQ,MAAM,CAACR;AANQ,GAAb,EAOJE,WAPI,EAOS,IAPT,CAAP;AAQD;;AAED,IAAImB,QAAQ,GAAG1C,UAAf;AACA2C,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\r\nvar BrushModel = echarts.extendComponentModel({\r\n  type: 'brush',\r\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  defaultOption: {\r\n    // inBrush: null,\r\n    // outOfBrush: null,\r\n    toolbox: null,\r\n    // Default value see preprocessor.\r\n    brushLink: null,\r\n    // Series indices array, broadcast using dataIndex.\r\n    // or 'all', which means all series. 'none' or null means no series.\r\n    seriesIndex: 'all',\r\n    // seriesIndex array, specify series controlled by this brush component.\r\n    geoIndex: null,\r\n    //\r\n    xAxisIndex: null,\r\n    yAxisIndex: null,\r\n    brushType: 'rect',\r\n    // Default brushType, see BrushController.\r\n    brushMode: 'single',\r\n    // Default brushMode, 'single' or 'multiple'\r\n    transformable: true,\r\n    // Default transformable.\r\n    brushStyle: {\r\n      // Default brushStyle\r\n      borderWidth: 1,\r\n      color: 'rgba(120,140,180,0.3)',\r\n      borderColor: 'rgba(120,140,180,0.8)'\r\n    },\r\n    throttleType: 'fixRate',\r\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\r\n    // If null, no throttle. Valid only in the first brush component\r\n    throttleDelay: 0,\r\n    // Unit: ms, 0 means every event will be triggered.\r\n    // FIXME\r\n    // 试验效果\r\n    removeOnClick: true,\r\n    z: 10000\r\n  },\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\r\n  areas: [],\r\n\r\n  /**\r\n   * Current activated brush type.\r\n   * If null, brush is inactived.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {string}\r\n   */\r\n  brushType: null,\r\n\r\n  /**\r\n   * Current brush opt.\r\n   * see module:echarts/component/helper/BrushController\r\n   * @readOnly\r\n   * @type {Object}\r\n   */\r\n  brushOption: {},\r\n\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<Object>}\r\n   */\r\n  coordInfoList: [],\r\n  optionUpdated: function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\r\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\r\n\r\n    thisOption.outOfBrush = thisOption.outOfBrush || {\r\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\r\n    };\r\n\r\n    if (!inBrush.hasOwnProperty('liftZ')) {\r\n      // Bigger than the highlight z lift, otherwise it will\r\n      // be effected by the highlight z when brush.\r\n      inBrush.liftZ = 5;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If ranges is null/undefined, range state remain.\r\n   *\r\n   * @param {Array.<Object>} [ranges]\r\n   */\r\n  setAreas: function (areas) {\r\n    // If ranges is null/undefined, range state remain.\r\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\r\n    // set but just want to get the current brush select info from a `brush` event.\r\n    if (!areas) {\r\n      return;\r\n    }\r\n\r\n    this.areas = zrUtil.map(areas, function (area) {\r\n      return generateBrushOption(this.option, area);\r\n    }, this);\r\n  },\r\n\r\n  /**\r\n   * see module:echarts/component/helper/BrushController\r\n   * @param {Object} brushOption\r\n   */\r\n  setBrushOption: function (brushOption) {\r\n    this.brushOption = generateBrushOption(this.option, brushOption);\r\n    this.brushType = this.brushOption.brushType;\r\n  }\r\n});\r\n\r\nfunction generateBrushOption(option, brushOption) {\r\n  return zrUtil.merge({\r\n    brushType: option.brushType,\r\n    brushMode: option.brushMode,\r\n    transformable: option.transformable,\r\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\r\n    removeOnClick: option.removeOnClick,\r\n    z: option.z\r\n  }, brushOption, true);\r\n}\r\n\r\nvar _default = BrushModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}