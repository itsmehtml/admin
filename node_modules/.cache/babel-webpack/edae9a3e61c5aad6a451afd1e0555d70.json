{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    'keyword': 'abort acronym acronyms alias all and assign binary card diag display ' + 'else eq file files for free ge gt if integer le loop lt maximizing ' + 'minimizing model models ne negative no not option options or ord ' + 'positive prod put putpage puttl repeat sameas semicont semiint smax ' + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    'literal': 'eps inf na',\n    'built-in': 'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' + 'randBinomial randLinear randTriangle round rPower sigmoid sign ' + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' + 'handleCollect handleDelete handleStatus handleSubmit heapFree ' + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' + 'timeElapsed timeExec timeStart'\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  var SYMBOLS = {\n    className: 'symbol',\n    variants: [{\n      begin: /\\=[lgenxc]=/\n    }, {\n      begin: /\\$/\n    }]\n  };\n  var QSTR = {\n    // One-line quoted comment string\n    className: 'comment',\n    variants: [{\n      begin: '\\'',\n      end: '\\''\n    }, {\n      begin: '\"',\n      end: '\"'\n    }],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [QSTR, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var DESCTEXT = {\n    // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [QSTR, ASSIGNMENT, {\n      className: 'comment',\n      begin: /([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+/,\n      relevance: 0\n    }]\n  };\n  return {\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(/^\\$ontext/, /^\\$offtext/), {\n      className: 'meta',\n      begin: '^\\\\$[a-z0-9]+',\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'meta-keyword',\n        begin: '^\\\\$[a-z0-9]+'\n      }]\n    }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, // Declarations\n    {\n      beginKeywords: 'set sets parameter parameters variable variables ' + 'scalar scalars equation equations',\n      end: ';',\n      contains: [hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, ASSIGNMENT, DESCTEXT]\n    }, {\n      // table environment\n      beginKeywords: 'table',\n      end: ';',\n      returnBegin: true,\n      contains: [{\n        // table header row\n        beginKeywords: 'table',\n        end: '$',\n        contains: [DESCTEXT]\n      }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE // Table does not contain DESCTEXT or ASSIGNMENT\n      ]\n    }, // Function definitions\n    {\n      className: 'function',\n      begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n      returnBegin: true,\n      contains: [{\n        // Function title\n        className: 'title',\n        begin: /^[a-z0-9_]+/\n      }, PARAMS, SYMBOLS]\n    }, hljs.C_NUMBER_MODE, SYMBOLS]\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/gams.js"],"names":["module","exports","hljs","KEYWORDS","PARAMS","className","begin","end","excludeBegin","excludeEnd","SYMBOLS","variants","QSTR","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","DESCTEXT","endsWithParent","relevance","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAIC,QAAQ,GAAG;AACb,eACE,0EACA,qEADA,GAEA,mEAFA,GAGA,sEAHA,GAIA,sEANW;AAOb,eAAW,YAPE;AAQb,gBACE,0EACA,mEADA,GAEA,uEAFA,GAGA,4DAHA,GAIA,iEAJA,GAKA,sEALA,GAMA,uEANA,GAOA,sEAPA,GAQA,sEARA,GASA,uEATA,GAUA,gEAVA,GAWA,8DAXA,GAYA,mEAZA,GAaA;AAtBW,GAAf;AAwBA,MAAIC,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE,IAFI;AAEEC,IAAAA,GAAG,EAAE,IAFP;AAGXC,IAAAA,YAAY,EAAE,IAHH;AAIXC,IAAAA,UAAU,EAAE;AAJD,GAAb;AAMA,MAAIC,OAAO,GAAG;AACZL,IAAAA,SAAS,EAAE,QADC;AAEZM,IAAAA,QAAQ,EAAE,CACR;AAACL,MAAAA,KAAK,EAAE;AAAR,KADQ,EAER;AAACA,MAAAA,KAAK,EAAE;AAAR,KAFQ;AAFE,GAAd;AAOA,MAAIM,IAAI,GAAG;AAAE;AACXP,IAAAA,SAAS,EAAE,SADF;AAETM,IAAAA,QAAQ,EAAE,CACR;AAACL,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,GAAG,EAAE;AAAnB,KADQ,EAER;AAACD,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAFQ,CAFD;AAMTM,IAAAA,OAAO,EAAE,KANA;AAOTC,IAAAA,QAAQ,EAAE,CAACZ,IAAI,CAACa,gBAAN;AAPD,GAAX;AASA,MAAIC,UAAU,GAAG;AACfV,IAAAA,KAAK,EAAE,GADQ;AAEfC,IAAAA,GAAG,EAAE,GAFU;AAGfU,IAAAA,QAAQ,EAAEd,QAHK;AAIfW,IAAAA,QAAQ,EAAE,CACRF,IADQ,EAERV,IAAI,CAACgB,mBAFG,EAGRhB,IAAI,CAACiB,oBAHG,EAIRjB,IAAI,CAACkB,iBAJG,EAKRlB,IAAI,CAACmB,gBALG,EAMRnB,IAAI,CAACoB,aANG;AAJK,GAAjB;AAaA,MAAIC,QAAQ,GAAG;AAAE;AACfjB,IAAAA,KAAK,EAAE,0CADM;AAEbE,IAAAA,YAAY,EAAE,IAFD;AAGbD,IAAAA,GAAG,EAAE,GAHQ;AAIbiB,IAAAA,cAAc,EAAE,IAJH;AAKbV,IAAAA,QAAQ,EAAE,CACRF,IADQ,EAERI,UAFQ,EAGR;AACEX,MAAAA,SAAS,EAAE,SADb;AAEEC,MAAAA,KAAK,EAAE,+CAFT;AAGEmB,MAAAA,SAAS,EAAE;AAHb,KAHQ;AALG,GAAf;AAgBA,SAAO;AACLC,IAAAA,OAAO,EAAE,CAAC,KAAD,CADJ;AAELC,IAAAA,gBAAgB,EAAE,IAFb;AAGLV,IAAAA,QAAQ,EAAEd,QAHL;AAILW,IAAAA,QAAQ,EAAE,CACRZ,IAAI,CAAC0B,OAAL,CAAa,WAAb,EAA0B,YAA1B,CADQ,EAER;AACEvB,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,eAFT;AAGEC,MAAAA,GAAG,EAAE,GAHP;AAIEsB,MAAAA,WAAW,EAAE,IAJf;AAKEf,MAAAA,QAAQ,EAAE,CACR;AACET,QAAAA,SAAS,EAAE,cADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADQ;AALZ,KAFQ,EAcRJ,IAAI,CAAC0B,OAAL,CAAa,MAAb,EAAqB,GAArB,CAdQ,EAeR1B,IAAI,CAACgB,mBAfG,EAgBRhB,IAAI,CAACiB,oBAhBG,EAiBRjB,IAAI,CAACkB,iBAjBG,EAkBRlB,IAAI,CAACmB,gBAlBG,EAmBR;AACA;AACES,MAAAA,aAAa,EACX,sDACA,mCAHJ;AAIEvB,MAAAA,GAAG,EAAE,GAJP;AAKEO,MAAAA,QAAQ,EAAE,CACRZ,IAAI,CAAC0B,OAAL,CAAa,MAAb,EAAqB,GAArB,CADQ,EAER1B,IAAI,CAACgB,mBAFG,EAGRhB,IAAI,CAACiB,oBAHG,EAIRjB,IAAI,CAACkB,iBAJG,EAKRlB,IAAI,CAACmB,gBALG,EAMRL,UANQ,EAORO,QAPQ;AALZ,KApBQ,EAmCR;AAAE;AACAO,MAAAA,aAAa,EAAE,OADjB;AAEEvB,MAAAA,GAAG,EAAE,GAFP;AAGEsB,MAAAA,WAAW,EAAE,IAHf;AAIEf,MAAAA,QAAQ,EAAE,CACR;AAAE;AACAgB,QAAAA,aAAa,EAAE,OADjB;AAEEvB,QAAAA,GAAG,EAAE,GAFP;AAGEO,QAAAA,QAAQ,EAAE,CAACS,QAAD;AAHZ,OADQ,EAMRrB,IAAI,CAAC0B,OAAL,CAAa,MAAb,EAAqB,GAArB,CANQ,EAOR1B,IAAI,CAACgB,mBAPG,EAQRhB,IAAI,CAACiB,oBARG,EASRjB,IAAI,CAACkB,iBATG,EAURlB,IAAI,CAACmB,gBAVG,EAWRnB,IAAI,CAACoB,aAXG,CAYR;AAZQ;AAJZ,KAnCQ,EAsDR;AACA;AACEjB,MAAAA,SAAS,EAAE,UADb;AAEEC,MAAAA,KAAK,EAAE,gCAFT;AAGEuB,MAAAA,WAAW,EAAE,IAHf;AAIEf,MAAAA,QAAQ,EAAE,CACJ;AAAE;AACAT,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADI,EAKJF,MALI,EAMJM,OANI;AAJZ,KAvDQ,EAoERR,IAAI,CAACoB,aApEG,EAqERZ,OArEQ;AAJL,GAAP;AA4ED,CAxJD","sourcesContent":["module.exports = function (hljs) {\r\n  var KEYWORDS = {\r\n    'keyword':\r\n      'abort acronym acronyms alias all and assign binary card diag display ' +\r\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\r\n      'minimizing model models ne negative no not option options or ord ' +\r\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\r\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\r\n    'literal': 'eps inf na',\r\n    'built-in':\r\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\r\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\r\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\r\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\r\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\r\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\r\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\r\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\r\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\r\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\r\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\r\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\r\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\r\n      'timeElapsed timeExec timeStart'\r\n  };\r\n  var PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/, end: /\\)/,\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n  };\r\n  var SYMBOLS = {\r\n    className: 'symbol',\r\n    variants: [\r\n      {begin: /\\=[lgenxc]=/},\r\n      {begin: /\\$/},\r\n    ]\r\n  };\r\n  var QSTR = { // One-line quoted comment string\r\n    className: 'comment',\r\n    variants: [\r\n      {begin: '\\'', end: '\\''},\r\n      {begin: '\"', end: '\"'},\r\n    ],\r\n    illegal: '\\\\n',\r\n    contains: [hljs.BACKSLASH_ESCAPE]\r\n  };\r\n  var ASSIGNMENT = {\r\n    begin: '/',\r\n    end: '/',\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      QSTR,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n    ],\r\n  };\r\n  var DESCTEXT = { // Parameter/set/variable description text\r\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\r\n    excludeBegin: true,\r\n    end: '$',\r\n    endsWithParent: true,\r\n    contains: [\r\n      QSTR,\r\n      ASSIGNMENT,\r\n      {\r\n        className: 'comment',\r\n        begin: /([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+/,\r\n        relevance: 0\r\n      },\r\n    ],\r\n  };\r\n\r\n  return {\r\n    aliases: ['gms'],\r\n    case_insensitive: true,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\r\n      {\r\n        className: 'meta',\r\n        begin: '^\\\\$[a-z0-9]+',\r\n        end: '$',\r\n        returnBegin: true,\r\n        contains: [\r\n          {\r\n            className: 'meta-keyword',\r\n            begin: '^\\\\$[a-z0-9]+',\r\n          }\r\n        ]\r\n      },\r\n      hljs.COMMENT('^\\\\*', '$'),\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      // Declarations\r\n      {\r\n        beginKeywords:\r\n          'set sets parameter parameters variable variables ' +\r\n          'scalar scalars equation equations',\r\n        end: ';',\r\n        contains: [\r\n          hljs.COMMENT('^\\\\*', '$'),\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          ASSIGNMENT,\r\n          DESCTEXT,\r\n        ]\r\n      },\r\n      { // table environment\r\n        beginKeywords: 'table',\r\n        end: ';',\r\n        returnBegin: true,\r\n        contains: [\r\n          { // table header row\r\n            beginKeywords: 'table',\r\n            end: '$',\r\n            contains: [DESCTEXT],\r\n          },\r\n          hljs.COMMENT('^\\\\*', '$'),\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          hljs.C_NUMBER_MODE,\r\n          // Table does not contain DESCTEXT or ASSIGNMENT\r\n        ]\r\n      },\r\n      // Function definitions\r\n      {\r\n        className: 'function',\r\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\r\n        returnBegin: true,\r\n        contains: [\r\n              { // Function title\r\n                className: 'title',\r\n                begin: /^[a-z0-9_]+/,\r\n              },\r\n              PARAMS,\r\n              SYMBOLS,\r\n            ],\r\n      },\r\n      hljs.C_NUMBER_MODE,\r\n      SYMBOLS,\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}