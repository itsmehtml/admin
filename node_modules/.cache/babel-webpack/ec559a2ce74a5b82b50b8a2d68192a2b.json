{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @payload\r\n * @property {string} parallelAxisId\r\n * @property {Array.<Array.<number>>} intervals\r\n */\n\n\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\r\n * @payload\r\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/axis/parallelAxisAction.js"],"names":["echarts","require","actionInfo","type","event","registerAction","payload","ecModel","eachComponent","mainType","query","parallelAxisModel","axis","model","setActiveIntervals","intervals","parallelModel","setAxisExpand"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,gBADS;AAEfC,EAAAA,KAAK,EAAE,kBAFQ,CAEW;;AAFX,CAAjB;AAKAJ,OAAO,CAACK,cAAR,CAAuBH,UAAvB,EAAmC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4B;AAC7DA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,cADU;AAEpBC,IAAAA,KAAK,EAAEJ;AAFa,GAAtB,EAGG,UAAUK,iBAAV,EAA6B;AAC9BA,IAAAA,iBAAiB,CAACC,IAAlB,CAAuBC,KAAvB,CAA6BC,kBAA7B,CAAgDR,OAAO,CAACS,SAAxD;AACD,GALD;AAMD,CAPD;AAQA;AACA;AACA;;AAEAf,OAAO,CAACK,cAAR,CAAuB,oBAAvB,EAA6C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACvEA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,UADU;AAEpBC,IAAAA,KAAK,EAAEJ;AAFa,GAAtB,EAGG,UAAUU,aAAV,EAAyB;AAC1BA,IAAAA,aAAa,CAACC,aAAd,CAA4BX,OAA5B;AACD,GALD;AAMD,CAPD","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @payload\r\n * @property {string} parallelAxisId\r\n * @property {Array.<Array.<number>>} intervals\r\n */\r\nvar actionInfo = {\r\n  type: 'axisAreaSelect',\r\n  event: 'axisAreaSelected' // update: 'updateVisual'\r\n\r\n};\r\necharts.registerAction(actionInfo, function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'parallelAxis',\r\n    query: payload\r\n  }, function (parallelAxisModel) {\r\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\r\n  });\r\n});\r\n/**\r\n * @payload\r\n */\r\n\r\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'parallel',\r\n    query: payload\r\n  }, function (parallelModel) {\r\n    parallelModel.setAxisExpand(payload);\r\n  });\r\n});"]},"metadata":{},"sourceType":"script"}