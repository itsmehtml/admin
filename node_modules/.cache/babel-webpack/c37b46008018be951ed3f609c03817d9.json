{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * Extend axis 2d\r\n * @constructor module:echarts/coord/cartesian/Axis2D\r\n * @extends {module:echarts/coord/cartesian/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\n\n\nvar TimelineAxis = function TimelineAxis(dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\n\n  this.type = axisType || 'value';\n  /**\r\n   * Axis model\r\n   * @param {module:echarts/component/TimelineModel}\r\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\r\n   * @override\r\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('label');\n  },\n\n  /**\r\n   * @override\r\n   */\n  isHorizontal: function isHorizontal() {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/timeline/TimelineAxis.js"],"names":["zrUtil","require","Axis","TimelineAxis","dim","scale","coordExtent","axisType","call","type","model","prototype","constructor","getLabelModel","getModel","isHorizontal","get","inherits","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,YAAY,GAAG,SAAfA,YAAe,CAAUC,GAAV,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,QAAnC,EAA6C;AAC9DL,EAAAA,IAAI,CAACM,IAAL,CAAU,IAAV,EAAgBJ,GAAhB,EAAqBC,KAArB,EAA4BC,WAA5B;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAKG,IAAL,GAAYF,QAAQ,IAAI,OAAxB;AACA;AACF;AACA;AACA;;AAEE,OAAKG,KAAL,GAAa,IAAb;AACD,CAlBD;;AAoBAP,YAAY,CAACQ,SAAb,GAAyB;AACvBC,EAAAA,WAAW,EAAET,YADU;;AAGvB;AACF;AACA;AACEU,EAAAA,aAAa,EAAE,yBAAY;AACzB,WAAO,KAAKH,KAAL,CAAWI,QAAX,CAAoB,OAApB,CAAP;AACD,GARsB;;AAUvB;AACF;AACA;AACEC,EAAAA,YAAY,EAAE,wBAAY;AACxB,WAAO,KAAKL,KAAL,CAAWM,GAAX,CAAe,QAAf,MAA6B,YAApC;AACD;AAfsB,CAAzB;AAiBAhB,MAAM,CAACiB,QAAP,CAAgBd,YAAhB,EAA8BD,IAA9B;AACA,IAAIgB,QAAQ,GAAGf,YAAf;AACAgB,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../../coord/Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Extend axis 2d\r\n * @constructor module:echarts/coord/cartesian/Axis2D\r\n * @extends {module:echarts/coord/cartesian/Axis}\r\n * @param {string} dim\r\n * @param {*} scale\r\n * @param {Array.<number>} coordExtent\r\n * @param {string} axisType\r\n * @param {string} position\r\n */\r\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\r\n  Axis.call(this, dim, scale, coordExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = axisType || 'value';\r\n  /**\r\n   * Axis model\r\n   * @param {module:echarts/component/TimelineModel}\r\n   */\r\n\r\n  this.model = null;\r\n};\r\n\r\nTimelineAxis.prototype = {\r\n  constructor: TimelineAxis,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  getLabelModel: function () {\r\n    return this.model.getModel('label');\r\n  },\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  isHorizontal: function () {\r\n    return this.model.get('orient') === 'horizontal';\r\n  }\r\n};\r\nzrUtil.inherits(TimelineAxis, Axis);\r\nvar _default = TimelineAxis;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}