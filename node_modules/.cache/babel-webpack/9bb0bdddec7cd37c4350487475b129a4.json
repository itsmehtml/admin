{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\r\n   * Only first map series of same mapType will drawMap\r\n   * @type {boolean}\r\n   */\n  needsDrawMap: false,\n\n  /**\r\n   * Group of all map series with same mapType\r\n   * @type {boolean}\r\n   */\n  seriesGroup: [],\n  getInitialData: function getInitialData(option) {\n    var data = createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var valueDim = data.mapDimension('value');\n    var dataNameMap = zrUtil.createHashMap();\n    var selectTargetList = [];\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name = data.getName(i);\n      dataNameMap.set(name, true);\n      selectTargetList.push({\n        name: name,\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        selectTargetList.push({\n          name: name\n        });\n        toAppendNames.push(name);\n      }\n    });\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  },\n\n  /**\r\n   * If no host geo model, return null, which means using a\r\n   * inner exclusive geo model.\r\n   */\n  getHostGeoModel: function getHostGeoModel() {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function getMapType() {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  // _fillOption: function (option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // },\n  getRawValue: function getRawValue(dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\n  getRegionModel: function getRegionModel(regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\r\n   * Map tooltip formatter\r\n   *\r\n   * @param {number} dataIndex\r\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\r\n   * @implement\r\n   */\n  getTooltipPosition: function getTooltipPosition(dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/map/MapSeries.js"],"names":["zrUtil","require","createListSimply","SeriesModel","_format","encodeHTML","addCommas","dataSelectableMixin","_dataProvider","retrieveRawAttr","geoSourceManager","_sourceHelper","makeSeriesEncodeForNameBased","MapSeries","extend","type","dependencies","layoutMode","needsDrawMap","seriesGroup","getInitialData","option","data","coordDimensions","encodeDefaulter","curry","valueDim","mapDimension","dataNameMap","createHashMap","selectTargetList","toAppendNames","i","len","count","name","getName","set","push","value","get","selected","geoSource","load","getMapType","nameMap","each","regions","region","updateSelectedMap","appendValues","getHostGeoModel","geoIndex","dependentModels","geo","map","getRawValue","dataIndex","getData","getRegionModel","regionName","getItemModel","indexOfName","formatTooltip","formattedValue","seriesNames","length","otherIndex","originalData","isNaN","join","getTooltipPosition","coordinateSystem","getRegion","dataToPoint","center","setZoom","zoom","setCenter","defaultOption","zlevel","z","left","top","aspectScale","showLegendSymbol","dataRangeHoverLink","boundingCoords","scaleLimit","label","show","color","itemStyle","borderWidth","borderColor","areaColor","emphasis","mixin","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\nvar addCommas = _format.addCommas;\r\n\r\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\r\n\r\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\r\n\r\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\r\n\r\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\r\n\r\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\r\n\r\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar MapSeries = SeriesModel.extend({\r\n  type: 'series.map',\r\n  dependencies: ['geo'],\r\n  layoutMode: 'box',\r\n\r\n  /**\r\n   * Only first map series of same mapType will drawMap\r\n   * @type {boolean}\r\n   */\r\n  needsDrawMap: false,\r\n\r\n  /**\r\n   * Group of all map series with same mapType\r\n   * @type {boolean}\r\n   */\r\n  seriesGroup: [],\r\n  getInitialData: function (option) {\r\n    var data = createListSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n    var valueDim = data.mapDimension('value');\r\n    var dataNameMap = zrUtil.createHashMap();\r\n    var selectTargetList = [];\r\n    var toAppendNames = [];\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      var name = data.getName(i);\r\n      dataNameMap.set(name, true);\r\n      selectTargetList.push({\r\n        name: name,\r\n        value: data.get(valueDim, i),\r\n        selected: retrieveRawAttr(data, i, 'selected')\r\n      });\r\n    }\r\n\r\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap);\r\n    zrUtil.each(geoSource.regions, function (region) {\r\n      var name = region.name;\r\n\r\n      if (!dataNameMap.get(name)) {\r\n        selectTargetList.push({\r\n          name: name\r\n        });\r\n        toAppendNames.push(name);\r\n      }\r\n    });\r\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\r\n    // map and render) can not be performed without a \"full data\". For example,\r\n    // find `dataIndex` by name.\r\n\r\n    data.appendValues([], toAppendNames);\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * If no host geo model, return null, which means using a\r\n   * inner exclusive geo model.\r\n   */\r\n  getHostGeoModel: function () {\r\n    var geoIndex = this.option.geoIndex;\r\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\r\n  },\r\n  getMapType: function () {\r\n    return (this.getHostGeoModel() || this).option.map;\r\n  },\r\n  // _fillOption: function (option, mapName) {\r\n  // Shallow clone\r\n  // option = zrUtil.extend({}, option);\r\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\r\n  // return option;\r\n  // },\r\n  getRawValue: function (dataIndex) {\r\n    // Use value stored in data instead because it is calculated from multiple series\r\n    // FIXME Provide all value of multiple series ?\r\n    var data = this.getData();\r\n    return data.get(data.mapDimension('value'), dataIndex);\r\n  },\r\n\r\n  /**\r\n   * Get model of region\r\n   * @param  {string} name\r\n   * @return {module:echarts/model/Model}\r\n   */\r\n  getRegionModel: function (regionName) {\r\n    var data = this.getData();\r\n    return data.getItemModel(data.indexOfName(regionName));\r\n  },\r\n\r\n  /**\r\n   * Map tooltip formatter\r\n   *\r\n   * @param {number} dataIndex\r\n   */\r\n  formatTooltip: function (dataIndex) {\r\n    // FIXME orignalData and data is a bit confusing\r\n    var data = this.getData();\r\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\r\n    var name = data.getName(dataIndex);\r\n    var seriesGroup = this.seriesGroup;\r\n    var seriesNames = [];\r\n\r\n    for (var i = 0; i < seriesGroup.length; i++) {\r\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\r\n      var valueDim = data.mapDimension('value');\r\n\r\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\r\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\r\n      }\r\n    }\r\n\r\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  getTooltipPosition: function (dataIndex) {\r\n    if (dataIndex != null) {\r\n      var name = this.getData().getName(dataIndex);\r\n      var geo = this.coordinateSystem;\r\n      var region = geo.getRegion(name);\r\n      return region && geo.dataToPoint(region.center);\r\n    }\r\n  },\r\n  setZoom: function (zoom) {\r\n    this.option.zoom = zoom;\r\n  },\r\n  setCenter: function (center) {\r\n    this.option.center = center;\r\n  },\r\n  defaultOption: {\r\n    // 一级层叠\r\n    zlevel: 0,\r\n    // 二级层叠\r\n    z: 2,\r\n    coordinateSystem: 'geo',\r\n    // map should be explicitly specified since ec3.\r\n    map: '',\r\n    // If `geoIndex` is not specified, a exclusive geo will be\r\n    // created. Otherwise use the specified geo component, and\r\n    // `map` and `mapType` are ignored.\r\n    // geoIndex: 0,\r\n    // 'center' | 'left' | 'right' | 'x%' | {number}\r\n    left: 'center',\r\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\r\n    top: 'center',\r\n    // right\r\n    // bottom\r\n    // width:\r\n    // height\r\n    // Aspect is width / height. Inited to be geoJson bbox aspect\r\n    // This parameter is used for scale this aspect\r\n    aspectScale: 0.75,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    // 数值合并方式，默认加和，可选为：\r\n    // 'sum' | 'average' | 'max' | 'min'\r\n    // mapValueCalculation: 'sum',\r\n    // 地图数值计算结果小数精度\r\n    // mapValuePrecision: 0,\r\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\r\n    showLegendSymbol: true,\r\n    // 选择模式，默认关闭，可选single，multiple\r\n    // selectedMode: false,\r\n    dataRangeHoverLink: true,\r\n    // 是否开启缩放及漫游模式\r\n    // roam: false,\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ],\r\n    // higher priority than center and zoom\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    // scaleLimit: null,\r\n    itemStyle: {\r\n      borderWidth: 0.5,\r\n      borderColor: '#444',\r\n      areaColor: '#eee'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        areaColor: 'rgba(255,215,0,0.8)'\r\n      }\r\n    }\r\n  }\r\n});\r\nzrUtil.mixin(MapSeries, dataSelectableMixin);\r\nvar _default = MapSeries;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}