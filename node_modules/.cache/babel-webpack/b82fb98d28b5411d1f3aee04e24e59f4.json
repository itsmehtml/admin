{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @constructor\r\n * @param {Object} [opt]\r\n * @param {Object} [opt.categories=[]]\r\n * @param {Object} [opt.needCollect=false]\r\n * @param {Object} [opt.deduplication=false]\r\n */\n\nfunction OrdinalMeta(opt) {\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\n  this.categories = opt.categories || [];\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\n\n  this._map;\n}\n/**\r\n * @param {module:echarts/model/Model} axisModel\r\n * @return {module:echarts/data/OrdinalMeta}\r\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\r\n * @param {string} category\r\n * @return {number} ordinal\r\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\r\n * @param {*} category\r\n * @return {number} The ordinal. If not found, return NaN.\r\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/data/OrdinalMeta.js"],"names":["_util","require","createHashMap","isObject","map","OrdinalMeta","opt","categories","_needCollect","needCollect","_deduplication","deduplication","_map","createByAxisModel","axisModel","option","data","getName","dedplication","proto","prototype","getOrdinal","category","getOrCreateMap","get","parseAndCollect","index","length","set","NaN","ordinalMeta","obj","value","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar createHashMap = _util.createHashMap;\r\nvar isObject = _util.isObject;\r\nvar map = _util.map;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @constructor\r\n * @param {Object} [opt]\r\n * @param {Object} [opt.categories=[]]\r\n * @param {Object} [opt.needCollect=false]\r\n * @param {Object} [opt.deduplication=false]\r\n */\r\nfunction OrdinalMeta(opt) {\r\n  /**\r\n   * @readOnly\r\n   * @type {Array.<string>}\r\n   */\r\n  this.categories = opt.categories || [];\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._needCollect = opt.needCollect;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._deduplication = opt.deduplication;\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n\r\n  this._map;\r\n}\r\n/**\r\n * @param {module:echarts/model/Model} axisModel\r\n * @return {module:echarts/data/OrdinalMeta}\r\n */\r\n\r\n\r\nOrdinalMeta.createByAxisModel = function (axisModel) {\r\n  var option = axisModel.option;\r\n  var data = option.data;\r\n  var categories = data && map(data, getName);\r\n  return new OrdinalMeta({\r\n    categories: categories,\r\n    needCollect: !categories,\r\n    // deduplication is default in axis.\r\n    deduplication: option.dedplication !== false\r\n  });\r\n};\r\n\r\nvar proto = OrdinalMeta.prototype;\r\n/**\r\n * @param {string} category\r\n * @return {number} ordinal\r\n */\r\n\r\nproto.getOrdinal = function (category) {\r\n  return getOrCreateMap(this).get(category);\r\n};\r\n/**\r\n * @param {*} category\r\n * @return {number} The ordinal. If not found, return NaN.\r\n */\r\n\r\n\r\nproto.parseAndCollect = function (category) {\r\n  var index;\r\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\r\n  // This feature is only supported when !needCollect, because we should\r\n  // consider a common case: a value is 2017, which is a number but is\r\n  // expected to be tread as a category. This case usually happen in dataset,\r\n  // where it happent to be no need of the index feature.\r\n\r\n  if (typeof category !== 'string' && !needCollect) {\r\n    return category;\r\n  } // Optimize for the scenario:\r\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\r\n  // data has been ensured not duplicate and is large data.\r\n  // Notice, if a dataset dimension provide categroies, usually echarts\r\n  // should remove duplication except user tell echarts dont do that\r\n  // (set axis.deduplication = false), because echarts do not know whether\r\n  // the values in the category dimension has duplication (consider the\r\n  // parallel-aqi example)\r\n\r\n\r\n  if (needCollect && !this._deduplication) {\r\n    index = this.categories.length;\r\n    this.categories[index] = category;\r\n    return index;\r\n  }\r\n\r\n  var map = getOrCreateMap(this);\r\n  index = map.get(category);\r\n\r\n  if (index == null) {\r\n    if (needCollect) {\r\n      index = this.categories.length;\r\n      this.categories[index] = category;\r\n      map.set(category, index);\r\n    } else {\r\n      index = NaN;\r\n    }\r\n  }\r\n\r\n  return index;\r\n}; // Consider big data, do not create map until needed.\r\n\r\n\r\nfunction getOrCreateMap(ordinalMeta) {\r\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\r\n}\r\n\r\nfunction getName(obj) {\r\n  if (isObject(obj) && obj.value != null) {\r\n    return obj.value;\r\n  } else {\r\n    return obj + '';\r\n  }\r\n}\r\n\r\nvar _default = OrdinalMeta;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}