{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\r\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {Object} snapshot\r\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {number} records. always >= 1.\r\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\r\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\r\n * History length of each dataZoom may be different.\r\n * this._history[0] is used to store origin range.\r\n * @type {Array.<Object>}\r\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/dataZoom/history.js"],"names":["zrUtil","require","each","ATTR","push","ecModel","newSnapshot","store","giveStore","batchItem","dataZoomId","i","length","snapshot","dataZoomModel","queryComponents","mainType","subType","id","percentRange","getPercentRange","start","end","pop","head","clear","count","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar each = zrUtil.each;\r\nvar ATTR = '\\0_ec_hist_store';\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\r\n */\r\n\r\nfunction push(ecModel, newSnapshot) {\r\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\r\n  // complete an range with current range.\r\n\r\n  each(newSnapshot, function (batchItem, dataZoomId) {\r\n    var i = store.length - 1;\r\n\r\n    for (; i >= 0; i--) {\r\n      var snapshot = store[i];\r\n\r\n      if (snapshot[dataZoomId]) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i < 0) {\r\n      // No origin range set, create one by current range.\r\n      var dataZoomModel = ecModel.queryComponents({\r\n        mainType: 'dataZoom',\r\n        subType: 'select',\r\n        id: dataZoomId\r\n      })[0];\r\n\r\n      if (dataZoomModel) {\r\n        var percentRange = dataZoomModel.getPercentRange();\r\n        store[0][dataZoomId] = {\r\n          dataZoomId: dataZoomId,\r\n          start: percentRange[0],\r\n          end: percentRange[1]\r\n        };\r\n      }\r\n    }\r\n  });\r\n  store.push(newSnapshot);\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {Object} snapshot\r\n */\r\n\r\n\r\nfunction pop(ecModel) {\r\n  var store = giveStore(ecModel);\r\n  var head = store[store.length - 1];\r\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\r\n\r\n  var snapshot = {};\r\n  each(head, function (batchItem, dataZoomId) {\r\n    for (var i = store.length - 1; i >= 0; i--) {\r\n      var batchItem = store[i][dataZoomId];\r\n\r\n      if (batchItem) {\r\n        snapshot[dataZoomId] = batchItem;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return snapshot;\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n */\r\n\r\n\r\nfunction clear(ecModel) {\r\n  ecModel[ATTR] = null;\r\n}\r\n/**\r\n * @param {module:echarts/model/Global} ecModel\r\n * @return {number} records. always >= 1.\r\n */\r\n\r\n\r\nfunction count(ecModel) {\r\n  return giveStore(ecModel).length;\r\n}\r\n/**\r\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\r\n * History length of each dataZoom may be different.\r\n * this._history[0] is used to store origin range.\r\n * @type {Array.<Object>}\r\n */\r\n\r\n\r\nfunction giveStore(ecModel) {\r\n  var store = ecModel[ATTR];\r\n\r\n  if (!store) {\r\n    store = ecModel[ATTR] = [{}];\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexports.push = push;\r\nexports.pop = pop;\r\nexports.clear = clear;\r\nexports.count = count;"]},"metadata":{},"sourceType":"script"}