{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function render(seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function remove(ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function _clear(ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function cartesian2d(coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function polar(coordSysClipArea) {\n    return false;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function cartesian2d(dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function polar(dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function cartesian2d(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function polar(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: data.getLayout('largeDataIndices'),\n    __barWidth: data.getLayout('barWidth')\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/bar/BarView.js"],"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","_throttle","throttle","_createClipPathFromCoordSys","createClipPath","Sausage","BAR_BORDER_WIDTH_QUERY","_eventPos","extend","prototype","getClipArea","coord","data","coordSysClipArea","getArea","type","baseAxis","getBaseAxis","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","_default","extendChartView","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","needsClip","removeClipPath","roundCap","diff","add","dataIndex","hasValue","itemModel","getItemModel","layout","isClipped","clip","remove","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","updateProps","shape","removeRect","removeSector","execute","createLarge","clipPath","setClipPath","dispose","noop","eachItemGraphicEl","removeAll","mathMax","Math","max","mathMin","min","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","style","text","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","color","getItemVisual","opacity","stroke","getVisual","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","useStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","baseDimIdx","__baseDimIdx","i","length","moveTo","lineTo","incremental","__largeDataIndices","__barWidth","setLargeStyle","seriesIndex","on","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","largeDataIndices","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","borderColor","itemStyle","getItemStyle","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _config = require(\"../../config\");\r\n\r\nvar __DEV__ = _config.__DEV__;\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar _helper = require(\"./helper\");\r\n\r\nvar setLabel = _helper.setLabel;\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar barItemStyle = require(\"./barItemStyle\");\r\n\r\nvar Path = require(\"zrender/lib/graphic/Path\");\r\n\r\nvar _throttle = require(\"../../util/throttle\");\r\n\r\nvar throttle = _throttle.throttle;\r\n\r\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\r\n\r\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\r\n\r\nvar Sausage = require(\"../../util/shape/sausage\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\r\nvar _eventPos = [0, 0]; // FIXME\r\n// Just for compatible with ec2.\r\n\r\nzrUtil.extend(Model.prototype, barItemStyle);\r\n\r\nfunction getClipArea(coord, data) {\r\n  var coordSysClipArea = coord.getArea && coord.getArea();\r\n\r\n  if (coord.type === 'cartesian2d') {\r\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\r\n    // We should not clip this part.\r\n    // See test/bar2.html\r\n\r\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\r\n      var expandWidth = data.getLayout('bandWidth');\r\n\r\n      if (baseAxis.isHorizontal()) {\r\n        coordSysClipArea.x -= expandWidth;\r\n        coordSysClipArea.width += expandWidth * 2;\r\n      } else {\r\n        coordSysClipArea.y -= expandWidth;\r\n        coordSysClipArea.height += expandWidth * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return coordSysClipArea;\r\n}\r\n\r\nvar _default = echarts.extendChartView({\r\n  type: 'bar',\r\n  render: function (seriesModel, ecModel, api) {\r\n    this._updateDrawMode(seriesModel);\r\n\r\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\r\n\r\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\r\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\r\n    } else {}\r\n\r\n    return this.group;\r\n  },\r\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n  },\r\n  incrementalRender: function (params, seriesModel, ecModel, api) {\r\n    // Do not support progressive in normal mode.\r\n    this._incrementalRenderLarge(params, seriesModel);\r\n  },\r\n  _updateDrawMode: function (seriesModel) {\r\n    var isLargeDraw = seriesModel.pipelineContext.large;\r\n\r\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\r\n      this._isLargeDraw = isLargeDraw;\r\n\r\n      this._clear();\r\n    }\r\n  },\r\n  _renderNormal: function (seriesModel, ecModel, api) {\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var coord = seriesModel.coordinateSystem;\r\n    var baseAxis = coord.getBaseAxis();\r\n    var isHorizontalOrRadial;\r\n\r\n    if (coord.type === 'cartesian2d') {\r\n      isHorizontalOrRadial = baseAxis.isHorizontal();\r\n    } else if (coord.type === 'polar') {\r\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\r\n    }\r\n\r\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\r\n    var needsClip = seriesModel.get('clip', true);\r\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\r\n\r\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\r\n    // And don't want the label are clipped.\r\n\r\n    var roundCap = seriesModel.get('roundCap', true);\r\n    data.diff(oldData).add(function (dataIndex) {\r\n      if (!data.hasValue(dataIndex)) {\r\n        return;\r\n      }\r\n\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\r\n\r\n      if (needsClip) {\r\n        // Clip will modify the layout params.\r\n        // And return a boolean to determine if the shape are fully clipped.\r\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\r\n\r\n        if (isClipped) {\r\n          group.remove(el);\r\n          return;\r\n        }\r\n      }\r\n\r\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\r\n      data.setItemGraphicEl(dataIndex, el);\r\n      group.add(el);\r\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n    }).update(function (newIndex, oldIndex) {\r\n      var el = oldData.getItemGraphicEl(oldIndex);\r\n\r\n      if (!data.hasValue(newIndex)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      var itemModel = data.getItemModel(newIndex);\r\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\r\n\r\n      if (needsClip) {\r\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\r\n\r\n        if (isClipped) {\r\n          group.remove(el);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (el) {\r\n        graphic.updateProps(el, {\r\n          shape: layout\r\n        }, animationModel, newIndex);\r\n      } else {\r\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\r\n      }\r\n\r\n      data.setItemGraphicEl(newIndex, el); // Add back\r\n\r\n      group.add(el);\r\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n    }).remove(function (dataIndex) {\r\n      var el = oldData.getItemGraphicEl(dataIndex);\r\n\r\n      if (coord.type === 'cartesian2d') {\r\n        el && removeRect(dataIndex, animationModel, el);\r\n      } else {\r\n        el && removeSector(dataIndex, animationModel, el);\r\n      }\r\n    }).execute();\r\n    this._data = data;\r\n  },\r\n  _renderLarge: function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\r\n\r\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n  },\r\n  _incrementalRenderLarge: function (params, seriesModel) {\r\n    createLarge(seriesModel, this.group, true);\r\n  },\r\n  dispose: zrUtil.noop,\r\n  remove: function (ecModel) {\r\n    this._clear(ecModel);\r\n  },\r\n  _clear: function (ecModel) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n\r\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\r\n      data.eachItemGraphicEl(function (el) {\r\n        if (el.type === 'sector') {\r\n          removeSector(el.dataIndex, ecModel, el);\r\n        } else {\r\n          removeRect(el.dataIndex, ecModel, el);\r\n        }\r\n      });\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n\r\n    this._data = null;\r\n  }\r\n});\r\n\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar clip = {\r\n  cartesian2d: function (coordSysBoundingRect, layout) {\r\n    var signWidth = layout.width < 0 ? -1 : 1;\r\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\r\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\r\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\r\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\r\n    layout.x = x;\r\n    layout.y = y;\r\n    layout.width = x2 - x;\r\n    layout.height = y2 - y;\r\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    return clipped;\r\n  },\r\n  polar: function (coordSysClipArea) {\r\n    return false;\r\n  }\r\n};\r\nvar elementCreator = {\r\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\r\n    var rect = new graphic.Rect({\r\n      shape: zrUtil.extend({}, layout)\r\n    }); // Animation\r\n\r\n    if (animationModel) {\r\n      var rectShape = rect.shape;\r\n      var animateProperty = isHorizontal ? 'height' : 'width';\r\n      var animateTarget = {};\r\n      rectShape[animateProperty] = 0;\r\n      animateTarget[animateProperty] = layout[animateProperty];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\r\n        shape: animateTarget\r\n      }, animationModel, dataIndex);\r\n    }\r\n\r\n    return rect;\r\n  },\r\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\r\n    // Keep the same logic with bar in catesion: use end value to control\r\n    // direction. Notice that if clockwise is true (by default), the sector\r\n    // will always draw clockwisely, no matter whether endAngle is greater\r\n    // or less than startAngle.\r\n    var clockwise = layout.startAngle < layout.endAngle;\r\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\r\n    var sector = new ShapeClass({\r\n      shape: zrUtil.defaults({\r\n        clockwise: clockwise\r\n      }, layout)\r\n    }); // Animation\r\n\r\n    if (animationModel) {\r\n      var sectorShape = sector.shape;\r\n      var animateProperty = isRadial ? 'r' : 'endAngle';\r\n      var animateTarget = {};\r\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\r\n      animateTarget[animateProperty] = layout[animateProperty];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\r\n        shape: animateTarget\r\n      }, animationModel, dataIndex);\r\n    }\r\n\r\n    return sector;\r\n  }\r\n};\r\n\r\nfunction removeRect(dataIndex, animationModel, el) {\r\n  // Not show text when animating\r\n  el.style.text = null;\r\n  graphic.updateProps(el, {\r\n    shape: {\r\n      width: 0\r\n    }\r\n  }, animationModel, dataIndex, function () {\r\n    el.parent && el.parent.remove(el);\r\n  });\r\n}\r\n\r\nfunction removeSector(dataIndex, animationModel, el) {\r\n  // Not show text when animating\r\n  el.style.text = null;\r\n  graphic.updateProps(el, {\r\n    shape: {\r\n      r: el.shape.r0\r\n    }\r\n  }, animationModel, dataIndex, function () {\r\n    el.parent && el.parent.remove(el);\r\n  });\r\n}\r\n\r\nvar getLayout = {\r\n  cartesian2d: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\r\n\r\n    var signX = layout.width > 0 ? 1 : -1;\r\n    var signY = layout.height > 0 ? 1 : -1;\r\n    return {\r\n      x: layout.x + signX * fixedLineWidth / 2,\r\n      y: layout.y + signY * fixedLineWidth / 2,\r\n      width: layout.width - signX * fixedLineWidth,\r\n      height: layout.height - signY * fixedLineWidth\r\n    };\r\n  },\r\n  polar: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    return {\r\n      cx: layout.cx,\r\n      cy: layout.cy,\r\n      r0: layout.r0,\r\n      r: layout.r,\r\n      startAngle: layout.startAngle,\r\n      endAngle: layout.endAngle\r\n    };\r\n  }\r\n};\r\n\r\nfunction isZeroOnPolar(layout) {\r\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\r\n}\r\n\r\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\r\n  var color = data.getItemVisual(dataIndex, 'color');\r\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\r\n  var stroke = data.getVisual('borderColor');\r\n  var itemStyleModel = itemModel.getModel('itemStyle');\r\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\r\n\r\n  if (!isPolar) {\r\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\r\n  }\r\n\r\n  el.useStyle(zrUtil.defaults({\r\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\r\n    fill: isZeroOnPolar(layout) ? 'none' : color,\r\n    opacity: opacity\r\n  }, itemStyleModel.getBarItemStyle()));\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  cursorStyle && el.attr('cursor', cursorStyle);\r\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\r\n\r\n  if (!isPolar) {\r\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\r\n  }\r\n\r\n  if (isZeroOnPolar(layout)) {\r\n    hoverStyle.fill = hoverStyle.stroke = 'none';\r\n  }\r\n\r\n  graphic.setHoverStyle(el, hoverStyle);\r\n} // In case width or height are too small.\r\n\r\n\r\nfunction getLineWidth(itemModel, rawLayout) {\r\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\r\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\r\n}\r\n\r\nvar LargePath = Path.extend({\r\n  type: 'largeBar',\r\n  shape: {\r\n    points: []\r\n  },\r\n  buildPath: function (ctx, shape) {\r\n    // Drawing lines is more efficient than drawing\r\n    // a whole line or drawing rects.\r\n    var points = shape.points;\r\n    var startPoint = this.__startPoint;\r\n    var baseDimIdx = this.__baseDimIdx;\r\n\r\n    for (var i = 0; i < points.length; i += 2) {\r\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\r\n      ctx.moveTo(startPoint[0], startPoint[1]);\r\n      ctx.lineTo(points[i], points[i + 1]);\r\n    }\r\n  }\r\n});\r\n\r\nfunction createLarge(seriesModel, group, incremental) {\r\n  // TODO support polar\r\n  var data = seriesModel.getData();\r\n  var startPoint = [];\r\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\r\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\r\n  var el = new LargePath({\r\n    shape: {\r\n      points: data.getLayout('largePoints')\r\n    },\r\n    incremental: !!incremental,\r\n    __startPoint: startPoint,\r\n    __baseDimIdx: baseDimIdx,\r\n    __largeDataIndices: data.getLayout('largeDataIndices'),\r\n    __barWidth: data.getLayout('barWidth')\r\n  });\r\n  group.add(el);\r\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\r\n\r\n  el.seriesIndex = seriesModel.seriesIndex;\r\n\r\n  if (!seriesModel.get('silent')) {\r\n    el.on('mousedown', largePathUpdateDataIndex);\r\n    el.on('mousemove', largePathUpdateDataIndex);\r\n  }\r\n} // Use throttle to avoid frequently traverse to find dataIndex.\r\n\r\n\r\nvar largePathUpdateDataIndex = throttle(function (event) {\r\n  var largePath = this;\r\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\r\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\r\n}, 30, false);\r\n\r\nfunction largePathFindDataIndex(largePath, x, y) {\r\n  var baseDimIdx = largePath.__baseDimIdx;\r\n  var valueDimIdx = 1 - baseDimIdx;\r\n  var points = largePath.shape.points;\r\n  var largeDataIndices = largePath.__largeDataIndices;\r\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\r\n  var startValueVal = largePath.__startPoint[valueDimIdx];\r\n  _eventPos[0] = x;\r\n  _eventPos[1] = y;\r\n  var pointerBaseVal = _eventPos[baseDimIdx];\r\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\r\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\r\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\r\n\r\n  for (var i = 0, len = points.length / 2; i < len; i++) {\r\n    var ii = i * 2;\r\n    var barBaseVal = points[ii + baseDimIdx];\r\n    var barValueVal = points[ii + valueDimIdx];\r\n\r\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\r\n      return largeDataIndices[i];\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction setLargeStyle(el, seriesModel, data) {\r\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\r\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor;\r\n  el.style.lineWidth = data.getLayout('barWidth');\r\n}\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}