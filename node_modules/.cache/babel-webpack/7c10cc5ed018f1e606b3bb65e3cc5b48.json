{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\n  this.group = new Group();\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\r\n   * Init the chart.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\n  init: function init(ecModel, api) {},\n\n  /**\r\n   * Render the chart.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\n  render: function render(seriesModel, ecModel, api, payload) {},\n\n  /**\r\n   * Highlight series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\r\n   * Downplay series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\r\n   * Remove self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\n  remove: function remove(ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\r\n   * Dispose self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\n  dispose: function dispose() {},\n\n  /**\r\n   * Rendering preparation in progressive mode.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\n  incrementalPrepareRender: null,\n\n  /**\r\n   * Render in progressive mode.\r\n   * @param  {Object} params See taskParams in `stream/task.js`\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\n  incrementalRender: null,\n\n  /**\r\n   * Update transform directly.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   * @return {Object} {update: true}\r\n   */\n  updateTransform: null,\n\n  /**\r\n   * The view contains the given point.\r\n   * @interface\r\n   * @param {Array.<number>} point\r\n   * @return {boolean}\r\n   */\n  // containPoint: function () {}\n\n  /**\r\n   * @param {string} eventType\r\n   * @param {Object} query\r\n   * @param {module:zrender/Element} targetEl\r\n   * @param {Object} packedEvent\r\n   * @return {boolen} Pass only when return `true`.\r\n   */\n  filterForExposedEvent: null\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\r\n * Set state of single element\r\n * @param {module:zrender/Element} el\r\n * @param {string} state 'normal'|'emphasis'\r\n * @param {number} highlightDigit\r\n */\n\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    el.trigger(state, highlightDigit);\n\n    if (el.isGroup // Simple optimize.\n    && !graphicUtil.isHighDownDispatcher(el)) {\n      for (var i = 0, len = el.childCount(); i < len; i++) {\n        elSetState(el.childAt(i), state, highlightDigit);\n      }\n    }\n  }\n}\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} payload\r\n * @param {string} state 'normal'|'emphasis'\r\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? graphicUtil.getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function progress(params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function progress(params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/view/Chart.js"],"names":["_util","require","each","Group","componentUtil","clazzUtil","modelUtil","graphicUtil","_task","createTask","createRenderPlanner","inner","makeInner","renderPlanner","Chart","group","uid","getUID","renderTask","plan","renderTaskPlan","reset","renderTaskReset","context","view","prototype","type","init","ecModel","api","render","seriesModel","payload","highlight","toggleHighlight","getData","downplay","remove","removeAll","dispose","incrementalPrepareRender","incrementalRender","updateTransform","filterForExposedEvent","chartProto","updateView","updateLayout","updateVisual","elSetState","el","state","highlightDigit","trigger","isGroup","isHighDownDispatcher","i","len","childCount","childAt","data","dataIndex","queryDataIndex","highlightKey","getHighlightDigit","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","enableClassExtend","enableClassManagement","registerWhenExtend","markUpdateMethod","methodName","updateMethod","model","progressiveRender","pipelineContext","progressMethodMap","progress","params","forceFirstProgress","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;;AAEA,IAAIC,KAAK,GAAGF,OAAO,CAAC,6BAAD,CAAnB;;AAEA,IAAIG,aAAa,GAAGH,OAAO,CAAC,mBAAD,CAA3B;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,eAAD,CAAvB;;AAEA,IAAIK,SAAS,GAAGL,OAAO,CAAC,eAAD,CAAvB;;AAEA,IAAIM,WAAW,GAAGN,OAAO,CAAC,iBAAD,CAAzB;;AAEA,IAAIO,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,UAAU,GAAGD,KAAK,CAACC,UAAvB;;AAEA,IAAIC,mBAAmB,GAAGT,OAAO,CAAC,qCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,KAAK,GAAGL,SAAS,CAACM,SAAV,EAAZ;AACA,IAAIC,aAAa,GAAGH,mBAAmB,EAAvC;;AAEA,SAASI,KAAT,GAAiB;AACf;AACF;AACA;AACA;AACE,OAAKC,KAAL,GAAa,IAAIZ,KAAJ,EAAb;AACA;AACF;AACA;AACA;;AAEE,OAAKa,GAAL,GAAWZ,aAAa,CAACa,MAAd,CAAqB,WAArB,CAAX;AACA,OAAKC,UAAL,GAAkBT,UAAU,CAAC;AAC3BU,IAAAA,IAAI,EAAEC,cADqB;AAE3BC,IAAAA,KAAK,EAAEC;AAFoB,GAAD,CAA5B;AAIA,OAAKJ,UAAL,CAAgBK,OAAhB,GAA0B;AACxBC,IAAAA,IAAI,EAAE;AADkB,GAA1B;AAGD;;AAEDV,KAAK,CAACW,SAAN,GAAkB;AAChBC,EAAAA,IAAI,EAAE,OADU;;AAGhB;AACF;AACA;AACA;AACA;AACEC,EAAAA,IAAI,EAAE,cAAUC,OAAV,EAAmBC,GAAnB,EAAwB,CAAE,CARhB;;AAUhB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,MAAM,EAAE,gBAAUC,WAAV,EAAuBH,OAAvB,EAAgCC,GAAhC,EAAqCG,OAArC,EAA8C,CAAE,CAjBxC;;AAmBhB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,SAAS,EAAE,mBAAUF,WAAV,EAAuBH,OAAvB,EAAgCC,GAAhC,EAAqCG,OAArC,EAA8C;AACvDE,IAAAA,eAAe,CAACH,WAAW,CAACI,OAAZ,EAAD,EAAwBH,OAAxB,EAAiC,UAAjC,CAAf;AACD,GA5Be;;AA8BhB;AACF;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,QAAQ,EAAE,kBAAUL,WAAV,EAAuBH,OAAvB,EAAgCC,GAAhC,EAAqCG,OAArC,EAA8C;AACtDE,IAAAA,eAAe,CAACH,WAAW,CAACI,OAAZ,EAAD,EAAwBH,OAAxB,EAAiC,QAAjC,CAAf;AACD,GAvCe;;AAyChB;AACF;AACA;AACA;AACA;AACEK,EAAAA,MAAM,EAAE,gBAAUT,OAAV,EAAmBC,GAAnB,EAAwB;AAC9B,SAAKd,KAAL,CAAWuB,SAAX;AACD,GAhDe;;AAkDhB;AACF;AACA;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,mBAAY,CAAE,CAvDP;;AAyDhB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE,IAhEV;;AAkEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,IA1EH;;AA4EhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IApFD;;AAsFhB;AACF;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,qBAAqB,EAAE;AArGP,CAAlB;AAuGA,IAAIC,UAAU,GAAG9B,KAAK,CAACW,SAAvB;;AAEAmB,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACE,YAAX,GAA0BF,UAAU,CAACG,YAAX,GAA0B,UAAUhB,WAAV,EAAuBH,OAAvB,EAAgCC,GAAhC,EAAqCG,OAArC,EAA8C;AACxH,OAAKF,MAAL,CAAYC,WAAZ,EAAyBH,OAAzB,EAAkCC,GAAlC,EAAuCG,OAAvC;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASgB,UAAT,CAAoBC,EAApB,EAAwBC,KAAxB,EAA+BC,cAA/B,EAA+C;AAC7C,MAAIF,EAAJ,EAAQ;AACNA,IAAAA,EAAE,CAACG,OAAH,CAAWF,KAAX,EAAkBC,cAAlB;;AAEA,QAAIF,EAAE,CAACI,OAAH,CAAW;AAAX,OACD,CAAC9C,WAAW,CAAC+C,oBAAZ,CAAiCL,EAAjC,CADJ,EAC0C;AACxC,WAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGP,EAAE,CAACQ,UAAH,EAAtB,EAAuCF,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACnDP,QAAAA,UAAU,CAACC,EAAE,CAACS,OAAH,CAAWH,CAAX,CAAD,EAAgBL,KAAhB,EAAuBC,cAAvB,CAAV;AACD;AACF;AACF;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASjB,eAAT,CAAyByB,IAAzB,EAA+B3B,OAA/B,EAAwCkB,KAAxC,EAA+C;AAC7C,MAAIU,SAAS,GAAGtD,SAAS,CAACuD,cAAV,CAAyBF,IAAzB,EAA+B3B,OAA/B,CAAhB;AACA,MAAImB,cAAc,GAAGnB,OAAO,IAAIA,OAAO,CAAC8B,YAAR,IAAwB,IAAnC,GAA0CvD,WAAW,CAACwD,iBAAZ,CAA8B/B,OAAO,CAAC8B,YAAtC,CAA1C,GAAgG,IAArH;;AAEA,MAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrB1D,IAAAA,IAAI,CAACI,SAAS,CAAC0D,gBAAV,CAA2BJ,SAA3B,CAAD,EAAwC,UAAUK,OAAV,EAAmB;AAC7DjB,MAAAA,UAAU,CAACW,IAAI,CAACO,gBAAL,CAAsBD,OAAtB,CAAD,EAAiCf,KAAjC,EAAwCC,cAAxC,CAAV;AACD,KAFG,CAAJ;AAGD,GAJD,MAIO;AACLQ,IAAAA,IAAI,CAACQ,iBAAL,CAAuB,UAAUlB,EAAV,EAAc;AACnCD,MAAAA,UAAU,CAACC,EAAD,EAAKC,KAAL,EAAYC,cAAZ,CAAV;AACD,KAFD;AAGD;AACF,C,CAAC;;;AAGF9C,SAAS,CAAC+D,iBAAV,CAA4BtD,KAA5B,EAAmC,CAAC,SAAD,CAAnC,E,CAAiD;;AAEjDT,SAAS,CAACgE,qBAAV,CAAgCvD,KAAhC,EAAuC;AACrCwD,EAAAA,kBAAkB,EAAE;AADiB,CAAvC;;AAIAxD,KAAK,CAACyD,gBAAN,GAAyB,UAAUvC,OAAV,EAAmBwC,UAAnB,EAA+B;AACtD7D,EAAAA,KAAK,CAACqB,OAAD,CAAL,CAAeyC,YAAf,GAA8BD,UAA9B;AACD,CAFD;;AAIA,SAASpD,cAAT,CAAwBG,OAAxB,EAAiC;AAC/B,SAAOV,aAAa,CAACU,OAAO,CAACmD,KAAT,CAApB;AACD;;AAED,SAASpD,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,MAAIQ,WAAW,GAAGR,OAAO,CAACmD,KAA1B;AACA,MAAI9C,OAAO,GAAGL,OAAO,CAACK,OAAtB;AACA,MAAIC,GAAG,GAAGN,OAAO,CAACM,GAAlB;AACA,MAAIG,OAAO,GAAGT,OAAO,CAACS,OAAtB,CAJgC,CAID;;AAE/B,MAAI2C,iBAAiB,GAAG5C,WAAW,CAAC6C,eAAZ,CAA4BD,iBAApD;AACA,MAAInD,IAAI,GAAGD,OAAO,CAACC,IAAnB;AACA,MAAIiD,YAAY,GAAGzC,OAAO,IAAIrB,KAAK,CAACqB,OAAD,CAAL,CAAeyC,YAA7C;AACA,MAAID,UAAU,GAAGG,iBAAiB,GAAG,0BAAH,GAAgCF,YAAY,IAAIjD,IAAI,CAACiD,YAAD,CAApB,GAAqCA,YAArC,CAAkD;AACpH;AADkE,IAEhE,QAFF;;AAIA,MAAID,UAAU,KAAK,QAAnB,EAA6B;AAC3BhD,IAAAA,IAAI,CAACgD,UAAD,CAAJ,CAAiBzC,WAAjB,EAA8BH,OAA9B,EAAuCC,GAAvC,EAA4CG,OAA5C;AACD;;AAED,SAAO6C,iBAAiB,CAACL,UAAD,CAAxB;AACD;;AAED,IAAIK,iBAAiB,GAAG;AACtBrC,EAAAA,wBAAwB,EAAE;AACxBsC,IAAAA,QAAQ,EAAE,kBAAUC,MAAV,EAAkBxD,OAAlB,EAA2B;AACnCA,MAAAA,OAAO,CAACC,IAAR,CAAaiB,iBAAb,CAA+BsC,MAA/B,EAAuCxD,OAAO,CAACmD,KAA/C,EAAsDnD,OAAO,CAACK,OAA9D,EAAuEL,OAAO,CAACM,GAA/E,EAAoFN,OAAO,CAACS,OAA5F;AACD;AAHuB,GADJ;AAMtBF,EAAAA,MAAM,EAAE;AACN;AACA;AACA;AACA;AACAkD,IAAAA,kBAAkB,EAAE,IALd;AAMNF,IAAAA,QAAQ,EAAE,kBAAUC,MAAV,EAAkBxD,OAAlB,EAA2B;AACnCA,MAAAA,OAAO,CAACC,IAAR,CAAaM,MAAb,CAAoBP,OAAO,CAACmD,KAA5B,EAAmCnD,OAAO,CAACK,OAA3C,EAAoDL,OAAO,CAACM,GAA5D,EAAiEN,OAAO,CAACS,OAAzE;AACD;AARK;AANc,CAAxB;AAiBA,IAAIiD,QAAQ,GAAGnE,KAAf;AACAoE,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\nvar Group = require(\"zrender/lib/container/Group\");\r\n\r\nvar componentUtil = require(\"../util/component\");\r\n\r\nvar clazzUtil = require(\"../util/clazz\");\r\n\r\nvar modelUtil = require(\"../util/model\");\r\n\r\nvar graphicUtil = require(\"../util/graphic\");\r\n\r\nvar _task = require(\"../stream/task\");\r\n\r\nvar createTask = _task.createTask;\r\n\r\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = modelUtil.makeInner();\r\nvar renderPlanner = createRenderPlanner();\r\n\r\nfunction Chart() {\r\n  /**\r\n   * @type {module:zrender/container/Group}\r\n   * @readOnly\r\n   */\r\n  this.group = new Group();\r\n  /**\r\n   * @type {string}\r\n   * @readOnly\r\n   */\r\n\r\n  this.uid = componentUtil.getUID('viewChart');\r\n  this.renderTask = createTask({\r\n    plan: renderTaskPlan,\r\n    reset: renderTaskReset\r\n  });\r\n  this.renderTask.context = {\r\n    view: this\r\n  };\r\n}\r\n\r\nChart.prototype = {\r\n  type: 'chart',\r\n\r\n  /**\r\n   * Init the chart.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  init: function (ecModel, api) {},\r\n\r\n  /**\r\n   * Render the chart.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  render: function (seriesModel, ecModel, api, payload) {},\r\n\r\n  /**\r\n   * Highlight series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  highlight: function (seriesModel, ecModel, api, payload) {\r\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\r\n  },\r\n\r\n  /**\r\n   * Downplay series or specified data item.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  downplay: function (seriesModel, ecModel, api, payload) {\r\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\r\n  },\r\n\r\n  /**\r\n   * Remove self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  remove: function (ecModel, api) {\r\n    this.group.removeAll();\r\n  },\r\n\r\n  /**\r\n   * Dispose self.\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   */\r\n  dispose: function () {},\r\n\r\n  /**\r\n   * Rendering preparation in progressive mode.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  incrementalPrepareRender: null,\r\n\r\n  /**\r\n   * Render in progressive mode.\r\n   * @param  {Object} params See taskParams in `stream/task.js`\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   */\r\n  incrementalRender: null,\r\n\r\n  /**\r\n   * Update transform directly.\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/model/Global} ecModel\r\n   * @param  {module:echarts/ExtensionAPI} api\r\n   * @param  {Object} payload\r\n   * @return {Object} {update: true}\r\n   */\r\n  updateTransform: null,\r\n\r\n  /**\r\n   * The view contains the given point.\r\n   * @interface\r\n   * @param {Array.<number>} point\r\n   * @return {boolean}\r\n   */\r\n  // containPoint: function () {}\r\n\r\n  /**\r\n   * @param {string} eventType\r\n   * @param {Object} query\r\n   * @param {module:zrender/Element} targetEl\r\n   * @param {Object} packedEvent\r\n   * @return {boolen} Pass only when return `true`.\r\n   */\r\n  filterForExposedEvent: null\r\n};\r\nvar chartProto = Chart.prototype;\r\n\r\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\r\n  this.render(seriesModel, ecModel, api, payload);\r\n};\r\n/**\r\n * Set state of single element\r\n * @param {module:zrender/Element} el\r\n * @param {string} state 'normal'|'emphasis'\r\n * @param {number} highlightDigit\r\n */\r\n\r\n\r\nfunction elSetState(el, state, highlightDigit) {\r\n  if (el) {\r\n    el.trigger(state, highlightDigit);\r\n\r\n    if (el.isGroup // Simple optimize.\r\n    && !graphicUtil.isHighDownDispatcher(el)) {\r\n      for (var i = 0, len = el.childCount(); i < len; i++) {\r\n        elSetState(el.childAt(i), state, highlightDigit);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} payload\r\n * @param {string} state 'normal'|'emphasis'\r\n */\r\n\r\n\r\nfunction toggleHighlight(data, payload, state) {\r\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n  var highlightDigit = payload && payload.highlightKey != null ? graphicUtil.getHighlightDigit(payload.highlightKey) : null;\r\n\r\n  if (dataIndex != null) {\r\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\r\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\r\n    });\r\n  } else {\r\n    data.eachItemGraphicEl(function (el) {\r\n      elSetState(el, state, highlightDigit);\r\n    });\r\n  }\r\n} // Enable Chart.extend.\r\n\r\n\r\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\r\nclazzUtil.enableClassManagement(Chart, {\r\n  registerWhenExtend: true\r\n});\r\n\r\nChart.markUpdateMethod = function (payload, methodName) {\r\n  inner(payload).updateMethod = methodName;\r\n};\r\n\r\nfunction renderTaskPlan(context) {\r\n  return renderPlanner(context.model);\r\n}\r\n\r\nfunction renderTaskReset(context) {\r\n  var seriesModel = context.model;\r\n  var ecModel = context.ecModel;\r\n  var api = context.api;\r\n  var payload = context.payload; // ???! remove updateView updateVisual\r\n\r\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\r\n  var view = context.view;\r\n  var updateMethod = payload && inner(payload).updateMethod;\r\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\r\n  // is less than progressive threshold.\r\n  : 'render';\r\n\r\n  if (methodName !== 'render') {\r\n    view[methodName](seriesModel, ecModel, api, payload);\r\n  }\r\n\r\n  return progressMethodMap[methodName];\r\n}\r\n\r\nvar progressMethodMap = {\r\n  incrementalPrepareRender: {\r\n    progress: function (params, context) {\r\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\r\n    }\r\n  },\r\n  render: {\r\n    // Put view.render in `progress` to support appendData. But in this case\r\n    // view.render should not be called in reset, otherwise it will be called\r\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\r\n    // in any cases.\r\n    forceFirstProgress: true,\r\n    progress: function (params, context) {\r\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\r\n    }\r\n  }\r\n};\r\nvar _default = Chart;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}