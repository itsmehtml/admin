{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function clearColorPalette() {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\r\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\r\n   *                 twise with the same parameters will get different result.\r\n   * @param {Object} [scope=this]\r\n   * @param {Object} [requestColorNum]\r\n   * @return {string} color string.\r\n   */\n  getColorFromPalette: function getColorFromPalette(name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/model/mixin/colorPalette.js"],"names":["_model","require","makeInner","normalizeToArray","inner","getNearestColorPalette","colors","requestColorNum","paletteNum","length","i","_default","clearColorPalette","colorIdx","colorNameMap","getColorFromPalette","name","scope","scopeFields","hasOwnProperty","defaultColorPalette","get","layeredColorPalette","colorPalette","color","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGF,MAAM,CAACE,SAAvB;AACA,IAAIC,gBAAgB,GAAGH,MAAM,CAACG,gBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAK,GAAGF,SAAS,EAArB;;AAEA,SAASG,sBAAT,CAAgCC,MAAhC,EAAwCC,eAAxC,EAAyD;AACvD,MAAIC,UAAU,GAAGF,MAAM,CAACG,MAAxB,CADuD,CACvB;;AAEhC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAIJ,MAAM,CAACI,CAAD,CAAN,CAAUD,MAAV,GAAmBF,eAAvB,EAAwC;AACtC,aAAOD,MAAM,CAACI,CAAD,CAAb;AACD;AACF;;AAED,SAAOJ,MAAM,CAACE,UAAU,GAAG,CAAd,CAAb;AACD;;AAED,IAAIG,QAAQ,GAAG;AACbC,EAAAA,iBAAiB,EAAE,6BAAY;AAC7BR,IAAAA,KAAK,CAAC,IAAD,CAAL,CAAYS,QAAZ,GAAuB,CAAvB;AACAT,IAAAA,KAAK,CAAC,IAAD,CAAL,CAAYU,YAAZ,GAA2B,EAA3B;AACD,GAJY;;AAMb;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,6BAAUC,IAAV,EAAgBC,KAAhB,EAAuBV,eAAvB,EAAwC;AAC3DU,IAAAA,KAAK,GAAGA,KAAK,IAAI,IAAjB;AACA,QAAIC,WAAW,GAAGd,KAAK,CAACa,KAAD,CAAvB;AACA,QAAIJ,QAAQ,GAAGK,WAAW,CAACL,QAAZ,IAAwB,CAAvC;AACA,QAAIC,YAAY,GAAGI,WAAW,CAACJ,YAAZ,GAA2BI,WAAW,CAACJ,YAAZ,IAA4B,EAA1E,CAJ2D,CAImB;;AAE9E,QAAIA,YAAY,CAACK,cAAb,CAA4BH,IAA5B,CAAJ,EAAuC;AACrC,aAAOF,YAAY,CAACE,IAAD,CAAnB;AACD;;AAED,QAAII,mBAAmB,GAAGjB,gBAAgB,CAAC,KAAKkB,GAAL,CAAS,OAAT,EAAkB,IAAlB,CAAD,CAA1C;AACA,QAAIC,mBAAmB,GAAG,KAAKD,GAAL,CAAS,YAAT,EAAuB,IAAvB,CAA1B;AACA,QAAIE,YAAY,GAAGhB,eAAe,IAAI,IAAnB,IAA2B,CAACe,mBAA5B,GAAkDF,mBAAlD,GAAwEf,sBAAsB,CAACiB,mBAAD,EAAsBf,eAAtB,CAAjH,CAZ2D,CAY8F;;AAEzJgB,IAAAA,YAAY,GAAGA,YAAY,IAAIH,mBAA/B;;AAEA,QAAI,CAACG,YAAD,IAAiB,CAACA,YAAY,CAACd,MAAnC,EAA2C;AACzC;AACD;;AAED,QAAIe,KAAK,GAAGD,YAAY,CAACV,QAAD,CAAxB;;AAEA,QAAIG,IAAJ,EAAU;AACRF,MAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqBQ,KAArB;AACD;;AAEDN,IAAAA,WAAW,CAACL,QAAZ,GAAuB,CAACA,QAAQ,GAAG,CAAZ,IAAiBU,YAAY,CAACd,MAArD;AACA,WAAOe,KAAP;AACD;AAzCY,CAAf;AA2CAC,MAAM,CAACC,OAAP,GAAiBf,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\nvar normalizeToArray = _model.normalizeToArray;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar inner = makeInner();\r\n\r\nfunction getNearestColorPalette(colors, requestColorNum) {\r\n  var paletteNum = colors.length; // TODO colors must be in order\r\n\r\n  for (var i = 0; i < paletteNum; i++) {\r\n    if (colors[i].length > requestColorNum) {\r\n      return colors[i];\r\n    }\r\n  }\r\n\r\n  return colors[paletteNum - 1];\r\n}\r\n\r\nvar _default = {\r\n  clearColorPalette: function () {\r\n    inner(this).colorIdx = 0;\r\n    inner(this).colorNameMap = {};\r\n  },\r\n\r\n  /**\r\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\r\n   *                 twise with the same parameters will get different result.\r\n   * @param {Object} [scope=this]\r\n   * @param {Object} [requestColorNum]\r\n   * @return {string} color string.\r\n   */\r\n  getColorFromPalette: function (name, scope, requestColorNum) {\r\n    scope = scope || this;\r\n    var scopeFields = inner(scope);\r\n    var colorIdx = scopeFields.colorIdx || 0;\r\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\r\n\r\n    if (colorNameMap.hasOwnProperty(name)) {\r\n      return colorNameMap[name];\r\n    }\r\n\r\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\r\n    var layeredColorPalette = this.get('colorLayer', true);\r\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\r\n\r\n    colorPalette = colorPalette || defaultColorPalette;\r\n\r\n    if (!colorPalette || !colorPalette.length) {\r\n      return;\r\n    }\r\n\r\n    var color = colorPalette[colorIdx];\r\n\r\n    if (name) {\r\n      colorNameMap[name] = color;\r\n    }\r\n\r\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\r\n    return color;\r\n  }\r\n};\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}