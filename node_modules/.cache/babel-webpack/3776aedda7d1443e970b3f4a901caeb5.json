{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function optionUpdated() {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisType = this.get('axisType');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisType: axisType,\n        axisLabel: axisLabel,\n        // Compatible with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    axisType: 'interval',\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/radar/RadarModel.js"],"names":["echarts","require","zrUtil","axisDefault","Model","axisModelCommonMixin","valueAxisDefault","valueAxis","defaultsShow","opt","show","defaults","RadarModel","extendComponentModel","type","optionUpdated","boundaryGap","get","splitNumber","scale","axisLine","axisTick","axisType","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","map","indicatorOpt","max","min","iNameTextStyle","color","merge","clone","name","text","nameLocation","indName","replace","model","extend","ecModel","mainType","componentIndex","getIndicatorModels","defaultOption","zlevel","z","center","radius","startAngle","shape","lineStyle","splitLine","splitArea","indicator","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar axisDefault = require(\"../axisDefault\");\r\n\r\nvar Model = require(\"../../model/Model\");\r\n\r\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar valueAxisDefault = axisDefault.valueAxis;\r\n\r\nfunction defaultsShow(opt, show) {\r\n  return zrUtil.defaults({\r\n    show: show\r\n  }, opt);\r\n}\r\n\r\nvar RadarModel = echarts.extendComponentModel({\r\n  type: 'radar',\r\n  optionUpdated: function () {\r\n    var boundaryGap = this.get('boundaryGap');\r\n    var splitNumber = this.get('splitNumber');\r\n    var scale = this.get('scale');\r\n    var axisLine = this.get('axisLine');\r\n    var axisTick = this.get('axisTick');\r\n    var axisType = this.get('axisType');\r\n    var axisLabel = this.get('axisLabel');\r\n    var nameTextStyle = this.get('name');\r\n    var showName = this.get('name.show');\r\n    var nameFormatter = this.get('name.formatter');\r\n    var nameGap = this.get('nameGap');\r\n    var triggerEvent = this.get('triggerEvent');\r\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\r\n      // PENDING\r\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\r\n        indicatorOpt.min = 0;\r\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\r\n        indicatorOpt.max = 0;\r\n      }\r\n\r\n      var iNameTextStyle = nameTextStyle;\r\n\r\n      if (indicatorOpt.color != null) {\r\n        iNameTextStyle = zrUtil.defaults({\r\n          color: indicatorOpt.color\r\n        }, nameTextStyle);\r\n      } // Use same configuration\r\n\r\n\r\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\r\n        boundaryGap: boundaryGap,\r\n        splitNumber: splitNumber,\r\n        scale: scale,\r\n        axisLine: axisLine,\r\n        axisTick: axisTick,\r\n        axisType: axisType,\r\n        axisLabel: axisLabel,\r\n        // Compatible with 2 and use text\r\n        name: indicatorOpt.text,\r\n        nameLocation: 'end',\r\n        nameGap: nameGap,\r\n        // min: 0,\r\n        nameTextStyle: iNameTextStyle,\r\n        triggerEvent: triggerEvent\r\n      }, false);\r\n\r\n      if (!showName) {\r\n        indicatorOpt.name = '';\r\n      }\r\n\r\n      if (typeof nameFormatter === 'string') {\r\n        var indName = indicatorOpt.name;\r\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\r\n      } else if (typeof nameFormatter === 'function') {\r\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\r\n      }\r\n\r\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\r\n\r\n      model.mainType = 'radar';\r\n      model.componentIndex = this.componentIndex;\r\n      return model;\r\n    }, this);\r\n\r\n    this.getIndicatorModels = function () {\r\n      return indicatorModels;\r\n    };\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '75%',\r\n    startAngle: 90,\r\n    name: {\r\n      show: true // formatter: null\r\n      // textStyle: {}\r\n\r\n    },\r\n    boundaryGap: [0, 0],\r\n    splitNumber: 5,\r\n    nameGap: 15,\r\n    scale: false,\r\n    // Polygon or circle\r\n    shape: 'polygon',\r\n    axisLine: zrUtil.merge({\r\n      lineStyle: {\r\n        color: '#bbb'\r\n      }\r\n    }, valueAxisDefault.axisLine),\r\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\r\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\r\n    axisType: 'interval',\r\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\r\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\r\n    // {text, min, max}\r\n    indicator: []\r\n  }\r\n});\r\nvar _default = RadarModel;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}