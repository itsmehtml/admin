{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\r\n   * @override\r\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/polar/RadiusAxis.js"],"names":["zrUtil","require","Axis","RadiusAxis","scale","radiusExtent","call","type","prototype","constructor","pointToData","point","clamp","polar","dim","dataToRadius","dataToCoord","radiusToData","coordToData","inherits","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,YAA3B,EAAyC;AACvCH,EAAAA,IAAI,CAACI,IAAL,CAAU,IAAV,EAAgB,QAAhB,EAA0BF,KAA1B,EAAiCC,YAAjC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAKE,IAAL,GAAY,UAAZ;AACD;;AAEDJ,UAAU,CAACK,SAAX,GAAuB;AACrBC,EAAAA,WAAW,EAAEN,UADQ;;AAGrB;AACF;AACA;AACEO,EAAAA,WAAW,EAAE,qBAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACnC,WAAO,KAAKC,KAAL,CAAWH,WAAX,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC,KAAKE,GAAL,KAAa,QAAb,GAAwB,CAAxB,GAA4B,CAAjE,CAAP;AACD,GARoB;AASrBC,EAAAA,YAAY,EAAEb,IAAI,CAACM,SAAL,CAAeQ,WATR;AAUrBC,EAAAA,YAAY,EAAEf,IAAI,CAACM,SAAL,CAAeU;AAVR,CAAvB;AAYAlB,MAAM,CAACmB,QAAP,CAAgBhB,UAAhB,EAA4BD,IAA5B;AACA,IAAIkB,QAAQ,GAAGjB,UAAf;AACAkB,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Axis = require(\"../Axis\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction RadiusAxis(scale, radiusExtent) {\r\n  Axis.call(this, 'radius', scale, radiusExtent);\r\n  /**\r\n   * Axis type\r\n   *  - 'category'\r\n   *  - 'value'\r\n   *  - 'time'\r\n   *  - 'log'\r\n   * @type {string}\r\n   */\r\n\r\n  this.type = 'category';\r\n}\r\n\r\nRadiusAxis.prototype = {\r\n  constructor: RadiusAxis,\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  pointToData: function (point, clamp) {\r\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n  },\r\n  dataToRadius: Axis.prototype.dataToCoord,\r\n  radiusToData: Axis.prototype.coordToData\r\n};\r\nzrUtil.inherits(RadiusAxis, Axis);\r\nvar _default = RadiusAxis;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}