{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger super yield import export from as default await ' + // Coffee keywords\n    'then unless until loop of by when and or is isnt not',\n    literal: // JS literals\n    'true false null undefined ' + // Coffee literals\n    'yes no on off',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }), // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]{0,3}(?=\\\\W)',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\r\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/coffeescript.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS_RE","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\r\n  var KEYWORDS = {\r\n    keyword:\r\n      // JS keywords\r\n      'in if for while finally new do return else break catch instanceof throw try this ' +\r\n      'switch continue typeof delete debugger super yield import export from as default await ' +\r\n      // Coffee keywords\r\n      'then unless until loop of by when and or is isnt not',\r\n    literal:\r\n      // JS literals\r\n      'true false null undefined ' +\r\n      // Coffee literals\r\n      'yes no on off',\r\n    built_in:\r\n      'npm require console print module global window document'\r\n  };\r\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\r\n  var SUBST = {\r\n    className: 'subst',\r\n    begin: /#\\{/, end: /}/,\r\n    keywords: KEYWORDS\r\n  };\r\n  var EXPRESSIONS = [\r\n    hljs.BINARY_NUMBER_MODE,\r\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\r\n    {\r\n      className: 'string',\r\n      variants: [\r\n        {\r\n          begin: /'''/, end: /'''/,\r\n          contains: [hljs.BACKSLASH_ESCAPE]\r\n        },\r\n        {\r\n          begin: /'/, end: /'/,\r\n          contains: [hljs.BACKSLASH_ESCAPE]\r\n        },\r\n        {\r\n          begin: /\"\"\"/, end: /\"\"\"/,\r\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\r\n        },\r\n        {\r\n          begin: /\"/, end: /\"/,\r\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'regexp',\r\n      variants: [\r\n        {\r\n          begin: '///', end: '///',\r\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\r\n        },\r\n        {\r\n          begin: '//[gim]{0,3}(?=\\\\W)',\r\n          relevance: 0\r\n        },\r\n        {\r\n          // regex can't start with space to parse x / 2 / 3 as two divisions\r\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\r\n          begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      begin: '@' + JS_IDENT_RE // relevance booster\r\n    },\r\n    {\r\n      subLanguage: 'javascript',\r\n      excludeBegin: true, excludeEnd: true,\r\n      variants: [\r\n        {\r\n          begin: '```', end: '```',\r\n        },\r\n        {\r\n          begin: '`', end: '`',\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  SUBST.contains = EXPRESSIONS;\r\n\r\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\r\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\r\n  var PARAMS = {\r\n    className: 'params',\r\n    begin: '\\\\([^\\\\(]', returnBegin: true,\r\n    /* We need another contained nameless mode to not have every nested\r\n    pair of parens to be called \"params\" */\r\n    contains: [{\r\n      begin: /\\(/, end: /\\)/,\r\n      keywords: KEYWORDS,\r\n      contains: ['self'].concat(EXPRESSIONS)\r\n    }]\r\n  };\r\n\r\n  return {\r\n    aliases: ['coffee', 'cson', 'iced'],\r\n    keywords: KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: EXPRESSIONS.concat([\r\n      hljs.COMMENT('###', '###'),\r\n      hljs.HASH_COMMENT_MODE,\r\n      {\r\n        className: 'function',\r\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\r\n        returnBegin: true,\r\n        contains: [TITLE, PARAMS]\r\n      },\r\n      {\r\n        // anonymous function start\r\n        begin: /[:\\(,=]\\s*/,\r\n        relevance: 0,\r\n        contains: [\r\n          {\r\n            className: 'function',\r\n            begin: PARAMS_RE, end: '[-=]>',\r\n            returnBegin: true,\r\n            contains: [PARAMS]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'class',\r\n        end: '$',\r\n        illegal: /[:=\"\\[\\]]/,\r\n        contains: [\r\n          {\r\n            beginKeywords: 'extends',\r\n            endsWithParent: true,\r\n            illegal: /[:=\"\\[\\]]/,\r\n            contains: [TITLE]\r\n          },\r\n          TITLE\r\n        ]\r\n      },\r\n      {\r\n        begin: JS_IDENT_RE + ':', end: ':',\r\n        returnBegin: true, returnEnd: true,\r\n        relevance: 0\r\n      }\r\n    ])\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}