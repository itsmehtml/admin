{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/boxplot/boxplotVisual.js"],"names":["borderColorQuery","_default","ecModel","api","globalColors","get","eachRawSeriesByType","seriesModel","defaulColor","seriesIndex","length","data","getData","setVisual","legendSymbol","color","isSeriesFiltered","each","idx","itemModel","getItemModel","setItemVisual","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAG,CAAC,WAAD,EAAc,aAAd,CAAvB;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,YAAY,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAnB;AACAH,EAAAA,OAAO,CAACI,mBAAR,CAA4B,SAA5B,EAAuC,UAAUC,WAAV,EAAuB;AAC5D,QAAIC,WAAW,GAAGJ,YAAY,CAACG,WAAW,CAACE,WAAZ,GAA0BL,YAAY,CAACM,MAAxC,CAA9B;AACA,QAAIC,IAAI,GAAGJ,WAAW,CAACK,OAAZ,EAAX;AACAD,IAAAA,IAAI,CAACE,SAAL,CAAe;AACbC,MAAAA,YAAY,EAAE,WADD;AAEb;AACA;AACAC,MAAAA,KAAK,EAAER,WAAW,CAACF,GAAZ,CAAgBL,gBAAhB,KAAqCQ;AAJ/B,KAAf,EAH4D,CAQxD;;AAEJ,QAAI,CAACN,OAAO,CAACc,gBAAR,CAAyBT,WAAzB,CAAL,EAA4C;AAC1CI,MAAAA,IAAI,CAACM,IAAL,CAAU,UAAUC,GAAV,EAAe;AACvB,YAAIC,SAAS,GAAGR,IAAI,CAACS,YAAL,CAAkBF,GAAlB,CAAhB;AACAP,QAAAA,IAAI,CAACU,aAAL,CAAmBH,GAAnB,EAAwB;AACtBH,UAAAA,KAAK,EAAEI,SAAS,CAACd,GAAV,CAAcL,gBAAd,EAAgC,IAAhC;AADe,SAAxB;AAGD,OALD;AAMD;AACF,GAlBD;AAmBD;;AAEDsB,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar borderColorQuery = ['itemStyle', 'borderColor'];\r\n\r\nfunction _default(ecModel, api) {\r\n  var globalColors = ecModel.get('color');\r\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\r\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\r\n    var data = seriesModel.getData();\r\n    data.setVisual({\r\n      legendSymbol: 'roundRect',\r\n      // Use name 'color' but not 'borderColor' for legend usage and\r\n      // visual coding from other component like dataRange.\r\n      color: seriesModel.get(borderColorQuery) || defaulColor\r\n    }); // Only visible series has each data be visual encoded\r\n\r\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n      data.each(function (idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        data.setItemVisual(idx, {\r\n          color: itemModel.get(borderColorQuery, true)\r\n        });\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}