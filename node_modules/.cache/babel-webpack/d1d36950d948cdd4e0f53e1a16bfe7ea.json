{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5,\n  // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Lenght of minor tick\n    length: 3,\n    // Same inside with axisTick\n    // Line style\n    lineStyle: {// Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#eee',\n      width: 1\n    }\n  }\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/coord/axisDefault.js"],"names":["zrUtil","require","defaultOption","show","zlevel","z","inverse","name","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","silent","triggerEvent","tooltip","axisPointer","axisLine","onZero","onZeroAxisIndex","lineStyle","color","width","type","symbol","symbolSize","axisTick","inside","length","axisLabel","rotate","showMinLabel","showMaxLabel","margin","fontSize","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","merge","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","minorTick","minorSplitLine","timeAxis","defaults","scale","min","max","logAxis","logBase","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar defaultOption = {\r\n  show: true,\r\n  zlevel: 0,\r\n  z: 0,\r\n  // Inverse the axis.\r\n  inverse: false,\r\n  // Axis name displayed.\r\n  name: '',\r\n  // 'start' | 'middle' | 'end'\r\n  nameLocation: 'end',\r\n  // By degree. By defualt auto rotate by nameLocation.\r\n  nameRotate: null,\r\n  nameTruncate: {\r\n    maxWidth: null,\r\n    ellipsis: '...',\r\n    placeholder: '.'\r\n  },\r\n  // Use global text style by default.\r\n  nameTextStyle: {},\r\n  // The gap between axisName and axisLine.\r\n  nameGap: 15,\r\n  // Default `false` to support tooltip.\r\n  silent: false,\r\n  // Default `false` to avoid legacy user event listener fail.\r\n  triggerEvent: false,\r\n  tooltip: {\r\n    show: false\r\n  },\r\n  axisPointer: {},\r\n  axisLine: {\r\n    show: true,\r\n    onZero: true,\r\n    onZeroAxisIndex: null,\r\n    lineStyle: {\r\n      color: '#333',\r\n      width: 1,\r\n      type: 'solid'\r\n    },\r\n    // The arrow at both ends the the axis.\r\n    symbol: ['none', 'none'],\r\n    symbolSize: [10, 15]\r\n  },\r\n  axisTick: {\r\n    show: true,\r\n    // Whether axisTick is inside the grid or outside the grid.\r\n    inside: false,\r\n    // The length of axisTick.\r\n    length: 5,\r\n    lineStyle: {\r\n      width: 1\r\n    }\r\n  },\r\n  axisLabel: {\r\n    show: true,\r\n    // Whether axisLabel is inside the grid or outside the grid.\r\n    inside: false,\r\n    rotate: 0,\r\n    // true | false | null/undefined (auto)\r\n    showMinLabel: null,\r\n    // true | false | null/undefined (auto)\r\n    showMaxLabel: null,\r\n    margin: 8,\r\n    // formatter: null,\r\n    fontSize: 12\r\n  },\r\n  splitLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      color: ['#ccc'],\r\n      width: 1,\r\n      type: 'solid'\r\n    }\r\n  },\r\n  splitArea: {\r\n    show: false,\r\n    areaStyle: {\r\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\r\n    }\r\n  }\r\n};\r\nvar axisDefault = {};\r\naxisDefault.categoryAxis = zrUtil.merge({\r\n  // The gap at both ends of the axis. For categoryAxis, boolean.\r\n  boundaryGap: true,\r\n  // Set false to faster category collection.\r\n  // Only usefull in the case like: category is\r\n  // ['2012-01-01', '2012-01-02', ...], where the input\r\n  // data has been ensured not duplicate and is large data.\r\n  // null means \"auto\":\r\n  // if axis.data provided, do not deduplication,\r\n  // else do deduplication.\r\n  deduplication: null,\r\n  // splitArea: {\r\n  // show: false\r\n  // },\r\n  splitLine: {\r\n    show: false\r\n  },\r\n  axisTick: {\r\n    // If tick is align with label when boundaryGap is true\r\n    alignWithLabel: false,\r\n    interval: 'auto'\r\n  },\r\n  axisLabel: {\r\n    interval: 'auto'\r\n  }\r\n}, defaultOption);\r\naxisDefault.valueAxis = zrUtil.merge({\r\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\r\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\r\n  boundaryGap: [0, 0],\r\n  // TODO\r\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\r\n  // Min value of the axis. can be:\r\n  // + a number\r\n  // + 'dataMin': use the min value in data.\r\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\r\n  // min: null,\r\n  // Max value of the axis. can be:\r\n  // + a number\r\n  // + 'dataMax': use the max value in data.\r\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\r\n  // max: null,\r\n  // Readonly prop, specifies start value of the range when using data zoom.\r\n  // rangeStart: null\r\n  // Readonly prop, specifies end value of the range when using data zoom.\r\n  // rangeEnd: null\r\n  // Optional value can be:\r\n  // + `false`: always include value 0.\r\n  // + `true`: the extent do not consider value 0.\r\n  // scale: false,\r\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\r\n  splitNumber: 5,\r\n  // Interval specifies the span of the ticks is mandatorily.\r\n  // interval: null\r\n  // Specify min interval when auto calculate tick interval.\r\n  // minInterval: null\r\n  // Specify max interval when auto calculate tick interval.\r\n  // maxInterval: null\r\n  minorTick: {\r\n    // Minor tick, not available for cateogry axis.\r\n    show: false,\r\n    // Split number of minor ticks. The value should be in range of (0, 100)\r\n    splitNumber: 5,\r\n    // Lenght of minor tick\r\n    length: 3,\r\n    // Same inside with axisTick\r\n    // Line style\r\n    lineStyle: {// Default to be same with axisTick\r\n    }\r\n  },\r\n  minorSplitLine: {\r\n    show: false,\r\n    lineStyle: {\r\n      color: '#eee',\r\n      width: 1\r\n    }\r\n  }\r\n}, defaultOption);\r\naxisDefault.timeAxis = zrUtil.defaults({\r\n  scale: true,\r\n  min: 'dataMin',\r\n  max: 'dataMax'\r\n}, axisDefault.valueAxis);\r\naxisDefault.logAxis = zrUtil.defaults({\r\n  scale: true,\r\n  logBase: 10\r\n}, axisDefault.valueAxis);\r\nvar _default = axisDefault;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}