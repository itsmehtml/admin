{"ast":null,"code":"module.exports = function cos(hljs) {\n  var STRINGS = {\n    className: 'string',\n    variants: [{\n      begin: '\"',\n      end: '\"',\n      contains: [{\n        // escaped\n        begin: \"\\\"\\\"\",\n        relevance: 0\n      }]\n    }]\n  };\n  var NUMBERS = {\n    className: \"number\",\n    begin: \"\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)\",\n    relevance: 0\n  };\n  var COS_KEYWORDS = 'property parameter class classmethod clientmethod extends as break ' + 'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' + 'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' + 'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' + 'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' + 'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' + 'zsync ascii'; // registered function - no need in them due to all functions are highlighted,\n  // but I'll just leave this here.\n  //\"$bit\", \"$bitcount\",\n  //\"$bitfind\", \"$bitlogic\", \"$case\", \"$char\", \"$classmethod\", \"$classname\",\n  //\"$compile\", \"$data\", \"$decimal\", \"$double\", \"$extract\", \"$factor\",\n  //\"$find\", \"$fnumber\", \"$get\", \"$increment\", \"$inumber\", \"$isobject\",\n  //\"$isvaliddouble\", \"$isvalidnum\", \"$justify\", \"$length\", \"$list\",\n  //\"$listbuild\", \"$listdata\", \"$listfind\", \"$listfromstring\", \"$listget\",\n  //\"$listlength\", \"$listnext\", \"$listsame\", \"$listtostring\", \"$listvalid\",\n  //\"$locate\", \"$match\", \"$method\", \"$name\", \"$nconvert\", \"$next\",\n  //\"$normalize\", \"$now\", \"$number\", \"$order\", \"$parameter\", \"$piece\",\n  //\"$prefetchoff\", \"$prefetchon\", \"$property\", \"$qlength\", \"$qsubscript\",\n  //\"$query\", \"$random\", \"$replace\", \"$reverse\", \"$sconvert\", \"$select\",\n  //\"$sortbegin\", \"$sortend\", \"$stack\", \"$text\", \"$translate\", \"$view\",\n  //\"$wascii\", \"$wchar\", \"$wextract\", \"$wfind\", \"$wiswide\", \"$wlength\",\n  //\"$wreverse\", \"$xecute\", \"$zabs\", \"$zarccos\", \"$zarcsin\", \"$zarctan\",\n  //\"$zcos\", \"$zcot\", \"$zcsc\", \"$zdate\", \"$zdateh\", \"$zdatetime\",\n  //\"$zdatetimeh\", \"$zexp\", \"$zhex\", \"$zln\", \"$zlog\", \"$zpower\", \"$zsec\",\n  //\"$zsin\", \"$zsqr\", \"$ztan\", \"$ztime\", \"$ztimeh\", \"$zboolean\",\n  //\"$zconvert\", \"$zcrc\", \"$zcyc\", \"$zdascii\", \"$zdchar\", \"$zf\",\n  //\"$ziswide\", \"$zlascii\", \"$zlchar\", \"$zname\", \"$zposition\", \"$zqascii\",\n  //\"$zqchar\", \"$zsearch\", \"$zseek\", \"$zstrip\", \"$zwascii\", \"$zwchar\",\n  //\"$zwidth\", \"$zwpack\", \"$zwbpack\", \"$zwunpack\", \"$zwbunpack\", \"$zzenkaku\",\n  //\"$change\", \"$mv\", \"$mvat\", \"$mvfmt\", \"$mvfmts\", \"$mviconv\",\n  //\"$mviconvs\", \"$mvinmat\", \"$mvlover\", \"$mvoconv\", \"$mvoconvs\", \"$mvraise\",\n  //\"$mvtrans\", \"$mvv\", \"$mvname\", \"$zbitand\", \"$zbitcount\", \"$zbitfind\",\n  //\"$zbitget\", \"$zbitlen\", \"$zbitnot\", \"$zbitor\", \"$zbitset\", \"$zbitstr\",\n  //\"$zbitxor\", \"$zincrement\", \"$znext\", \"$zorder\", \"$zprevious\", \"$zsort\",\n  //\"device\", \"$ecode\", \"$estack\", \"$etrap\", \"$halt\", \"$horolog\",\n  //\"$io\", \"$job\", \"$key\", \"$namespace\", \"$principal\", \"$quit\", \"$roles\",\n  //\"$storage\", \"$system\", \"$test\", \"$this\", \"$tlevel\", \"$username\",\n  //\"$x\", \"$y\", \"$za\", \"$zb\", \"$zchild\", \"$zeof\", \"$zeos\", \"$zerror\",\n  //\"$zhorolog\", \"$zio\", \"$zjob\", \"$zmode\", \"$znspace\", \"$zparent\", \"$zpi\",\n  //\"$zpos\", \"$zreference\", \"$zstorage\", \"$ztimestamp\", \"$ztimezone\",\n  //\"$ztrap\", \"$zversion\"\n\n  return {\n    case_insensitive: true,\n    aliases: [\"cos\", \"cls\"],\n    keywords: COS_KEYWORDS,\n    contains: [NUMBERS, STRINGS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: \"comment\",\n      begin: /;/,\n      end: \"$\",\n      relevance: 0\n    }, {\n      // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)\n      className: \"built_in\",\n      begin: /(?:\\$\\$?|\\.\\.)\\^?[a-zA-Z]+/\n    }, {\n      // Macro command: quit $$$OK\n      className: \"built_in\",\n      begin: /\\$\\$\\$[a-zA-Z]+/\n    }, {\n      // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer\n      className: \"built_in\",\n      begin: /%[a-z]+(?:\\.[a-z]+)*/\n    }, {\n      // Global variable: set ^globalName = 12 write ^globalName\n      className: \"symbol\",\n      begin: /\\^%?[a-zA-Z][\\w]*/\n    }, {\n      // Some control constructions: do ##class(Package.ClassName).Method(), ##super()\n      className: \"keyword\",\n      begin: /##class|##super|#define|#dim/\n    }, // sub-languages: are not fully supported by hljs by 11/15/2015\n    // left for the future implementation.\n    {\n      begin: /&sql\\(/,\n      end: /\\)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      subLanguage: \"sql\"\n    }, {\n      begin: /&(js|jscript|javascript)</,\n      end: />/,\n      excludeBegin: true,\n      excludeEnd: true,\n      subLanguage: \"javascript\"\n    }, {\n      // this brakes first and last tag, but this is the only way to embed a valid html\n      begin: /&html<\\s*</,\n      end: />\\s*>/,\n      subLanguage: \"xml\"\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/cos.js"],"names":["module","exports","cos","hljs","STRINGS","className","variants","begin","end","contains","relevance","NUMBERS","COS_KEYWORDS","case_insensitive","aliases","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","excludeBegin","excludeEnd","subLanguage"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAcC,IAAd,EAAoB;AAEnC,MAAIC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE,QADC;AAEZC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,GAAG,EAAE,GAFP;AAGEC,MAAAA,QAAQ,EAAE,CAAC;AAAE;AACXF,QAAAA,KAAK,EAAE,MADE;AAETG,QAAAA,SAAS,EAAE;AAFF,OAAD;AAHZ,KADQ;AAFE,GAAd;AAcA,MAAIC,OAAO,GAAG;AACZN,IAAAA,SAAS,EAAE,QADC;AAEZE,IAAAA,KAAK,EAAE,6BAFK;AAGZG,IAAAA,SAAS,EAAE;AAHC,GAAd;AAMA,MAAIE,YAAY,GACd,wEACA,wEADA,GAEA,wEAFA,GAGA,yEAHA,GAIA,uEAJA,GAKA,yEALA,GAMA,aAPF,CAtBmC,CA+BjC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF,SAAO;AACLC,IAAAA,gBAAgB,EAAE,IADb;AAELC,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,CAFJ;AAGLC,IAAAA,QAAQ,EAAEH,YAHL;AAILH,IAAAA,QAAQ,EAAE,CACRE,OADQ,EAERP,OAFQ,EAGRD,IAAI,CAACa,mBAHG,EAIRb,IAAI,CAACc,oBAJG,EAKR;AACEZ,MAAAA,SAAS,EAAE,SADb;AAEEE,MAAAA,KAAK,EAAE,GAFT;AAEcC,MAAAA,GAAG,EAAE,GAFnB;AAGEE,MAAAA,SAAS,EAAE;AAHb,KALQ,EAUR;AAAE;AACAL,MAAAA,SAAS,EAAE,UADb;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAVQ,EAcR;AAAE;AACAF,MAAAA,SAAS,EAAE,UADb;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAdQ,EAkBR;AAAE;AACAF,MAAAA,SAAS,EAAE,UADb;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAlBQ,EAsBR;AAAE;AACAF,MAAAA,SAAS,EAAE,QADb;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAtBQ,EA0BR;AAAE;AACAF,MAAAA,SAAS,EAAE,SADb;AAEEE,MAAAA,KAAK,EAAE;AAFT,KA1BQ,EA+BR;AACA;AACA;AACEA,MAAAA,KAAK,EAAE,QADT;AACsBC,MAAAA,GAAG,EAAE,IAD3B;AAEEU,MAAAA,YAAY,EAAE,IAFhB;AAEsBC,MAAAA,UAAU,EAAE,IAFlC;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAjCQ,EAsCR;AACEb,MAAAA,KAAK,EAAE,2BADT;AACsCC,MAAAA,GAAG,EAAE,GAD3C;AAEEU,MAAAA,YAAY,EAAE,IAFhB;AAEsBC,MAAAA,UAAU,EAAE,IAFlC;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAtCQ,EA2CR;AACE;AACAb,MAAAA,KAAK,EAAE,YAFT;AAEuBC,MAAAA,GAAG,EAAE,OAF5B;AAGEY,MAAAA,WAAW,EAAE;AAHf,KA3CQ;AAJL,GAAP;AAsDD,CA1HD","sourcesContent":["module.exports = function cos (hljs) {\r\n\r\n  var STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: '\"',\r\n        end: '\"',\r\n        contains: [{ // escaped\r\n          begin: \"\\\"\\\"\",\r\n          relevance: 0\r\n        }]\r\n      }\r\n    ]\r\n  };\r\n\r\n  var NUMBERS = {\r\n    className: \"number\",\r\n    begin: \"\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)\",\r\n    relevance: 0\r\n  };\r\n\r\n  var COS_KEYWORDS =\r\n    'property parameter class classmethod clientmethod extends as break ' +\r\n    'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' +\r\n    'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' +\r\n    'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' +\r\n    'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' +\r\n    'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' +\r\n    'zsync ascii';\r\n\r\n    // registered function - no need in them due to all functions are highlighted,\r\n    // but I'll just leave this here.\r\n\r\n    //\"$bit\", \"$bitcount\",\r\n    //\"$bitfind\", \"$bitlogic\", \"$case\", \"$char\", \"$classmethod\", \"$classname\",\r\n    //\"$compile\", \"$data\", \"$decimal\", \"$double\", \"$extract\", \"$factor\",\r\n    //\"$find\", \"$fnumber\", \"$get\", \"$increment\", \"$inumber\", \"$isobject\",\r\n    //\"$isvaliddouble\", \"$isvalidnum\", \"$justify\", \"$length\", \"$list\",\r\n    //\"$listbuild\", \"$listdata\", \"$listfind\", \"$listfromstring\", \"$listget\",\r\n    //\"$listlength\", \"$listnext\", \"$listsame\", \"$listtostring\", \"$listvalid\",\r\n    //\"$locate\", \"$match\", \"$method\", \"$name\", \"$nconvert\", \"$next\",\r\n    //\"$normalize\", \"$now\", \"$number\", \"$order\", \"$parameter\", \"$piece\",\r\n    //\"$prefetchoff\", \"$prefetchon\", \"$property\", \"$qlength\", \"$qsubscript\",\r\n    //\"$query\", \"$random\", \"$replace\", \"$reverse\", \"$sconvert\", \"$select\",\r\n    //\"$sortbegin\", \"$sortend\", \"$stack\", \"$text\", \"$translate\", \"$view\",\r\n    //\"$wascii\", \"$wchar\", \"$wextract\", \"$wfind\", \"$wiswide\", \"$wlength\",\r\n    //\"$wreverse\", \"$xecute\", \"$zabs\", \"$zarccos\", \"$zarcsin\", \"$zarctan\",\r\n    //\"$zcos\", \"$zcot\", \"$zcsc\", \"$zdate\", \"$zdateh\", \"$zdatetime\",\r\n    //\"$zdatetimeh\", \"$zexp\", \"$zhex\", \"$zln\", \"$zlog\", \"$zpower\", \"$zsec\",\r\n    //\"$zsin\", \"$zsqr\", \"$ztan\", \"$ztime\", \"$ztimeh\", \"$zboolean\",\r\n    //\"$zconvert\", \"$zcrc\", \"$zcyc\", \"$zdascii\", \"$zdchar\", \"$zf\",\r\n    //\"$ziswide\", \"$zlascii\", \"$zlchar\", \"$zname\", \"$zposition\", \"$zqascii\",\r\n    //\"$zqchar\", \"$zsearch\", \"$zseek\", \"$zstrip\", \"$zwascii\", \"$zwchar\",\r\n    //\"$zwidth\", \"$zwpack\", \"$zwbpack\", \"$zwunpack\", \"$zwbunpack\", \"$zzenkaku\",\r\n    //\"$change\", \"$mv\", \"$mvat\", \"$mvfmt\", \"$mvfmts\", \"$mviconv\",\r\n    //\"$mviconvs\", \"$mvinmat\", \"$mvlover\", \"$mvoconv\", \"$mvoconvs\", \"$mvraise\",\r\n    //\"$mvtrans\", \"$mvv\", \"$mvname\", \"$zbitand\", \"$zbitcount\", \"$zbitfind\",\r\n    //\"$zbitget\", \"$zbitlen\", \"$zbitnot\", \"$zbitor\", \"$zbitset\", \"$zbitstr\",\r\n    //\"$zbitxor\", \"$zincrement\", \"$znext\", \"$zorder\", \"$zprevious\", \"$zsort\",\r\n    //\"device\", \"$ecode\", \"$estack\", \"$etrap\", \"$halt\", \"$horolog\",\r\n    //\"$io\", \"$job\", \"$key\", \"$namespace\", \"$principal\", \"$quit\", \"$roles\",\r\n    //\"$storage\", \"$system\", \"$test\", \"$this\", \"$tlevel\", \"$username\",\r\n    //\"$x\", \"$y\", \"$za\", \"$zb\", \"$zchild\", \"$zeof\", \"$zeos\", \"$zerror\",\r\n    //\"$zhorolog\", \"$zio\", \"$zjob\", \"$zmode\", \"$znspace\", \"$zparent\", \"$zpi\",\r\n    //\"$zpos\", \"$zreference\", \"$zstorage\", \"$ztimestamp\", \"$ztimezone\",\r\n    //\"$ztrap\", \"$zversion\"\r\n\r\n  return {\r\n    case_insensitive: true,\r\n    aliases: [\"cos\", \"cls\"],\r\n    keywords: COS_KEYWORDS,\r\n    contains: [\r\n      NUMBERS,\r\n      STRINGS,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: \"comment\",\r\n        begin: /;/, end: \"$\",\r\n        relevance: 0\r\n      },\r\n      { // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)\r\n        className: \"built_in\",\r\n        begin: /(?:\\$\\$?|\\.\\.)\\^?[a-zA-Z]+/\r\n      },\r\n      { // Macro command: quit $$$OK\r\n        className: \"built_in\",\r\n        begin: /\\$\\$\\$[a-zA-Z]+/\r\n      },\r\n      { // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer\r\n        className: \"built_in\",\r\n        begin: /%[a-z]+(?:\\.[a-z]+)*/\r\n      },\r\n      { // Global variable: set ^globalName = 12 write ^globalName\r\n        className: \"symbol\",\r\n        begin: /\\^%?[a-zA-Z][\\w]*/\r\n      },\r\n      { // Some control constructions: do ##class(Package.ClassName).Method(), ##super()\r\n        className: \"keyword\",\r\n        begin: /##class|##super|#define|#dim/\r\n      },\r\n\r\n      // sub-languages: are not fully supported by hljs by 11/15/2015\r\n      // left for the future implementation.\r\n      {\r\n        begin: /&sql\\(/,    end: /\\)/,\r\n        excludeBegin: true, excludeEnd: true,\r\n        subLanguage: \"sql\"\r\n      },\r\n      {\r\n        begin: /&(js|jscript|javascript)</, end: />/,\r\n        excludeBegin: true, excludeEnd: true,\r\n        subLanguage: \"javascript\"\r\n      },\r\n      {\r\n        // this brakes first and last tag, but this is the only way to embed a valid html\r\n        begin: /&html<\\s*</, end: />\\s*>/,\r\n        subLanguage: \"xml\"\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}