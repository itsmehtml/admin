{"ast":null,"code":"module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' + 'for function here if import in inline never new override package private get set ' + 'public return static super switch this throw trace try typedef untyped using var while ' + HAXE_BASIC_TYPES,\n      built_in: 'trace this',\n      literal: 'true false null _'\n    },\n    contains: [{\n      className: 'string',\n      // interpolate-able strings\n      begin: '\\'',\n      end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE, {\n        className: 'subst',\n        // interpolation\n        begin: '\\\\$\\\\{',\n        end: '\\\\}'\n      }, {\n        className: 'subst',\n        // interpolation\n        begin: '\\\\$',\n        end: '\\\\W}'\n      }]\n    }, hljs.QUOTE_STRING_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.C_NUMBER_MODE, {\n      className: 'meta',\n      // compiler meta\n      begin: '@:',\n      end: '$'\n    }, {\n      className: 'meta',\n      // compiler conditionals\n      begin: '#',\n      end: '$',\n      keywords: {\n        'meta-keyword': 'if else elseif end error'\n      }\n    }, {\n      className: 'type',\n      // function types\n      begin: ':[ \\t]*',\n      end: '[^A-Za-z0-9_ \\t\\\\->]',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    }, {\n      className: 'type',\n      // types\n      begin: ':[ \\t]*',\n      end: '\\\\W',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      className: 'type',\n      // instantiation\n      begin: 'new *',\n      end: '\\\\W',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      className: 'class',\n      // enums\n      beginKeywords: 'enum',\n      end: '\\\\{',\n      contains: [hljs.TITLE_MODE]\n    }, {\n      className: 'class',\n      // abstracts\n      beginKeywords: 'abstract',\n      end: '[\\\\{$]',\n      contains: [{\n        className: 'type',\n        begin: '\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true\n      }, {\n        className: 'type',\n        begin: 'from +',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      }, {\n        className: 'type',\n        begin: 'to +',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      }, hljs.TITLE_MODE],\n      keywords: {\n        keyword: 'abstract from to'\n      }\n    }, {\n      className: 'class',\n      // classes\n      begin: '\\\\b(class|interface) +',\n      end: '[\\\\{$]',\n      excludeEnd: true,\n      keywords: 'class interface',\n      contains: [{\n        className: 'keyword',\n        begin: '\\\\b(extends|implements) +',\n        keywords: 'extends implements',\n        contains: [{\n          className: 'type',\n          begin: hljs.IDENT_RE,\n          relevance: 0\n        }]\n      }, hljs.TITLE_MODE]\n    }, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: '\\\\(',\n      excludeEnd: true,\n      illegal: '\\\\S',\n      contains: [hljs.TITLE_MODE]\n    }],\n    illegal: /<\\//\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/highlight.js/lib/languages/haxe.js"],"names":["module","exports","hljs","IDENT_RE","IDENT_FUNC_RETURN_TYPE_RE","HAXE_BASIC_TYPES","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","illegal"],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\r\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\r\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\r\n\r\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\r\n\r\n  return {\r\n    aliases: ['hx'],\r\n    keywords: {\r\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\r\n               'for function here if import in inline never new override package private get set ' +\r\n               'public return static super switch this throw trace try typedef untyped using var while ' +\r\n               HAXE_BASIC_TYPES,\r\n      built_in:\r\n        'trace this',\r\n      literal:\r\n        'true false null _'\r\n    },\r\n    contains: [\r\n      { className: 'string', // interpolate-able strings\r\n        begin: '\\'', end: '\\'',\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          { className: 'subst', // interpolation\r\n            begin: '\\\\$\\\\{', end: '\\\\}'\r\n          },\r\n          { className: 'subst', // interpolation\r\n            begin: '\\\\$', end: '\\\\W}'\r\n          }\r\n        ]\r\n      },\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n      { className: 'meta', // compiler meta\r\n        begin: '@:', end: '$'\r\n      },\r\n      { className: 'meta', // compiler conditionals\r\n        begin: '#', end: '$',\r\n        keywords: {'meta-keyword': 'if else elseif end error'}\r\n      },\r\n      { className: 'type', // function types\r\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\r\n        excludeBegin: true, excludeEnd: true,\r\n        relevance: 0\r\n      },\r\n      { className: 'type', // types\r\n        begin: ':[ \\t]*', end: '\\\\W',\r\n        excludeBegin: true, excludeEnd: true\r\n      },\r\n      { className: 'type', // instantiation\r\n        begin: 'new *', end: '\\\\W',\r\n        excludeBegin: true, excludeEnd: true\r\n      },\r\n      { className: 'class', // enums\r\n        beginKeywords: 'enum', end: '\\\\{',\r\n        contains: [\r\n          hljs.TITLE_MODE\r\n        ]\r\n      },\r\n      { className: 'class', // abstracts\r\n        beginKeywords: 'abstract', end: '[\\\\{$]',\r\n        contains: [\r\n          { className: 'type',\r\n            begin: '\\\\(', end: '\\\\)',\r\n            excludeBegin: true, excludeEnd: true\r\n          },\r\n          { className: 'type',\r\n            begin: 'from +', end: '\\\\W',\r\n            excludeBegin: true, excludeEnd: true\r\n          },\r\n          { className: 'type',\r\n            begin: 'to +', end: '\\\\W',\r\n            excludeBegin: true, excludeEnd: true\r\n          },\r\n          hljs.TITLE_MODE\r\n        ],\r\n        keywords: {\r\n          keyword: 'abstract from to'\r\n        }\r\n      },\r\n      { className: 'class', // classes\r\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\r\n        keywords: 'class interface',\r\n        contains: [\r\n          { className: 'keyword',\r\n            begin: '\\\\b(extends|implements) +',\r\n            keywords: 'extends implements',\r\n            contains: [\r\n              {\r\n                className: 'type',\r\n                begin: hljs.IDENT_RE,\r\n                relevance: 0\r\n              }\r\n            ]\r\n          },\r\n          hljs.TITLE_MODE\r\n        ]\r\n      },\r\n      { className: 'function',\r\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\r\n        illegal: '\\\\S',\r\n        contains: [\r\n          hljs.TITLE_MODE\r\n        ]\r\n      }\r\n    ],\r\n    illegal: /<\\//\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}