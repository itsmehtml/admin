{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @class\r\n * @param {Object|DataDimensionInfo} [opt] All of the fields will be shallow copied.\r\n */\n\n\nfunction DataDimensionInfo(opt) {\n  if (opt != null) {\n    zrUtil.extend(this, opt);\n  }\n  /**\r\n   * Dimension name.\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\n  // this.name;\n\n  /**\r\n   * The origin name in dimsDef, see source helper.\r\n   * If displayName given, the tooltip will displayed vertically.\r\n   * Optional.\r\n   * @type {string}\r\n   */\n  // this.displayName;\n\n  /**\r\n   * Which coordSys dimension this dimension mapped to.\r\n   * A `coordDim` can be a \"coordSysDim\" that the coordSys required\r\n   * (for example, an item in `coordSysDims` of `model/referHelper#CoordSysInfo`),\r\n   * or an generated \"extra coord name\" if does not mapped to any \"coordSysDim\"\r\n   * (That is determined by whether `isExtraCoord` is `true`).\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\n  // this.coordDim;\n\n  /**\r\n   * The index of this dimension in `series.encode[coordDim]`.\r\n   * Mandatory.\r\n   * @type {number}\r\n   */\n  // this.coordDimIndex;\n\n  /**\r\n   * Dimension type. The enumerable values are the key of\r\n   * `dataCtors` of `data/List`.\r\n   * Optional.\r\n   * @type {string}\r\n   */\n  // this.type;\n\n  /**\r\n   * This index of this dimension info in `data/List#_dimensionInfos`.\r\n   * Mandatory after added to `data/List`.\r\n   * @type {number}\r\n   */\n  // this.index;\n\n  /**\r\n   * The format of `otherDims` is:\r\n   * ```js\r\n   * {\r\n   *     tooltip: number optional,\r\n   *     label: number optional,\r\n   *     itemName: number optional,\r\n   *     seriesName: number optional,\r\n   * }\r\n   * ```\r\n   *\r\n   * A `series.encode` can specified these fields:\r\n   * ```js\r\n   * encode: {\r\n   *     // \"3, 1, 5\" is the index of data dimension.\r\n   *     tooltip: [3, 1, 5],\r\n   *     label: [0, 3],\r\n   *     ...\r\n   * }\r\n   * ```\r\n   * `otherDims` is the parse result of the `series.encode` above, like:\r\n   * ```js\r\n   * // Suppose the index of this data dimension is `3`.\r\n   * this.otherDims = {\r\n   *     // `3` is at the index `0` of the `encode.tooltip`\r\n   *     tooltip: 0,\r\n   *     // `3` is at the index `1` of the `encode.tooltip`\r\n   *     label: 1\r\n   * };\r\n   * ```\r\n   *\r\n   * This prop should never be `null`/`undefined` after initialized.\r\n   * @type {Object}\r\n   */\n\n\n  this.otherDims = {};\n  /**\r\n   * Be `true` if this dimension is not mapped to any \"coordSysDim\" that the\r\n   * \"coordSys\" required.\r\n   * Mandatory.\r\n   * @type {boolean}\r\n   */\n  // this.isExtraCoord;\n\n  /**\r\n   * @type {module:data/OrdinalMeta}\r\n   */\n  // this.ordinalMeta;\n\n  /**\r\n   * Whether to create inverted indices.\r\n   * @type {boolean}\r\n   */\n  // this.createInvertedIndices;\n}\n\n;\nvar _default = DataDimensionInfo;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/data/DataDimensionInfo.js"],"names":["zrUtil","require","DataDimensionInfo","opt","extend","otherDims","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACfH,IAAAA,MAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,GAApB;AACD;AACD;AACF;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,OAAKE,SAAL,GAAiB,EAAjB;AACA;AACF;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACE;;AAEA;AACF;AACA;AACA;AACE;AACD;;AAED;AACA,IAAIC,QAAQ,GAAGJ,iBAAf;AACAK,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @class\r\n * @param {Object|DataDimensionInfo} [opt] All of the fields will be shallow copied.\r\n */\r\nfunction DataDimensionInfo(opt) {\r\n  if (opt != null) {\r\n    zrUtil.extend(this, opt);\r\n  }\r\n  /**\r\n   * Dimension name.\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\r\n  // this.name;\r\n\r\n  /**\r\n   * The origin name in dimsDef, see source helper.\r\n   * If displayName given, the tooltip will displayed vertically.\r\n   * Optional.\r\n   * @type {string}\r\n   */\r\n  // this.displayName;\r\n\r\n  /**\r\n   * Which coordSys dimension this dimension mapped to.\r\n   * A `coordDim` can be a \"coordSysDim\" that the coordSys required\r\n   * (for example, an item in `coordSysDims` of `model/referHelper#CoordSysInfo`),\r\n   * or an generated \"extra coord name\" if does not mapped to any \"coordSysDim\"\r\n   * (That is determined by whether `isExtraCoord` is `true`).\r\n   * Mandatory.\r\n   * @type {string}\r\n   */\r\n  // this.coordDim;\r\n\r\n  /**\r\n   * The index of this dimension in `series.encode[coordDim]`.\r\n   * Mandatory.\r\n   * @type {number}\r\n   */\r\n  // this.coordDimIndex;\r\n\r\n  /**\r\n   * Dimension type. The enumerable values are the key of\r\n   * `dataCtors` of `data/List`.\r\n   * Optional.\r\n   * @type {string}\r\n   */\r\n  // this.type;\r\n\r\n  /**\r\n   * This index of this dimension info in `data/List#_dimensionInfos`.\r\n   * Mandatory after added to `data/List`.\r\n   * @type {number}\r\n   */\r\n  // this.index;\r\n\r\n  /**\r\n   * The format of `otherDims` is:\r\n   * ```js\r\n   * {\r\n   *     tooltip: number optional,\r\n   *     label: number optional,\r\n   *     itemName: number optional,\r\n   *     seriesName: number optional,\r\n   * }\r\n   * ```\r\n   *\r\n   * A `series.encode` can specified these fields:\r\n   * ```js\r\n   * encode: {\r\n   *     // \"3, 1, 5\" is the index of data dimension.\r\n   *     tooltip: [3, 1, 5],\r\n   *     label: [0, 3],\r\n   *     ...\r\n   * }\r\n   * ```\r\n   * `otherDims` is the parse result of the `series.encode` above, like:\r\n   * ```js\r\n   * // Suppose the index of this data dimension is `3`.\r\n   * this.otherDims = {\r\n   *     // `3` is at the index `0` of the `encode.tooltip`\r\n   *     tooltip: 0,\r\n   *     // `3` is at the index `1` of the `encode.tooltip`\r\n   *     label: 1\r\n   * };\r\n   * ```\r\n   *\r\n   * This prop should never be `null`/`undefined` after initialized.\r\n   * @type {Object}\r\n   */\r\n\r\n\r\n  this.otherDims = {};\r\n  /**\r\n   * Be `true` if this dimension is not mapped to any \"coordSysDim\" that the\r\n   * \"coordSys\" required.\r\n   * Mandatory.\r\n   * @type {boolean}\r\n   */\r\n  // this.isExtraCoord;\r\n\r\n  /**\r\n   * @type {module:data/OrdinalMeta}\r\n   */\r\n  // this.ordinalMeta;\r\n\r\n  /**\r\n   * Whether to create inverted indices.\r\n   * @type {boolean}\r\n   */\r\n  // this.createInvertedIndices;\r\n}\r\n\r\n;\r\nvar _default = DataDimensionInfo;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}