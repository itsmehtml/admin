{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function reset(seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/parallel/parallelVisual.js"],"names":["opacityAccessPath","_default","seriesType","reset","seriesModel","ecModel","api","itemStyleModel","getModel","lineStyleModel","globalColors","get","color","seriesIndex","length","inactiveOpacity","activeOpacity","lineStyle","getLineStyle","coordSys","coordinateSystem","data","getData","opacityMap","normal","opacity","active","inactive","setVisual","progress","params","eachActiveState","activeState","dataIndex","hasItemOption","itemOpacity","getItemModel","setItemVisual","start","end","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,iBAAiB,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,CAAxB;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE,UADC;AAEbC,EAAAA,KAAK,EAAE,eAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC1C,QAAIC,cAAc,GAAGH,WAAW,CAACI,QAAZ,CAAqB,WAArB,CAArB;AACA,QAAIC,cAAc,GAAGL,WAAW,CAACI,QAAZ,CAAqB,WAArB,CAArB;AACA,QAAIE,YAAY,GAAGL,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAnB;AACA,QAAIC,KAAK,GAAGH,cAAc,CAACE,GAAf,CAAmB,OAAnB,KAA+BJ,cAAc,CAACI,GAAf,CAAmB,OAAnB,CAA/B,IAA8DD,YAAY,CAACN,WAAW,CAACS,WAAZ,GAA0BH,YAAY,CAACI,MAAxC,CAAtF;AACA,QAAIC,eAAe,GAAGX,WAAW,CAACO,GAAZ,CAAgB,iBAAhB,CAAtB;AACA,QAAIK,aAAa,GAAGZ,WAAW,CAACO,GAAZ,CAAgB,eAAhB,CAApB;AACA,QAAIM,SAAS,GAAGb,WAAW,CAACI,QAAZ,CAAqB,WAArB,EAAkCU,YAAlC,EAAhB;AACA,QAAIC,QAAQ,GAAGf,WAAW,CAACgB,gBAA3B;AACA,QAAIC,IAAI,GAAGjB,WAAW,CAACkB,OAAZ,EAAX;AACA,QAAIC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,OADH;AAEfC,MAAAA,MAAM,EAAEV,aAFO;AAGfW,MAAAA,QAAQ,EAAEZ;AAHK,KAAjB;AAKAM,IAAAA,IAAI,CAACO,SAAL,CAAe,OAAf,EAAwBhB,KAAxB;;AAEA,aAASiB,QAAT,CAAkBC,MAAlB,EAA0BT,IAA1B,EAAgC;AAC9BF,MAAAA,QAAQ,CAACY,eAAT,CAAyBV,IAAzB,EAA+B,UAAUW,WAAV,EAAuBC,SAAvB,EAAkC;AAC/D,YAAIR,OAAO,GAAGF,UAAU,CAACS,WAAD,CAAxB;;AAEA,YAAIA,WAAW,KAAK,QAAhB,IAA4BX,IAAI,CAACa,aAArC,EAAoD;AAClD,cAAIC,WAAW,GAAGd,IAAI,CAACe,YAAL,CAAkBH,SAAlB,EAA6BtB,GAA7B,CAAiCX,iBAAjC,EAAoD,IAApD,CAAlB;AACAmC,UAAAA,WAAW,IAAI,IAAf,KAAwBV,OAAO,GAAGU,WAAlC;AACD;;AAEDd,QAAAA,IAAI,CAACgB,aAAL,CAAmBJ,SAAnB,EAA8B,SAA9B,EAAyCR,OAAzC;AACD,OATD,EASGK,MAAM,CAACQ,KATV,EASiBR,MAAM,CAACS,GATxB;AAUD;;AAED,WAAO;AACLV,MAAAA,QAAQ,EAAEA;AADL,KAAP;AAGD;AAnCY,CAAf;AAqCAW,MAAM,CAACC,OAAP,GAAiBxC,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\r\nvar _default = {\r\n  seriesType: 'parallel',\r\n  reset: function (seriesModel, ecModel, api) {\r\n    var itemStyleModel = seriesModel.getModel('itemStyle');\r\n    var lineStyleModel = seriesModel.getModel('lineStyle');\r\n    var globalColors = ecModel.get('color');\r\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\r\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\r\n    var activeOpacity = seriesModel.get('activeOpacity');\r\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var data = seriesModel.getData();\r\n    var opacityMap = {\r\n      normal: lineStyle.opacity,\r\n      active: activeOpacity,\r\n      inactive: inactiveOpacity\r\n    };\r\n    data.setVisual('color', color);\r\n\r\n    function progress(params, data) {\r\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\r\n        var opacity = opacityMap[activeState];\r\n\r\n        if (activeState === 'normal' && data.hasItemOption) {\r\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\r\n          itemOpacity != null && (opacity = itemOpacity);\r\n        }\r\n\r\n        data.setItemVisual(dataIndex, 'opacity', opacity);\r\n      }, params.start, params.end);\r\n    }\r\n\r\n    return {\r\n      progress: progress\r\n    };\r\n  }\r\n};\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}