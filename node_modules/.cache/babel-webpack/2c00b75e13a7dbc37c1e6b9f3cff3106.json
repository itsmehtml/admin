{"ast":null,"code":"/**\r\n * Event Mixin\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\nvar arrySlice = Array.prototype.slice;\n/**\r\n * Event dispatcher.\r\n *\r\n * @alias module:zrender/mixin/Eventful\r\n * @constructor\r\n * @param {Object} [eventProcessor] The object eventProcessor is the scope when\r\n *        `eventProcessor.xxx` called.\r\n * @param {Function} [eventProcessor.normalizeQuery]\r\n *        param: {string|Object} Raw query.\r\n *        return: {string|Object} Normalized query.\r\n * @param {Function} [eventProcessor.filter] Event will be dispatched only\r\n *        if it returns `true`.\r\n *        param: {string} eventType\r\n *        param: {string|Object} query\r\n *        return: {boolean}\r\n * @param {Function} [eventProcessor.afterTrigger] Called after all handlers called.\r\n *        param: {string} eventType\r\n */\n\nvar Eventful = function Eventful(eventProcessor) {\n  this._$handlers = {};\n  this._$eventProcessor = eventProcessor;\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\r\n   * The handler can only be triggered once, then removed.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} context\r\n   */\n  one: function one(event, query, handler, context) {\n    return _on(this, event, query, handler, context, true);\n  },\n\n  /**\r\n   * Bind a handler.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} [context]\r\n   */\n  on: function on(event, query, handler, context) {\n    return _on(this, event, query, handler, context, false);\n  },\n\n  /**\r\n   * Whether any handler has bound.\r\n   *\r\n   * @param  {string}  event\r\n   * @return {boolean}\r\n   */\n  isSilent: function isSilent(event) {\n    var _h = this._$handlers;\n    return !_h[event] || !_h[event].length;\n  },\n\n  /**\r\n   * Unbind a event.\r\n   *\r\n   * @param {string} [event] The event name.\r\n   *        If no `event` input, \"off\" all listeners.\r\n   * @param {Function} [handler] The event handler.\r\n   *        If no `handler` input, \"off\" all listeners of the `event`.\r\n   */\n  off: function off(event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i].h !== handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Dispatch a event.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\n  trigger: function trigger(type) {\n    var _h = this._$handlers[type];\n    var eventProcessor = this._$eventProcessor;\n\n    if (_h) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        var hItem = _h[i];\n\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\n          i++;\n          continue;\n        } // Optimize advise from backbone\n\n\n        switch (argLen) {\n          case 1:\n            hItem.h.call(hItem.ctx);\n            break;\n\n          case 2:\n            hItem.h.call(hItem.ctx, args[1]);\n            break;\n\n          case 3:\n            hItem.h.call(hItem.ctx, args[1], args[2]);\n            break;\n\n          default:\n            // have more than 2 given arguments\n            hItem.h.apply(hItem.ctx, args);\n            break;\n        }\n\n        if (hItem.one) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\n    return this;\n  },\n\n  /**\r\n   * Dispatch a event with context, which is specified at the last parameter.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\n  triggerWithContext: function triggerWithContext(type) {\n    var _h = this._$handlers[type];\n    var eventProcessor = this._$eventProcessor;\n\n    if (_h) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        var hItem = _h[i];\n\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\n          i++;\n          continue;\n        } // Optimize advise from backbone\n\n\n        switch (argLen) {\n          case 1:\n            hItem.h.call(ctx);\n            break;\n\n          case 2:\n            hItem.h.call(ctx, args[1]);\n            break;\n\n          case 3:\n            hItem.h.call(ctx, args[1], args[2]);\n            break;\n\n          default:\n            // have more than 2 given arguments\n            hItem.h.apply(ctx, args);\n            break;\n        }\n\n        if (hItem.one) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\n    return this;\n  }\n};\n\nfunction normalizeQuery(host, query) {\n  var eventProcessor = host._$eventProcessor;\n\n  if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\n    query = eventProcessor.normalizeQuery(query);\n  }\n\n  return query;\n}\n\nfunction _on(eventful, event, query, handler, context, isOnce) {\n  var _h = eventful._$handlers;\n\n  if (typeof query === 'function') {\n    context = handler;\n    handler = query;\n    query = null;\n  }\n\n  if (!handler || !event) {\n    return eventful;\n  }\n\n  query = normalizeQuery(eventful, query);\n\n  if (!_h[event]) {\n    _h[event] = [];\n  }\n\n  for (var i = 0; i < _h[event].length; i++) {\n    if (_h[event][i].h === handler) {\n      return eventful;\n    }\n  }\n\n  var wrap = {\n    h: handler,\n    one: isOnce,\n    query: query,\n    ctx: context || eventful,\n    // FIXME\n    // Do not publish this feature util it is proved that it makes sense.\n    callAtLast: handler.zrEventfulCallAtLast\n  };\n  var lastIndex = _h[event].length - 1;\n  var lastWrap = _h[event][lastIndex];\n  lastWrap && lastWrap.callAtLast ? _h[event].splice(lastIndex, 0, wrap) : _h[event].push(wrap);\n  return eventful;\n} // ----------------------\n// The events in zrender\n// ----------------------\n\n/**\r\n * @event module:zrender/mixin/Eventful#onclick\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseover\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseout\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmousemove\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmousewheel\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmousedown\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseup\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondrag\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondragstart\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondragend\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondragenter\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondragleave\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondragover\r\n * @type {Function}\r\n * @default null\r\n */\n\n/**\r\n * @event module:zrender/mixin/Eventful#ondrop\r\n * @type {Function}\r\n * @default null\r\n */\n\n\nvar _default = Eventful;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/zrender/lib/mixin/Eventful.js"],"names":["arrySlice","Array","prototype","slice","Eventful","eventProcessor","_$handlers","_$eventProcessor","constructor","one","event","query","handler","context","on","isSilent","_h","length","off","newList","i","l","h","push","trigger","type","args","arguments","argLen","call","len","hItem","filter","ctx","apply","splice","afterTrigger","triggerWithContext","normalizeQuery","host","eventful","isOnce","wrap","callAtLast","zrEventfulCallAtLast","lastIndex","lastWrap","_default","module","exports"],"mappings":"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IA,QAAQ,CAACH,UAArB,GAAkC3B,EAAE,CAACN,KAAD,CAAF,CAAUyB,MAAV,CAAiBU,SAAjB,EAA4B,CAA5B,EAA+BH,IAA/B,CAAlC,GAAyE1B,EAAE,CAACN,KAAD,CAAF,CAAUa,IAAV,CAAemB,IAAf,CAAzE;AACA,SAAOF,QAAP;AACD,C,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,IAAIO,QAAQ,GAAG3C,QAAf;AACA4C,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["/**\r\n * Event Mixin\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\nvar arrySlice = Array.prototype.slice;\r\n/**\r\n * Event dispatcher.\r\n *\r\n * @alias module:zrender/mixin/Eventful\r\n * @constructor\r\n * @param {Object} [eventProcessor] The object eventProcessor is the scope when\r\n *        `eventProcessor.xxx` called.\r\n * @param {Function} [eventProcessor.normalizeQuery]\r\n *        param: {string|Object} Raw query.\r\n *        return: {string|Object} Normalized query.\r\n * @param {Function} [eventProcessor.filter] Event will be dispatched only\r\n *        if it returns `true`.\r\n *        param: {string} eventType\r\n *        param: {string|Object} query\r\n *        return: {boolean}\r\n * @param {Function} [eventProcessor.afterTrigger] Called after all handlers called.\r\n *        param: {string} eventType\r\n */\r\n\r\nvar Eventful = function (eventProcessor) {\r\n  this._$handlers = {};\r\n  this._$eventProcessor = eventProcessor;\r\n};\r\n\r\nEventful.prototype = {\r\n  constructor: Eventful,\r\n\r\n  /**\r\n   * The handler can only be triggered once, then removed.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} context\r\n   */\r\n  one: function (event, query, handler, context) {\r\n    return on(this, event, query, handler, context, true);\r\n  },\r\n\r\n  /**\r\n   * Bind a handler.\r\n   *\r\n   * @param {string} event The event name.\r\n   * @param {string|Object} [query] Condition used on event filter.\r\n   * @param {Function} handler The event handler.\r\n   * @param {Object} [context]\r\n   */\r\n  on: function (event, query, handler, context) {\r\n    return on(this, event, query, handler, context, false);\r\n  },\r\n\r\n  /**\r\n   * Whether any handler has bound.\r\n   *\r\n   * @param  {string}  event\r\n   * @return {boolean}\r\n   */\r\n  isSilent: function (event) {\r\n    var _h = this._$handlers;\r\n    return !_h[event] || !_h[event].length;\r\n  },\r\n\r\n  /**\r\n   * Unbind a event.\r\n   *\r\n   * @param {string} [event] The event name.\r\n   *        If no `event` input, \"off\" all listeners.\r\n   * @param {Function} [handler] The event handler.\r\n   *        If no `handler` input, \"off\" all listeners of the `event`.\r\n   */\r\n  off: function (event, handler) {\r\n    var _h = this._$handlers;\r\n\r\n    if (!event) {\r\n      this._$handlers = {};\r\n      return this;\r\n    }\r\n\r\n    if (handler) {\r\n      if (_h[event]) {\r\n        var newList = [];\r\n\r\n        for (var i = 0, l = _h[event].length; i < l; i++) {\r\n          if (_h[event][i].h !== handler) {\r\n            newList.push(_h[event][i]);\r\n          }\r\n        }\r\n\r\n        _h[event] = newList;\r\n      }\r\n\r\n      if (_h[event] && _h[event].length === 0) {\r\n        delete _h[event];\r\n      }\r\n    } else {\r\n      delete _h[event];\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Dispatch a event.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\r\n  trigger: function (type) {\r\n    var _h = this._$handlers[type];\r\n    var eventProcessor = this._$eventProcessor;\r\n\r\n    if (_h) {\r\n      var args = arguments;\r\n      var argLen = args.length;\r\n\r\n      if (argLen > 3) {\r\n        args = arrySlice.call(args, 1);\r\n      }\r\n\r\n      var len = _h.length;\r\n\r\n      for (var i = 0; i < len;) {\r\n        var hItem = _h[i];\r\n\r\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\r\n          i++;\r\n          continue;\r\n        } // Optimize advise from backbone\r\n\r\n\r\n        switch (argLen) {\r\n          case 1:\r\n            hItem.h.call(hItem.ctx);\r\n            break;\r\n\r\n          case 2:\r\n            hItem.h.call(hItem.ctx, args[1]);\r\n            break;\r\n\r\n          case 3:\r\n            hItem.h.call(hItem.ctx, args[1], args[2]);\r\n            break;\r\n\r\n          default:\r\n            // have more than 2 given arguments\r\n            hItem.h.apply(hItem.ctx, args);\r\n            break;\r\n        }\r\n\r\n        if (hItem.one) {\r\n          _h.splice(i, 1);\r\n\r\n          len--;\r\n        } else {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Dispatch a event with context, which is specified at the last parameter.\r\n   *\r\n   * @param {string} type The event name.\r\n   */\r\n  triggerWithContext: function (type) {\r\n    var _h = this._$handlers[type];\r\n    var eventProcessor = this._$eventProcessor;\r\n\r\n    if (_h) {\r\n      var args = arguments;\r\n      var argLen = args.length;\r\n\r\n      if (argLen > 4) {\r\n        args = arrySlice.call(args, 1, args.length - 1);\r\n      }\r\n\r\n      var ctx = args[args.length - 1];\r\n      var len = _h.length;\r\n\r\n      for (var i = 0; i < len;) {\r\n        var hItem = _h[i];\r\n\r\n        if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\r\n          i++;\r\n          continue;\r\n        } // Optimize advise from backbone\r\n\r\n\r\n        switch (argLen) {\r\n          case 1:\r\n            hItem.h.call(ctx);\r\n            break;\r\n\r\n          case 2:\r\n            hItem.h.call(ctx, args[1]);\r\n            break;\r\n\r\n          case 3:\r\n            hItem.h.call(ctx, args[1], args[2]);\r\n            break;\r\n\r\n          default:\r\n            // have more than 2 given arguments\r\n            hItem.h.apply(ctx, args);\r\n            break;\r\n        }\r\n\r\n        if (hItem.one) {\r\n          _h.splice(i, 1);\r\n\r\n          len--;\r\n        } else {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\r\n    return this;\r\n  }\r\n};\r\n\r\nfunction normalizeQuery(host, query) {\r\n  var eventProcessor = host._$eventProcessor;\r\n\r\n  if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\r\n    query = eventProcessor.normalizeQuery(query);\r\n  }\r\n\r\n  return query;\r\n}\r\n\r\nfunction on(eventful, event, query, handler, context, isOnce) {\r\n  var _h = eventful._$handlers;\r\n\r\n  if (typeof query === 'function') {\r\n    context = handler;\r\n    handler = query;\r\n    query = null;\r\n  }\r\n\r\n  if (!handler || !event) {\r\n    return eventful;\r\n  }\r\n\r\n  query = normalizeQuery(eventful, query);\r\n\r\n  if (!_h[event]) {\r\n    _h[event] = [];\r\n  }\r\n\r\n  for (var i = 0; i < _h[event].length; i++) {\r\n    if (_h[event][i].h === handler) {\r\n      return eventful;\r\n    }\r\n  }\r\n\r\n  var wrap = {\r\n    h: handler,\r\n    one: isOnce,\r\n    query: query,\r\n    ctx: context || eventful,\r\n    // FIXME\r\n    // Do not publish this feature util it is proved that it makes sense.\r\n    callAtLast: handler.zrEventfulCallAtLast\r\n  };\r\n  var lastIndex = _h[event].length - 1;\r\n  var lastWrap = _h[event][lastIndex];\r\n  lastWrap && lastWrap.callAtLast ? _h[event].splice(lastIndex, 0, wrap) : _h[event].push(wrap);\r\n  return eventful;\r\n} // ----------------------\r\n// The events in zrender\r\n// ----------------------\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onclick\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseover\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseout\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousemove\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousewheel\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmousedown\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#onmouseup\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondrag\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragstart\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragend\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragenter\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragleave\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondragover\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n/**\r\n * @event module:zrender/mixin/Eventful#ondrop\r\n * @type {Function}\r\n * @default null\r\n */\r\n\r\n\r\nvar _default = Eventful;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}