{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @module echarts/chart/helper/SymbolDraw\r\n */\n\n/**\r\n * @constructor\r\n * @alias module:echarts/chart/helper/SymbolDraw\r\n * @param {module:zrender/graphic/Group} [symbolCtor]\r\n */\n\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/chart/helper/SymbolDraw.js"],"names":["graphic","require","SymbolClz","_util","isObject","SymbolDraw","symbolCtor","group","Group","_symbolCtor","symbolDrawProto","prototype","symbolNeedsDraw","data","point","idx","opt","isNaN","isIgnore","clipShape","contain","getItemVisual","updateData","normalizeUpdateOpt","seriesModel","hostModel","oldData","_data","SymbolCtor","seriesScope","makeSeriesScope","removeAll","diff","add","newIdx","getItemLayout","symbolEl","attr","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateProps","position","el","fadeOut","execute","isPersistent","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","start","end","traverse","enableAnimation","itemStyle","getModel","getItemStyle","hoverItemStyle","symbolRotate","get","symbolOffset","hoverAnimation","labelModel","hoverLabelModel","cursorStyle","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar graphic = require(\"../../util/graphic\");\r\n\r\nvar SymbolClz = require(\"./Symbol\");\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar isObject = _util.isObject;\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @module echarts/chart/helper/SymbolDraw\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @alias module:echarts/chart/helper/SymbolDraw\r\n * @param {module:zrender/graphic/Group} [symbolCtor]\r\n */\r\nfunction SymbolDraw(symbolCtor) {\r\n  this.group = new graphic.Group();\r\n  this._symbolCtor = symbolCtor || SymbolClz;\r\n}\r\n\r\nvar symbolDrawProto = SymbolDraw.prototype;\r\n\r\nfunction symbolNeedsDraw(data, point, idx, opt) {\r\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\r\n  // the symbol element shape. We use the same clip shape here as\r\n  // the line clip.\r\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\r\n}\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\r\n\r\n\r\nsymbolDrawProto.updateData = function (data, opt) {\r\n  opt = normalizeUpdateOpt(opt);\r\n  var group = this.group;\r\n  var seriesModel = data.hostModel;\r\n  var oldData = this._data;\r\n  var SymbolCtor = this._symbolCtor;\r\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\r\n  // stream mode to normal mode, where previous elements should be removed.\r\n\r\n  if (!oldData) {\r\n    group.removeAll();\r\n  }\r\n\r\n  data.diff(oldData).add(function (newIdx) {\r\n    var point = data.getItemLayout(newIdx);\r\n\r\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\r\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\r\n      symbolEl.attr('position', point);\r\n      data.setItemGraphicEl(newIdx, symbolEl);\r\n      group.add(symbolEl);\r\n    }\r\n  }).update(function (newIdx, oldIdx) {\r\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n    var point = data.getItemLayout(newIdx);\r\n\r\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\r\n      group.remove(symbolEl);\r\n      return;\r\n    }\r\n\r\n    if (!symbolEl) {\r\n      symbolEl = new SymbolCtor(data, newIdx);\r\n      symbolEl.attr('position', point);\r\n    } else {\r\n      symbolEl.updateData(data, newIdx, seriesScope);\r\n      graphic.updateProps(symbolEl, {\r\n        position: point\r\n      }, seriesModel);\r\n    } // Add back\r\n\r\n\r\n    group.add(symbolEl);\r\n    data.setItemGraphicEl(newIdx, symbolEl);\r\n  }).remove(function (oldIdx) {\r\n    var el = oldData.getItemGraphicEl(oldIdx);\r\n    el && el.fadeOut(function () {\r\n      group.remove(el);\r\n    });\r\n  }).execute();\r\n  this._data = data;\r\n};\r\n\r\nsymbolDrawProto.isPersistent = function () {\r\n  return true;\r\n};\r\n\r\nsymbolDrawProto.updateLayout = function () {\r\n  var data = this._data;\r\n\r\n  if (data) {\r\n    // Not use animation\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      var point = data.getItemLayout(idx);\r\n      el.attr('position', point);\r\n    });\r\n  }\r\n};\r\n\r\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\r\n  this._seriesScope = makeSeriesScope(data);\r\n  this._data = null;\r\n  this.group.removeAll();\r\n};\r\n/**\r\n * Update symbols draw by new data\r\n * @param {module:echarts/data/List} data\r\n * @param {Object} [opt] Or isIgnore\r\n * @param {Function} [opt.isIgnore]\r\n * @param {Object} [opt.clipShape]\r\n */\r\n\r\n\r\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\r\n  opt = normalizeUpdateOpt(opt);\r\n\r\n  function updateIncrementalAndHover(el) {\r\n    if (!el.isGroup) {\r\n      el.incremental = el.useHoverLayer = true;\r\n    }\r\n  }\r\n\r\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n    var point = data.getItemLayout(idx);\r\n\r\n    if (symbolNeedsDraw(data, point, idx, opt)) {\r\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\r\n      el.traverse(updateIncrementalAndHover);\r\n      el.attr('position', point);\r\n      this.group.add(el);\r\n      data.setItemGraphicEl(idx, el);\r\n    }\r\n  }\r\n};\r\n\r\nfunction normalizeUpdateOpt(opt) {\r\n  if (opt != null && !isObject(opt)) {\r\n    opt = {\r\n      isIgnore: opt\r\n    };\r\n  }\r\n\r\n  return opt || {};\r\n}\r\n\r\nsymbolDrawProto.remove = function (enableAnimation) {\r\n  var group = this.group;\r\n  var data = this._data; // Incremental model do not have this._data.\r\n\r\n  if (data && enableAnimation) {\r\n    data.eachItemGraphicEl(function (el) {\r\n      el.fadeOut(function () {\r\n        group.remove(el);\r\n      });\r\n    });\r\n  } else {\r\n    group.removeAll();\r\n  }\r\n};\r\n\r\nfunction makeSeriesScope(data) {\r\n  var seriesModel = data.hostModel;\r\n  return {\r\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\r\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\r\n    symbolRotate: seriesModel.get('symbolRotate'),\r\n    symbolOffset: seriesModel.get('symbolOffset'),\r\n    hoverAnimation: seriesModel.get('hoverAnimation'),\r\n    labelModel: seriesModel.getModel('label'),\r\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\r\n    cursorStyle: seriesModel.get('cursor')\r\n  };\r\n}\r\n\r\nvar _default = SymbolDraw;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}