{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * @alias module:echarts/component/helper/RoamController\r\n * @constructor\r\n * @mixin {module:zrender/mixin/Eventful}\r\n *\r\n * @param {module:zrender/zrender~ZRender} zr\r\n */\n\n\nfunction RoamController(zr) {\n  /**\r\n   * @type {Function}\r\n   */\n  this.pointerChecker;\n  /**\r\n   * @type {module:zrender}\r\n   */\n\n  this._zr = zr;\n  /**\r\n   * @type {Object}\r\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\r\n   * @param {Function} pointerChecker\r\n   *                   input: x, y\r\n   *                   output: boolean\r\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\r\n   * Notice: only enable needed types. For example, if 'zoom'\r\n   * is not needed, 'zoom' should not be enabled, otherwise\r\n   * default mousewheel behaviour (scroll page) will be disabled.\r\n   *\r\n   * @param  {boolean|string} [controlType=true] Specify the control type,\r\n   *                          which can be null/undefined or true/false\r\n   *                          or 'pan/move' or 'zoom'/'scale'\r\n   * @param {Object} [opt]\r\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\r\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      // By default, wheel do not trigger move.\n      moveOnMouseWheel: false,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\n    dx: dx,\n    dy: dy,\n    oldX: oldX,\n    oldY: oldY,\n    newX: x,\n    newY: y\n  });\n}\n\nfunction mouseup(e) {\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\n  var wheelDelta = e.wheelDelta;\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\n  var originX = e.offsetX;\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\n\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\n    return;\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\n  // their event both, and the final behavior is determined\n  // by event listener themselves.\n\n\n  if (shouldZoom) {\n    // Convenience:\n    // Mac and VM Windows on Mac: scroll up: zoom out.\n    // Windows: scroll up: zoom in.\n    // FIXME: Should do more test in different environment.\n    // wheelDelta is too complicated in difference nvironment\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\n    // although it has been normallized by zrender.\n    // wheelDelta of mouse wheel is bigger than touch pad.\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\n      scale: scale,\n      originX: originX,\n      originY: originY\n    });\n  }\n\n  if (shouldMove) {\n    // FIXME: Should do more test in different environment.\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\n\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\n      scrollDelta: scrollDelta,\n      originX: originX,\n      originY: originY\n    });\n  }\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  checkPointerAndTrigger(this, 'zoom', null, e, {\n    scale: scale,\n    originX: e.pinchX,\n    originY: e.pinchY\n  });\n}\n\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\n  }\n}\n\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  // Also provide behavior checker for event listener, for some case that\n  // multiple components share one listener.\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\n  controller.trigger(eventName, contollerEvent);\n} // settings: {\n//     zoomOnMouseWheel\n//     moveOnMouseMove\n//     moveOnMouseWheel\n// }\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n\n\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\n  var setting = settings[behaviorToCheck];\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Admin/node_modules/echarts/lib/component/helper/RoamController.js"],"names":["zrUtil","require","Eventful","eventTool","interactionMutex","RoamController","zr","pointerChecker","_zr","_opt","bind","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","call","setPointerChecker","enable","controlType","opt","disable","defaults","clone","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","preventDefaultMouseMove","on","off","dispose","isDragging","_dragging","isPinching","_pinching","mixin","e","isMiddleOrRightButtonOnMouseUpDown","target","draggable","x","offsetX","y","offsetY","_x","_y","isAvailableBehavior","gestureEvent","isTaken","oldX","oldY","dx","dy","stop","event","trigger","newX","newY","shouldZoom","shouldMove","wheelDelta","absWheelDeltaDelta","Math","abs","originX","originY","factor","scale","checkPointerAndTrigger","absDelta","scrollDelta","pinchScale","pinchX","pinchY","controller","eventName","behaviorToCheck","contollerEvent","settings","setting","isString","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\r\n\r\nvar eventTool = require(\"zrender/lib/core/event\");\r\n\r\nvar interactionMutex = require(\"./interactionMutex\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @alias module:echarts/component/helper/RoamController\r\n * @constructor\r\n * @mixin {module:zrender/mixin/Eventful}\r\n *\r\n * @param {module:zrender/zrender~ZRender} zr\r\n */\r\nfunction RoamController(zr) {\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  this.pointerChecker;\r\n  /**\r\n   * @type {module:zrender}\r\n   */\r\n\r\n  this._zr = zr;\r\n  /**\r\n   * @type {Object}\r\n   */\r\n\r\n  this._opt = {}; // Avoid two roamController bind the same handler\r\n\r\n  var bind = zrUtil.bind;\r\n  var mousedownHandler = bind(mousedown, this);\r\n  var mousemoveHandler = bind(mousemove, this);\r\n  var mouseupHandler = bind(mouseup, this);\r\n  var mousewheelHandler = bind(mousewheel, this);\r\n  var pinchHandler = bind(pinch, this);\r\n  Eventful.call(this);\r\n  /**\r\n   * @param {Function} pointerChecker\r\n   *                   input: x, y\r\n   *                   output: boolean\r\n   */\r\n\r\n  this.setPointerChecker = function (pointerChecker) {\r\n    this.pointerChecker = pointerChecker;\r\n  };\r\n  /**\r\n   * Notice: only enable needed types. For example, if 'zoom'\r\n   * is not needed, 'zoom' should not be enabled, otherwise\r\n   * default mousewheel behaviour (scroll page) will be disabled.\r\n   *\r\n   * @param  {boolean|string} [controlType=true] Specify the control type,\r\n   *                          which can be null/undefined or true/false\r\n   *                          or 'pan/move' or 'zoom'/'scale'\r\n   * @param {Object} [opt]\r\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\r\n   */\r\n\r\n\r\n  this.enable = function (controlType, opt) {\r\n    // Disable previous first\r\n    this.disable();\r\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\r\n      zoomOnMouseWheel: true,\r\n      moveOnMouseMove: true,\r\n      // By default, wheel do not trigger move.\r\n      moveOnMouseWheel: false,\r\n      preventDefaultMouseMove: true\r\n    });\r\n\r\n    if (controlType == null) {\r\n      controlType = true;\r\n    }\r\n\r\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\r\n      zr.on('mousedown', mousedownHandler);\r\n      zr.on('mousemove', mousemoveHandler);\r\n      zr.on('mouseup', mouseupHandler);\r\n    }\r\n\r\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\r\n      zr.on('mousewheel', mousewheelHandler);\r\n      zr.on('pinch', pinchHandler);\r\n    }\r\n  };\r\n\r\n  this.disable = function () {\r\n    zr.off('mousedown', mousedownHandler);\r\n    zr.off('mousemove', mousemoveHandler);\r\n    zr.off('mouseup', mouseupHandler);\r\n    zr.off('mousewheel', mousewheelHandler);\r\n    zr.off('pinch', pinchHandler);\r\n  };\r\n\r\n  this.dispose = this.disable;\r\n\r\n  this.isDragging = function () {\r\n    return this._dragging;\r\n  };\r\n\r\n  this.isPinching = function () {\r\n    return this._pinching;\r\n  };\r\n}\r\n\r\nzrUtil.mixin(RoamController, Eventful);\r\n\r\nfunction mousedown(e) {\r\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\r\n    return;\r\n  }\r\n\r\n  var x = e.offsetX;\r\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\r\n  // Mouse can be out of target when mouse moving.\r\n\r\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\r\n    this._x = x;\r\n    this._y = y;\r\n    this._dragging = true;\r\n  }\r\n}\r\n\r\nfunction mousemove(e) {\r\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n    return;\r\n  }\r\n\r\n  var x = e.offsetX;\r\n  var y = e.offsetY;\r\n  var oldX = this._x;\r\n  var oldY = this._y;\r\n  var dx = x - oldX;\r\n  var dy = y - oldY;\r\n  this._x = x;\r\n  this._y = y;\r\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\r\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\r\n    dx: dx,\r\n    dy: dy,\r\n    oldX: oldX,\r\n    oldY: oldY,\r\n    newX: x,\r\n    newY: y\r\n  });\r\n}\r\n\r\nfunction mouseup(e) {\r\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\r\n    this._dragging = false;\r\n  }\r\n}\r\n\r\nfunction mousewheel(e) {\r\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\r\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\r\n  var wheelDelta = e.wheelDelta;\r\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\r\n  var originX = e.offsetX;\r\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\r\n\r\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\r\n    return;\r\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\r\n  // their event both, and the final behavior is determined\r\n  // by event listener themselves.\r\n\r\n\r\n  if (shouldZoom) {\r\n    // Convenience:\r\n    // Mac and VM Windows on Mac: scroll up: zoom out.\r\n    // Windows: scroll up: zoom in.\r\n    // FIXME: Should do more test in different environment.\r\n    // wheelDelta is too complicated in difference nvironment\r\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\r\n    // although it has been normallized by zrender.\r\n    // wheelDelta of mouse wheel is bigger than touch pad.\r\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\r\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\r\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\r\n      scale: scale,\r\n      originX: originX,\r\n      originY: originY\r\n    });\r\n  }\r\n\r\n  if (shouldMove) {\r\n    // FIXME: Should do more test in different environment.\r\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\r\n\r\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\r\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\r\n      scrollDelta: scrollDelta,\r\n      originX: originX,\r\n      originY: originY\r\n    });\r\n  }\r\n}\r\n\r\nfunction pinch(e) {\r\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n    return;\r\n  }\r\n\r\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\r\n  checkPointerAndTrigger(this, 'zoom', null, e, {\r\n    scale: scale,\r\n    originX: e.pinchX,\r\n    originY: e.pinchY\r\n  });\r\n}\r\n\r\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\r\n    // When mouse is out of roamController rect,\r\n    // default befavoius should not be be disabled, otherwise\r\n    // page sliding is disabled, contrary to expectation.\r\n    eventTool.stop(e.event);\r\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\r\n  }\r\n}\r\n\r\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  // Also provide behavior checker for event listener, for some case that\r\n  // multiple components share one listener.\r\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\r\n  controller.trigger(eventName, contollerEvent);\r\n} // settings: {\r\n//     zoomOnMouseWheel\r\n//     moveOnMouseMove\r\n//     moveOnMouseWheel\r\n// }\r\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n\r\n\r\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\r\n  var setting = settings[behaviorToCheck];\r\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\r\n}\r\n\r\nvar _default = RoamController;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}