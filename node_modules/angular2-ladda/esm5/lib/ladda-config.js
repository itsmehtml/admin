import { __decorate } from "tslib";
import { Injectable } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var LaddaConfigArgs = /** @class */ (function () {
    function LaddaConfigArgs() {
    }
    return LaddaConfigArgs;
}());
export { LaddaConfigArgs };
export var configAttributes = {
    "data-style": "style",
    "data-spinner-size": "spinnerSize",
    "data-spinner-color": "spinnerColor",
    "data-spinner-lines": "spinnerLines",
};
var LaddaConfig = /** @class */ (function () {
    function LaddaConfig(config) {
        if (config === void 0) { config = {}; }
        Object.assign(this, config);
    }
    LaddaConfig.ctorParameters = function () { return [
        { type: LaddaConfigArgs }
    ]; };
LaddaConfig.ɵfac = function LaddaConfig_Factory(t) { return new (t || LaddaConfig)(ɵngcc0.ɵɵinject(LaddaConfigArgs)); };
LaddaConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LaddaConfig, factory: function (t) { return LaddaConfig.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LaddaConfig, [{
        type: Injectable
    }], function () { return [{ type: LaddaConfigArgs }]; }, null); })();
    return LaddaConfig;
}());
export { LaddaConfig };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFkZGEtY29uZmlnLmpzIiwic291cmNlcyI6WyJhbmd1bGFyMi1sYWRkYS9saWIvbGFkZGEtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBT3pDO2NBQUEsaUNBS0EsQ0FBQyxoREFMRDtFQUtBLHNCQUFDLEVBQUQsQ0FBQyxBQUxELElBS0MsL0JBSlUsSUFEWDtBQUE2QixJQUs3QixDQUFDO3FCQUVELE1BQU0sM0JBRE4sSUFEQSxzQkFBQztBQUVNLElBQUksSkFGWCxDQUFDLEFBTEQsSUFLQztjQUUwQixHQUEyQyxNQUNsRSx2QkFGSjtPQUVnQixFQUFFLE9BQU8sTUFDckIsdEJBRkosTUFBTSxDQUFDLElBQUksZ0JBQWdCLEdBQTJDO1NBRS9DLEVBQUUsYUFBYSx4QkFEdEMsSUFBSSxZQUFZLEVBQUUsT0FBTztHQUVyQixvQkFBb0IsRUFBRSxjQUFjLHZDQUR4QyxJQUFJLG1CQUFtQixFQUFFLGFBQWE7S0FFbEMsb0JBQW9CLEVBQUUsY0FBYyx6Q0FEeEMsSUFBSSxvQkFBb0IsRUFBRSxjQUFjO0VBRXZDLENBQUM7QUFBRixDQUFDLENBQUM7QUFHRixBQUFBO0lBQ0kscUJBQVksTUFBNEIsL0JBREcsSUFDM0MscUJBQVksTUFBNEI7UUFBNUIsdUJBQUEsRUFBQSxXQUE0Qiw1Q0FDNUMsUUFEZ0IsdUJBQUEsRUFBQSxXQUE0QjtRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxwQ0FBcEMsUUFBUSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDLExBQUwsSUFBSSxDQUFDO0FBQ0w7Z0JBSHdCLGVBQWUsL0JBSWUsZ0JBSjlCLGVBQWU7QUFBRztJQUQ3QixXQUFXLHdCQUR2QixVQUFVLEVBQUUsUUFDQSxXQUFXLENBSXZCLE1BQUQsa0JBQUMsR0FBQSxBQUpELElBSUMsVUFKWSw1R0FBQSxXQUFXLHdCQUR2QixVQUFVLEVBQUUsUUFDQSxXQUFXLENBSXZCO0VBSnVCOzs7eUVBS3hCO0FBQUMsSUFERCxrQkFBQztBQUNBLENBREEsQUFKRCxJQUlDOztBQTFCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuZXhwb3J0IHR5cGUgbGFkZGFTdHlsZSA9XHJcbiAgICBcImV4cGFuZC1sZWZ0XCIgfCBcImV4cGFuZC1yaWdodFwiIHwgXCJleHBhbmQtdXBcIiB8IFwiZXhwYW5kLWRvd25cIiB8XHJcbiAgICBcImNvbnRyYWN0XCIgfCBcImNvbnRyYWN0LW92ZXJsYXlcIiB8IFwiem9vbS1pblwiIHwgXCJ6b29tLW91dFwiIHxcclxuICAgIFwic2xpZGUtbGVmdFwiIHwgXCJzbGlkZS1yaWdodFwiIHwgXCJzbGlkZS11cFwiIHwgXCJzbGlkZS1kb3duXCI7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTGFkZGFDb25maWdBcmdzIHtcclxuICAgIHN0eWxlPzogbGFkZGFTdHlsZTtcclxuICAgIHNwaW5uZXJTaXplPzogbnVtYmVyO1xyXG4gICAgc3Bpbm5lckNvbG9yPzogc3RyaW5nO1xyXG4gICAgc3Bpbm5lckxpbmVzPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgbGV0IGNvbmZpZ0F0dHJpYnV0ZXM6IHtba2V5OiBzdHJpbmddOiBrZXlvZiBMYWRkYUNvbmZpZ0FyZ3N9ID0ge1xyXG4gICAgXCJkYXRhLXN0eWxlXCI6IFwic3R5bGVcIixcclxuICAgIFwiZGF0YS1zcGlubmVyLXNpemVcIjogXCJzcGlubmVyU2l6ZVwiLFxyXG4gICAgXCJkYXRhLXNwaW5uZXItY29sb3JcIjogXCJzcGlubmVyQ29sb3JcIixcclxuICAgIFwiZGF0YS1zcGlubmVyLWxpbmVzXCI6IFwic3Bpbm5lckxpbmVzXCIsXHJcbn07XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBMYWRkYUNvbmZpZyBpbXBsZW1lbnRzIExhZGRhQ29uZmlnQXJncyB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IExhZGRhQ29uZmlnQXJncyA9IHt9KSB7XHJcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjb25maWcpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==